<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Spire.Pdf</name>
    </assembly>
    <members>
        <member name="M:Spire.Pdf.Exporting.XPS.Reader.XPSDataReader.ReadName(System.String,System.Int32@)">
            <summary>
            Reads the Name of the element
            </summary>
            <param name="data">XPS data</param>
            <param name="position">Reader position</param>
            <returns>Name</returns>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Reader.XPSDataReader.ReadBoolean(System.String,System.Int32@)">
            <summary>
            Reads the boolean value from the Data
            </summary>
            <param name="data">XPS data</param>
            <param name="position">Reader position</param>
            <returns>True if the next value is boolean</returns>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Reader.XPSDataReader.ReadDouble(System.String,System.Int32@)">
            <summary>
            Reads the float from the data.
            </summary>
            <param name="data">XPS data</param>
            <param name="position">Reader position</param>
            <returns>float value</returns>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Reader.XPSDataReader.ReadPoint(System.String,System.Int32@)">
            <summary>
            Reads the point from the data
            </summary>
            <param name="data">XPS data</param>
            <param name="position">Reader position</param>
            <returns>point</returns>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Reader.XPSDataReader.ReadMatrix(System.String,System.Int32@)">
            <summary>
            Reads the matrix from the data
            </summary>
            <param name="data">XPS data</param>
            <param name="position">Reader position</param>
            <returns>Matrix</returns>
        </member>
        <member name="T:Spire.Pdf.Lists.PdfMarkerBase">
            <summary>
            Represents base class for markers.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfMarkerBase.Font">
            <summary>
            Gets or sets marker font.
            </summary>		
        </member>
        <member name="P:Spire.Pdf.Lists.PdfMarkerBase.Brush">
            <summary>
            Gets or sets marker brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfMarkerBase.Pen">
            <summary>
            Gets or sets marker pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfMarkerBase.StringFormat">
            <summary>
            Gets or sets the format.
            </summary>
            <value>The format.</value>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfMarkerBase.Alignment">
            <summary>
            Gets or sets a value indicating whether the marker is
            situated at the left of the list or at the right of the list.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridRow.#ctor(Spire.Pdf.Grid.PdfGrid)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="parentGrid">The parent grid.</param>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridRow.ApplyStyle(Spire.Pdf.Grid.PdfGridCellStyle)">
            <summary>
            Applies the cell style to all the cells present in a row.
            </summary>
            <param name="cellStyle">The cell style.</param>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridRow.Cells">
            <summary>
            Gets the cells.
            </summary>
            <value>The cells.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridRow.Style">
            <summary>
            Gets or sets the row style.
            </summary>
            <value>The row style.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridRow.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridRowCollection.Add">
            <summary>
            Adds this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridRowCollection.SetSpan(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the span.
            </summary>
            <param name="rowIndex">Index of the row.</param>
            <param name="cellIndex">Index of the cell.</param>
            <param name="rowSpan">The row span.</param>
            <param name="colSpan">The col span.</param>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridRowCollection.ApplyStyle(Spire.Pdf.Grid.PdfGridStyleBase)">
            <summary>
            Applies the style.
            </summary>
            <param name="style">The style.</param>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridHeaderCollection.Add(System.Int32)">
            <summary>
            Adds the specified count.
            </summary>
            <param name="count">The count.</param>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridHeaderCollection.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridHeaderCollection.ApplyStyle(Spire.Pdf.Grid.PdfGridStyleBase)">
            <summary>
            Applies the style.
            </summary>
            <param name="style">The style.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Spire.Pdf.Grid.PdfGridHeaderCollection.GetEnumerator" -->
        <member name="P:Spire.Pdf.Grid.PdfGridHeaderCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridHeaderCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridHeaderCollection.PdfGridHeaderRowEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridHeaderCollection.PdfGridHeaderRowEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridHeaderCollection.PdfGridHeaderRowEnumerator.Current">
            <summary>
            Gets the current.
            </summary>
            <value>The current.</value>
        </member>
        <member name="T:Spire.Pdf.PdfPageTemplateElement">
            <summary>
            Describes a page template object that can be used as header/footer, watermark or stamp.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfPageTemplateElement.#ctor(System.Drawing.RectangleF)">
            <summary>
            Creates a new page template.
            </summary>
            <param name="bounds">Bounds of the template.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageTemplateElement.#ctor(System.Drawing.RectangleF,Spire.Pdf.PdfNewPage)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="bounds">The bounds.</param>
            <param name="page">The page.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageTemplateElement.#ctor(System.Drawing.PointF,System.Drawing.SizeF)">
            <summary>
            Creates a new page template.
            </summary>
            <param name="location">Location of the template.</param>
            <param name="size">Size of the template.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageTemplateElement.#ctor(System.Drawing.PointF,System.Drawing.SizeF,Spire.Pdf.PdfNewPage)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="location">The location.</param>
            <param name="size">The size.</param>
            <param name="page">The page.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageTemplateElement.#ctor(System.Drawing.SizeF)">
            <summary>
            Creates new page template object.
            </summary>
            <param name="size">Size of the template.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageTemplateElement.#ctor(System.Single,System.Single)">
            <summary>
            Creates a new page template.
            </summary>
            <param name="width">Width of the template.</param>
            <param name="height">Height of the template.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageTemplateElement.#ctor(System.Single,System.Single,Spire.Pdf.PdfNewPage)">
            <summary>
            Creates a new page template.
            </summary>
            <param name="width">Width of the template.</param>
            <param name="height">Height of the template.</param>
            <param name="page">The Current Page object.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageTemplateElement.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new page template.
            </summary>
            <param name="x">X co-ordinate of the template.</param>
            <param name="y">Y co-ordinate of the template.</param>
            <param name="width">Width of the template.</param>
            <param name="height">Height of the template.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageTemplateElement.#ctor(System.Single,System.Single,System.Single,System.Single,Spire.Pdf.PdfNewPage)">
            <summary>
            Creates a new page template.
            </summary>
            <param name="x">X co-ordinate of the template.</param>
            <param name="y">Y co-ordinate of the template.</param>
            <param name="width">Width of the template.</param>
            <param name="height">Height of the template.</param>
            <param name="page">The Current Page object.</param>
        </member>
        <member name="P:Spire.Pdf.PdfPageTemplateElement.Dock">
            <summary>
            Gets or sets the dock style of the page template element.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageTemplateElement.Alignment">
            <summary>
            Gets or sets alignment of the page template element.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageTemplateElement.Foreground">
            <summary>
            Indicates whether the page template is located in front of 
            the page layers or behind of it.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageTemplateElement.Background">
            <summary>
            Indicates whether the page template is located behind of 
            the page layers or in front of it.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageTemplateElement.Location">
            <summary>
            Gets or sets location of the page template element.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageTemplateElement.X">
            <summary>
            Gets or sets X co-ordinate of the template element on the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageTemplateElement.Y">
            <summary>
            Gets or sets Y co-ordinate of the template element on the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageTemplateElement.Size">
            <summary>
            Gets or sets size of the page template element.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageTemplateElement.Width">
            <summary>
            Gets or sets width of the page template element.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageTemplateElement.Height">
            <summary>
            Gets or sets height of the page template element.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageTemplateElement.Bounds">
            <summary>
            Gets or sets bounds of the page template element.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageTemplateElement.Graphics">
            <summary>
            Gets graphics context of the page template element.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfPageOrientation">
            <summary>
            Enumerator that implements page orientations.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageOrientation.Portrait">
            <summary>
            Portrait orientation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageOrientation.Landscape">
            <summary>
            Landscape orientation.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfPageRotateAngle">
            <summary>
            The number of degrees by which the page should be rotated clockwise when displayed or printed.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageRotateAngle.RotateAngle0">
            <summary>
            The page is rotated as 0 angle.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageRotateAngle.RotateAngle90">
            <summary>
            The page is rotated as 90 angle.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageRotateAngle.RotateAngle180">
            <summary>
            The page is rotated as 180 angle.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageRotateAngle.RotateAngle270">
            <summary>
            The page is rotated as 270 angle.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfNumberStyle">
            <summary>
            Specifies numbering style of page labels.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfNumberStyle.None">
            <summary>
            No numbering at all.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfNumberStyle.Numeric">
            <summary>
            Decimal arabic numerals.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfNumberStyle.LowerLatin">
            <summary>
            Lowercase letters a-z.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfNumberStyle.LowerRoman">
            <summary>
            Lowercase roman numerals.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfNumberStyle.UpperLatin">
            <summary>
            Uppercase letters A-Z.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfNumberStyle.UpperRoman">
            <summary>
            Uppercase roman numerals.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfDockStyle">
            <summary>
            Specifies the docking style of the page template.
            </summary>
            <remarks>This enumeration is used in  class.</remarks>
        </member>
        <member name="F:Spire.Pdf.PdfDockStyle.None">
            <summary>
            The page template is not docked.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfDockStyle.Bottom">
            <summary>
            The page template edge is docked to the bottom page's side.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfDockStyle.Top">
            <summary>
            The page template edge is docked to the top page's side.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfDockStyle.Left">
            <summary>
            The page template edge is docked to the left page's side.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfDockStyle.Right">
            <summary>
            The page template edge is docked to the right page's side.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfDockStyle.Fill">
            <summary>
            The page template stretch on full page.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfAlignmentStyle">
            <summary>
            Specifies how the page template is aligned relative to the template area.    
            </summary>
            <remarks>This enumeration is used in  class.</remarks>
        </member>
        <member name="F:Spire.Pdf.PdfAlignmentStyle.None">
            <summary>
            Specifies no alignment.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfAlignmentStyle.TopLeft">
            <summary>
            The template is top left aligned.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfAlignmentStyle.TopCenter">
            <summary>
            The template is top center aligned.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfAlignmentStyle.TopRight">
            <summary>
            The template is top right aligned.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfAlignmentStyle.MiddleLeft">
            <summary>
            The template is middle left aligned.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfAlignmentStyle.MiddleCenter">
            <summary>
            The template is middle center aligned.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfAlignmentStyle.MiddleRight">
            <summary>
            The template is middle right aligned.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfAlignmentStyle.BottomLeft">
            <summary>
            The template is bottom left aligned.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfAlignmentStyle.BottomCenter">
            <summary>
            The template is bottom center aligned.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfAlignmentStyle.BottomRight">
            <summary>
             The template is bottom right aligned.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfPageLayout">
            <summary>
            A name object specifying the page layout to be used when the
            document is opened.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageLayout.SinglePage">
            <summary>
            Default Value. Display one page at a time.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageLayout.OneColumn">
            <summary>
            Display the pages in one column.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageLayout.TwoColumnLeft">
            <summary>
            Display the pages in two columns, with odd numbered
            pages on the left.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageLayout.TwoColumnRight">
            <summary>
            Display the pages in two columns, with odd numbered
            pages on the right.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageLayout.TwoPageLeft">
            <summary>
            Display the pages two at a time, with odd-numbered pages on the left
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageLayout.TwoPageRight">
            <summary>
            Display the pages two at a time, with odd-numbered pages on the right
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfPageMode">
            <summary>
            Represents mode of document displaying.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageMode.UseNone">
            <summary>
            Default value. Neither document outline nor thumbnail images visible.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageMode.UseOutlines">
            <summary>
            Document outline visible.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageMode.UseThumbs">
            <summary>
            Thumbnail images visible.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageMode.FullScreen">
            <summary>
            Full-screen mode, with no menu bar, window
            controls, or any other window visible.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageMode.UseOC">
            <summary>
            Optional content group panel visible.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageMode.UseAttachments">
            <summary>
            Attachments are visible.
            </summary>
        </member>
        <member name="F:Spire.Pdf.TemplateType.None">
            <summary>
            Page template is not used as header.
            </summary>
        </member>
        <member name="F:Spire.Pdf.TemplateType.Top">
            <summary>
            Page template is used as Top.
            </summary>
        </member>
        <member name="F:Spire.Pdf.TemplateType.Bottom">
            <summary>
            Page template is used as Bottom.
            </summary>
        </member>
        <member name="F:Spire.Pdf.TemplateType.Left">
            <summary>
            Page template is used as Left.
            </summary>
        </member>
        <member name="F:Spire.Pdf.TemplateType.Right">
            <summary>
            Page template is used as Right.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfTransitionStyle">
            <summary>
            Enumeration of possible transition styles when moving to the page from another 
            during a presentation
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionStyle.Split">
            <summary>
            Two lines sweep across the screen, revealing the new page. The lines may be either 
            horizontal or vertical and may move inward from the edges of the page or outward 
            from the center.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionStyle.Blinds">
            <summary>
            Multiple lines, evenly spaced across the screen, synchronously sweep in the same 
            direction to reveal the new page. The lines may be either horizontal or vertical.
            Horizontal lines move downward; vertical lines move to the right.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionStyle.Box">
            <summary>
            A rectangular box sweeps inward from the edges of the page or outward from the center,
            revealing the new page.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionStyle.Wipe">
            <summary>
            A single line sweeps across the screen from one edge to the other, revealing the new page.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionStyle.Dissolve">
            <summary>
            The old page dissolves gradually to reveal the new one.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionStyle.Glitter">
            <summary>
            Similar to Dissolve, except that the effect sweeps across the page in a wide band moving from 
            one side of the screen to the other.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionStyle.Replace">
            <summary>
            The new page simply replaces the old one with no special transition effect.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionStyle.Fly">
            <summary>
            Changes are flown out or in, to or from a location that is offscreen.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionStyle.Push">
            <summary>
            The old page slides off the screen while the new page slides in, pushing the old page out.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionStyle.Cover">
            <summary>
            The new page slides on to the screen, covering the old page.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionStyle.Uncover">
            <summary>
            The old page slides off the screen, uncovering the new page.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionStyle.Fade">
            <summary>
            The new page gradually becomes visible through the old one.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfTransitionDimension">
            <summary>
            Enumeration of transition dimensions.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionDimension.Horizontal">
            <summary>
            Horizontal effect.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionDimension.Vertical">
            <summary>
            Vertical effect.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfTransitionMotion">
            <summary>
            Enumeration of transition motions.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionMotion.Inward">
            <summary>
            Inward motion from the edges of the page to center..
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionMotion.Outward">
            <summary>
            Outward motion from the center of the page to edges.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfTransitionDirection">
            <summary>
            Enumeration of transition directions.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionDirection.LeftToRight">
            <summary>
            Left to Right direction.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionDirection.BottomToTop">
            <summary>
            Bottom to Top direction.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionDirection.RightToLeft">
            <summary>
            Right to Left direction.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionDirection.TopToBottom">
            <summary>
            Top to Bottom direction.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfTransitionDirection.TopLeftToBottomRight">
            <summary>
            TopLeft to BottomRight direction.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfPrintPageScaling">
            <summary>
            Pdf Print Page Scale type
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPrintPageScaling.FitSize">
            <summary>
            Adaptive content size
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPrintPageScaling.ActualSize">
            <summary>
            The actual size of the content
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPrintPageScaling.ShrinkOversized">
            <summary>
            Shrink oversized pages
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPrintPageScaling.CustomSacle">
            <summary>
            Custom Scale
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Spire.Pdf.IO.CrossTable.m_initialNumberOfSubsection" -->
        <member name="T:Spire.Pdf.Graphics.PdfPath">
            <summary>
            Implements graphics path, which is a sequence of primitive graphics elements.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfFillElement">
            <summary>
            Represents an element that could be drawn and/or filled.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfDrawWidget">
            <summary>
            Describes a graphics element which can be drawn by a pen.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfShapeWidget">
            <summary>
            Base class for the main shapes.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfLayoutWidget">
            <summary>
            Represents the base class for all elements that can be layout on the pages.
            </summary>
            [System.Security.Permissions.PermissionSet(System.Security.Permissions.SecurityAction.Assert, Name = "FullTrust")]
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfGraphicsWidget">
            <summary>
            Represents a base class for all page graphics elements.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfGraphicsWidget.Draw(Spire.Pdf.Graphics.PdfCanvas)">
            <summary>
            Draws an element on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the element should be printed.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfGraphicsWidget.Draw(Spire.Pdf.Graphics.PdfCanvas,System.Drawing.PointF)">
            <summary>
            Draws an element on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the element should be printed.</param>
            <param name="location">Location of the element in the Graphics' co-ordinate system.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfGraphicsWidget.Draw(Spire.Pdf.Graphics.PdfCanvas,System.Single,System.Single)">
            <summary>
            Draws an element on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the element should be printed.</param>
            <param name="x">X co-ordinate of the element.</param>
            <param name="y">Y co-ordinate of the element.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfLayoutWidget.Draw(Spire.Pdf.PdfPageBase,System.Drawing.PointF)">
            <summary>
            Draws the element on the page.
            </summary>
            <param name="page">Current page where the element should be drawn.</param>
            <param name="location">Start location on the page.</param>
            <returns>Layouting result.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfLayoutWidget.Draw(Spire.Pdf.PdfPageBase,System.Single,System.Single)">
            <summary>
            Draws the element on the page.
            </summary>
            <param name="page">Current page where the element should be drawn.</param>
            <param name="x">X co-ordinate of the element on the page.</param>
            <param name="y">Y co-ordinate of the element on the page.</param>
            <returns>Lay outing result.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfLayoutWidget.Draw(Spire.Pdf.PdfPageBase,System.Drawing.RectangleF)">
            <summary>
            Draws the element on the page.
            </summary>
            <param name="page">Current page where the element should be drawn.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the element.</param>
            <returns>Lay outing result.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfLayoutWidget.Draw(Spire.Pdf.PdfPageBase,System.Drawing.RectangleF,System.Boolean)">
            <summary>
            Draws the element on the page.
            </summary>
            <param name="page">Current page where the element should be drawn.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the element.</param>
            <returns>Lay outing result.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfLayoutWidget.Draw(Spire.Pdf.PdfPageBase,System.Drawing.PointF,Spire.Pdf.Graphics.PdfTextLayout)">
            <summary>
            Draws the element on the page.
            </summary>
            <param name="page">Current page where the element should be drawn.</param>
            <param name="location">Start location on the page.</param>
            <param name="format">Lay outing format.</param>
            <returns>Lay outing result.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfLayoutWidget.Draw(Spire.Pdf.PdfPageBase,System.Single,System.Single,Spire.Pdf.Graphics.PdfTextLayout)">
            <summary>
            Draws the element on the page.
            </summary>
            <param name="page">Current page where the element should be drawn.</param>
            <param name="x">X co-ordinate of the element on the page.</param>
            <param name="y">Y co-ordinate of the element on the page.</param>
            <param name="format">Layout format.</param>
            <returns>Layout result.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfLayoutWidget.Draw(Spire.Pdf.PdfPageBase,System.Drawing.RectangleF,Spire.Pdf.Graphics.PdfTextLayout)">
            <summary>
            Draws the element on the page.
            </summary>
            <param name="page">Current page where the element should be drawn.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the element.</param>
            <param name="format">Layout format.</param>
            <returns>Layout result.</returns>
        </member>
        <member name="E:Spire.Pdf.Graphics.PdfLayoutWidget.EndPageLayout">
            <summary>
            Event. Raises after the element was printed on the page.
            </summary>
        </member>
        <member name="E:Spire.Pdf.Graphics.PdfLayoutWidget.BeginPageLayout">
            <summary>
            Event. Raises before the element should be printed on the page.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfShapeWidget.GetBounds">
            <summary>
            Gets the bounds.
            </summary>
            <returns>rect</returns>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfDrawWidget.Pen">
            <summary>
            Gets or sets a pen that will be used to draw the element.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfFillElement.Brush">
            <summary>
            Gets or sets the brush.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.#ctor(System.Drawing.PointF[],System.Byte[])">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="points">The points.</param>
            <param name="pathTypes">The path types.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.#ctor(Spire.Pdf.Graphics.PdfPen)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.#ctor(Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.#ctor(Spire.Pdf.Graphics.PdfBrush,Spire.Pdf.Graphics.PdfFillMode)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="fillMode">The fill mode.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.#ctor(Spire.Pdf.Graphics.PdfPen,System.Drawing.PointF[],System.Byte[])">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="points">The points.</param>
            <param name="pathTypes">The path types.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.#ctor(Spire.Pdf.Graphics.PdfBrush,Spire.Pdf.Graphics.PdfFillMode,System.Drawing.PointF[],System.Byte[])">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="fillMode">The fill mode.</param>
            <param name="points">The points.</param>
            <param name="pathTypes">The path types.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.#ctor(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,Spire.Pdf.Graphics.PdfFillMode)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="fillMode">The fill mode.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Adds an arc.
            </summary>
            <param name="rectangle">The boundaries of the arc.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Adds an arc.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Adds a bezier curve.
            </summary>
            <param name="startPoint">The start point.</param>
            <param name="firstControlPoint">The first control point.</param>
            <param name="secondControlPoint">The second control point.</param>
            <param name="endPoint">The end point.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Adds a bezier curve.
            </summary>
            <param name="startPointX">The start point X.</param>
            <param name="startPointY">The start point Y.</param>
            <param name="firstControlPointX">The first control point X.</param>
            <param name="firstControlPointY">The first control point Y.</param>
            <param name="secondControlPointX">The second control point X.</param>
            <param name="secondControlPointY">The second control point Y.</param>
            <param name="endPointX">The end point X.</param>
            <param name="endPointY">The end point Y.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.AddEllipse(System.Drawing.RectangleF)">
            <summary>
            Adds an ellipse.
            </summary>
            <param name="rectangle">The boundaries of the ellipse.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Adds an ellipse.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Adds a line.
            </summary>
            <param name="point1">The point1.</param>
            <param name="point2">The point2.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Adds a line.
            </summary>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="x2">The x2.</param>
            <param name="y2">The y2.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.AddPath(Spire.Pdf.Graphics.PdfPath)">
            <summary>
            Appends the path specified to this one.
            </summary>
            <param name="path">The path, which should be appended.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.AddPath(System.Drawing.PointF[],System.Byte[])">
            <summary>
            Appends the path specified by the points and their types to this one.
            </summary>
            <param name="pathPoints">The points.</param>
            <param name="pathTypes">The path point types.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.AddPie(System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Appends the pie to this path.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Appends the pie to this path.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.AddPolygon(System.Drawing.PointF[])">
            <summary>
            Append the closed polygon to this path.
            </summary>
            <param name="points">The points of the polygon.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.AddRectangle(System.Drawing.RectangleF)">
            <summary>
            Appends the rectangle to this path.
            </summary>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.AddRectangle(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Appends the rectangle to this path.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.StartFigure">
            <summary>
            Starts a new figure.
            </summary>
            <remarks>The next added primitive will start a new figure.</remarks>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.CloseFigure">
            <summary>
            Closes the last figure.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.CloseAllFigures">
            <summary>
            Closes all non-closed figures.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPath.GetLastPoint">
            <summary>
            Gets the last point.
            </summary>
            <returns>The last point.</returns>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPath.FillMode">
            <summary>
            Gets or sets the fill mode.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPath.PathPoints">
            <summary>
            Gets the path points.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPath.PathTypes">
            <summary>
            Gets the path point types.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPath.PointCount">
            <summary>
            Gets the point count.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPath.LastPoint">
            <summary>
            Gets the last point.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interfaces.IPdfWrapper.Element">
            <summary>
            Gets the element.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfStateItemCollection">
            <summary>
            Represents state item collection.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfCollection">
            <summary>
            Base collection of the pdf objects.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfCollection.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>Returns an enumerator that iterates through a collection.</returns>
        </member>
        <member name="P:Spire.Pdf.PdfCollection.Count">
            <summary>
            Gets number of the elements in the collection.
            </summary>
            <value>The total number of elements in the collection.</value>
        </member>
        <member name="P:Spire.Pdf.PdfCollection.List">
            <summary>
            Gets internal list of the collection.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStateItemCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>  
            <value>The index of specified  item.</value>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfComboBoxWidgetFieldWidget">
            <summary>
            Represents the combo box field of an existing item.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfChoiceWidgetFieldWidget">
            <summary>
            Represents a choice field of an existing PDF document`s form.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfStyledFieldWidget">
            <summary>
            Represents loaded styled field.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfFieldWidget">
            <summary>
            Represents base class for loaded fields.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfField">
            <summary>
            Represents field of the Pdf document's interactive form.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfField.#ctor(Spire.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="page">The page where the field should be placed.</param>
            <param name="name">The name.</param>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfField.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfField.Form">
            <summary>
            Gets the form.
            </summary>
            <value>The form.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfField.MappingName">
            <summary>
            Gets or sets the mapping name to be used when exporting interactive form 
            field data from the document.
            </summary>
            <value>The mapping name.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfField.Export">
            <summary>
            Gets or sets a value indicating whether this  is export.
            </summary>
            <value><c>true</c> if export; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfField.ReadOnly">
            <summary>
            Gets or sets a value indicating whether [read only].
            </summary>
            <value> if the field is read only, set to <c>true</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfField.Required">
            <summary>
            Gets or sets a value indicating whether this  is required.
            </summary>
            <value><c>true</c> if required; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfField.ToolTip">
            <summary>
            Gets or sets the tool tip.
            </summary>
            <value>The tool tip.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfField.Page">
            <summary>
            Gets the page.
            </summary>
            <value>The page.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfField.Flatten">
            <summary>
            Gets or sets a value indicating whether this  is flatten.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfField.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="F:Spire.Pdf.Widget.PdfFieldWidget.ObjectID">
            <summary>
            Form field identifier
            </summary>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfFieldWidget.SetName(System.String)">
            <summary>
            Sets the name of the field.
            </summary>
            <param name="name">New name of the field.</param>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFieldWidget.Name">
            <summary>
            Gets the name of the field.
            </summary>
            <value>A string value specifying the name of the field.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFieldWidget.MappingName">
            <summary>
            Gets or sets the mapping name to be used when exporting interactive form
            field data from the document.
            </summary>
            <value>A string value specifying the mapping name of the field. </value>        
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFieldWidget.ToolTip">
            <summary>
            Gets or sets the tool tip.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFieldWidget.Page">
            <summary>
            Gets the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFieldWidget.ReadOnly">
            <summary>
            Gets or sets a value indicating whether [read only].
            </summary>
            <value>True if the field is read-only, false otherwise. Default is false.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFieldWidget.Required">
            <summary>
            Gets or sets a value indicating whether this  is required.
            </summary>
            <value>True if the field is required, false otherwise. Default is false.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFieldWidget.Export">
            <summary>
            Gets or sets a value indicating whether this  is export.
            </summary>
            <value><c>true</c> if export; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFieldWidget.FormWidget">
            <summary>
            Gets the form.
            </summary>
            <value>The form.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStyledFieldWidget.Actions">
            <summary>
            Gets the actions of the field.
            </summary>
            <value>The actions.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStyledFieldWidget.MouseUp">
            <summary>
            Gets or sets the action to be performed when the mouse button is released 
            inside the annotations active area..
            </summary>
            <value>The mouse up action.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStyledFieldWidget.MouseDown">
            <summary>
            Gets or sets the action to be performed when the mouse button is pressed inside the 
            annotations active area.
            </summary>
            <value>The mouse down action.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStyledFieldWidget.GotFocus">
            <summary>
            Gets or sets the action to be performed when the annotation receives the 
            input focus.
            </summary>
            <value>The got focus action.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStyledFieldWidget.LostFocus">
            <summary>
            Gets or sets the action to be performed when the annotation loses the 
            input focus.
            </summary>
            <value>The lost focus action.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStyledFieldWidget.Bounds">
            <summary>
            Gets or sets the bounds.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStyledFieldWidget.Location">
            <summary>
            Gets or sets the location.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStyledFieldWidget.Size">
            <summary>
            Gets or sets the size.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStyledFieldWidget.BorderStyle">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStyledFieldWidget.BorderColor">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStyledFieldWidget.BorderWidth">
            <summary>
            Gets or Sets the width of the border.
            </summary>
            <value>The width of the border.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStyledFieldWidget.Font">
            <summary>
            Gets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStyledFieldWidget.DefaultIndex">
            <summary>
            Gets the default index.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStyledFieldWidget.Visible">
            <summary>
            Gets a value indicating the visibility of the field.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfStyledFieldWidget.GraphicsProperties.#ctor(Spire.Pdf.Widget.PdfStyledFieldWidget)">
            <summary>
            Initializes a new instance of the  struct.
            </summary>
            <param name="fieldWidget">The field.</param>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfStyledFieldWidget.GraphicsProperties.#ctor(Spire.Pdf.Widget.PdfFieldWidgetItem)">
            <summary>
            Initializes a new instance of the  struct.
            </summary>
            <param name="widgetItem">The item.</param>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfChoiceWidgetFieldWidget.Values">
            <summary>
            Gets the collection of choice items.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfChoiceWidgetFieldWidget.SelectedIndex">
            <summary>
            Gets or sets the first selected item in the list.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfChoiceWidgetFieldWidget.SelectedValue">
            <summary>
            Gets or sets the value of the first selected item in the list.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfChoiceWidgetFieldWidget.SelectedWidgetItem">
            <summary>
            Gets the first selected item in the list.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfChoiceWidgetFieldWidget.SelectedItem">
            <summary>
            Gets the first selected item in the list.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfComboBoxWidgetFieldWidget.Editable">
            <summary>
            Gets or sets a value indicating whether this  is editable.
            </summary>
            <value>True if the drop down list is editable, false otherwise. Default is false.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfComboBoxWidgetFieldWidget.WidgetItems">
            <summary>
            Gets the collection of combo box items.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfCheckBoxWidgetFieldWidget">
            <summary>
            Represents check box of an existing PDF document`s form. 
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfStateFieldWidget">
            <summary>
            Represents the base class for loaded state field.
            </summary>   
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStateFieldWidget.WidgetItems">
            <summary>
            Gets the items collection.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfCheckBoxWidgetFieldWidget.Checked">
            <summary>
            Gets or sets a value indicating whether this  is checked.
            </summary>
            <value>True if the check box is checked, false otherwise. </value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfCheckBoxWidgetFieldWidget.WidgetWidgetItems">
            <summary>
            Gets the collection check box items.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfSoundAnnotationWidget">
            <summary>
            Represents the loaded sound annotation class.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfStyledAnnotationWidget">
            <summary>
            Represents the PdfLoadedStyledAnnotation.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfAnnotationWidget">
            <summary>
            Represents the base class for loaded annotation classes.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfAnnotation">
            <summary>
            Represents the base class for annotation objects.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfAnnotation.Color">
            <summary>
            Gets or sets the background of the annotations icon when closed.
            The title bar of the annotations pop-up window.
            The border of a link annotation.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfAnnotation.Border">
            <summary>
            Gets or sets annotation's border.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Spire.Pdf.Annotations.PdfAnnotation.Rectangle" -->
        <member name="P:Spire.Pdf.Annotations.PdfAnnotation.Location">
            <summary>
            Gets or sets location of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfAnnotation.Size">
            <summary>
            Gets or sets size of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfAnnotation.Page">
            <summary>
            Gets a page which this annotation is connected to.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfAnnotation.Text">
            <summary>
            Gets or sets content of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfAnnotation.Flags">
            <summary>
            Gets or sets annotation flags.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfAnnotation.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidget.ObjectID">
            <summary>
            Represents the Form field identifier
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfAnnotationWidget.SetText(System.String)">
            <summary>
            Sets the name of the field.
            </summary>
            <param name="name">New name of the field.</param>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfAnnotationWidget.PageWidget">
            <summary>
            Gets and sets the Page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfStyledAnnotationWidget.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfStyledAnnotationWidget.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Spire.Pdf.Annotations.PdfStyledAnnotationWidget.Bounds" -->
        <member name="P:Spire.Pdf.Annotations.PdfStyledAnnotationWidget.Border">
            <summary>
            Gets or sets the annotation's border.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfStyledAnnotationWidget.Location">
            <summary>
            Gets or sets the location.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfStyledAnnotationWidget.Size">
            <summary>
            Gets or sets the size.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfStyledAnnotationWidget.AnnotationFlags">
            <summary>
            Gets or sets the annotation flags.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfSoundAnnotationWidget.Sound">
            <summary>
            Gets or sets the sound of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfSoundAnnotationWidget.FileName">
            <summary>
            Gets the filename of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfSoundAnnotationWidget.Icon">
            <summary>
            Gets or sets the icon of the annotation.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfPageWidgetEnumerator">
            <summary>
            Implements enumerator to the loaded page collection.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageWidgetEnumerator.#ctor(Spire.Pdf.Widget.PdfPageCollection)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="collection">The collection.</param>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageWidgetEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element;
            false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageWidgetEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position,
            which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfPageWidgetEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <value></value>
            <returns>The current element in the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            The enumerator is positioned before the first element of the collection
            or after the last element. </exception>
        </member>
        <member name="T:Spire.Pdf.General.PdfFileSpecificationBase">
            <summary>
            Represents base class for file specification objects.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.PdfFileSpecificationBase.#ctor(System.String)">
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="P:Spire.Pdf.General.PdfFileSpecificationBase.FileName">
            <summary>
            Gets or sets the name of the file.
            </summary>
            <value>The name of the file.</value>
        </member>
        <member name="P:Spire.Pdf.General.PdfFileSpecificationBase.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToPsRenderer.m_textLeading">
            <summary>
            Text leading
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToPsRenderer.m_textScaling">
            <summary>
            horizontal scaling 
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToPsRenderer.m_wordSpacing">
            <summary>
            word spacing 
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToPsRenderer.m_currentTextElement">
            <summary>
            Current text element
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToPsRenderer.m_characterSpacing">
            <summary>
            Character spacing.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToPsRenderer.m_colorspaceTable">
            <summary>
            Colorspace table of page resource
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToPsRenderer.m_patternTable">
            <summary>
            Pattern table of page resource
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToPsRenderer.m_GraphicObjectData">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToPsRenderer.AddBezierCurve(System.String[])">
            <summary>
            
            </summary>
            <param name="curve"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToPsRenderer.AddBezierCurve1(System.String[])">
            <summary>
            
            </summary>
            <param name="curve"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToPsRenderer.AddBezierCurve2(System.String[])">
            <summary>
            AddBezierCurve2
            </summary>
            <param name="curve"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToPsRenderer.AddLine(System.String[])">
            <summary>
            
            </summary>
            <param name="line"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToPsRenderer.BeginPath(System.String[])">
            <summary>
            
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToPsRenderer.GetClipRectangle(System.String[])">
            <summary>
            Get Rectangle from pdf dictionary.
            </summary>
            <param name="rectangle"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToPsRenderer.Process">
            
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToPsRenderer.ExecuteCommand(Spire.Pdf.General.Render.PdfElement.PdfRecord)">
            <summary>
            Execute pdf command.
            </summary>
            <param name="record"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToPsRenderer.RenderTextElement(System.String[],System.String)">
            <summary>
            Render text element
            </summary>
            <param name="textElements">text elements</param>
            <param name="tokenType">token type</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToPsRenderer.RenderText(System.String,Spire.Pdf.General.Render.PdfElement.PdfFontStructure,System.String,System.Boolean)">
            <summary>
            Render text to pdf drawing context.
            </summary>
            <param name="tokenType"></param>
            <param name="structure"></param>
            <param name="decodedText"></param>
            <param name="increaseWidth"></param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Font.Common.IFontParser.Parse(Spire.Pdf.General.Paper.Font.Common.Locator.FontDefinition,Spire.Pdf.General.Paper.Font.TTF.Internals.Parsing.TTFFileReader)">
            <summary>
            Parses font from  fontReader and fontDefinition
            </summary>
            <param name="fontDefinition"></param>
            <param name="fontReader"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Font.CFF.CFFFontParser.Parse(Spire.Pdf.General.Paper.Font.Common.Locator.FontDefinition,Spire.Pdf.General.Paper.Font.TTF.Internals.Parsing.TTFFileReader)">
            <summary>
            
            </summary>
            <param name="fontDefinition"></param>
            <param name="fontReader"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfCheckBoxField">
            <summary>
            Represents check box field in the PDF form.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfCheckFieldBase">
            <summary>
            Represents base class for field which can be in checked and unchecked states.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfStyledField">
            <summary>
            Represents form's field with style parameters.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfStyledField.#ctor(Spire.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="page">The page where the field should be placed.</param>
            <param name="name">The name.</param>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfStyledField.Bounds">
            <summary>
            Gets or sets the bounds.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfStyledField.Location">
            <summary>
            Gets or sets the location.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfStyledField.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfStyledField.BorderColor">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfStyledField.BackColor">
            <summary>
            Gets or sets the color of the background.
            </summary>
            <value>The color of the background.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfStyledField.ForeColor">
            <summary>
            Gets or sets the color of the text.
            </summary>
            <value>The color of the text.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfStyledField.BorderWidth">
            <summary>
            Gets or sets the width of the border.
            </summary>
            <value>The width of the border.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfStyledField.HighlightMode">
            <summary>
            Gets or sets the highlighting mode.
            </summary>
            <value>The highlighting mode.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfStyledField.Font">
            <summary>
            Gets or sets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfStyledField.TextAlignment">
            <summary>
            Gets or sets the text alignment.
            </summary>
            <value>The text alignment.</value>
            <remarks>This property is meaningful for fields containing variable text only.
            </remarks>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfStyledField.Actions">
            <summary>
            Gets the actions of the field.
            </summary>
            <value>The actions.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfStyledField.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
            <value>The border style.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfStyledField.Visible">
            <summary>
            Gets or sets a value indicating whether this  is visible.
            </summary>
            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfCheckFieldBase.#ctor(Spire.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="page">The page where the fields should be placed.</param>
            <param name="name">The name of the check box field.</param>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfCheckFieldBase.Style">
            <summary>
            Gets or sets the style.
            </summary>
            <value>The  object specifies the style of the check box field.</value>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfCheckBoxField.#ctor(Spire.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="page">The page where the fields should be placed.</param>
            <param name="name">The name of the check box field.</param>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfCheckBoxField.Checked">
            <summary>
            Gets or sets a value indicating whether this  is checked.
            </summary>
            <value><c>true</c> if checked; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Implementation.Exporting.PdfToHtml.Html.HtmlTextWriter.FilesFolder">
            <summary>
            Get file Folder
            </summary>
        </member>
        <member name="T:Spire.Pdf.Common.PdfToXPSConverter">
            <summary>
            This class provides support for converting PDF into an XPS Document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Common.PdfToXPSConverter.ConvertToXPS(Spire.Pdf.PdfDocumentBase,System.IO.Stream)">
            <summary>
            Converts the specified WordDocument to PDF.
            </summary>
            <param name="wordDocument">The word document.</param>
            <returns>The PdfNewDocument.</returns>
        </member>
        <member name="M:Spire.Pdf.Common.PdfToXPSConverter.CreateDocument(Spire.Pdf.General.Paper.Base.DocumentInfo)">
            <summary>
            Creates the PDF document.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Common.PdfToXPSConverter.AddDocumentProperties(Spire.Pdf.PdfDocumentInformation)">
            <summary>
            Adds the document properties.
            </summary>
            <param name="docProperties">The doc properties.</param>
        </member>
        <member name="T:Spire.Pdf.AutomaticFields.PdfMultipleValueField">
            <summary>
            Represents automatic field which has the same value within the 
            </summary>
        </member>
        <member name="T:Spire.Pdf.AutomaticFields.PdfDynamicField">
            <summary>
            Represents automatic field which value is dynamically evaluated.
            </summary>
        </member>
        <member name="T:Spire.Pdf.AutomaticFields.PdfAutomaticField">
            <summary>
            Represents a fields which is calculated before the document saves.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfAutomaticField.Draw(Spire.Pdf.Graphics.PdfCanvas,System.Single,System.Single)">
            <summary>
            Draws an element on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the element should be printed.</param>
            <param name="x">X co-ordinate of the element.</param>
            <param name="y">Y co-ordinate of the element.</param>
            <exclude/>
        </member>
        <member name="P:Spire.Pdf.AutomaticFields.PdfAutomaticField.Bounds">
            <summary>
            Gets or sets the bounds of the field.
            </summary>
            <value>The bounds value.</value>
        </member>
        <member name="P:Spire.Pdf.AutomaticFields.PdfAutomaticField.Size">
            <summary>
            Gets or sets the size of the field.
            </summary>
            <value>The size of the field.</value>
        </member>
        <member name="P:Spire.Pdf.AutomaticFields.PdfAutomaticField.Location">
            <summary>
            Gets or sets the location of the field.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:Spire.Pdf.AutomaticFields.PdfAutomaticField.Font">
            <summary>
            Gets or sets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:Spire.Pdf.AutomaticFields.PdfAutomaticField.Brush">
            <summary>
            Gets or sets the brush.
            </summary>
            <value>The brush.</value>
        </member>
        <member name="P:Spire.Pdf.AutomaticFields.PdfAutomaticField.Pen">
            <summary>
            Gets or sets the pen.
            </summary>
            <value>The pen.</value>
        </member>
        <member name="P:Spire.Pdf.AutomaticFields.PdfAutomaticField.StringFormat">
            <summary>
            Gets or sets the string format.
            </summary>
            <value>The string format.</value>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfDynamicField.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfDynamicField.#ctor(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfDynamicField.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfDynamicField.#ctor(Spire.Pdf.Graphics.PdfFontBase,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfMultipleValueField.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfMultipleValueField.#ctor(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfMultipleValueField.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfMultipleValueField.#ctor(Spire.Pdf.Graphics.PdfFontBase,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="T:Spire.Pdf.AutomaticFields.PdfCreationDateField">
            <summary>
            Represents class to display creation date of the document.
            </summary>
        </member>
        <member name="T:Spire.Pdf.AutomaticFields.PdfSingleValueField">
            <summary>
            Represents automatic field which has the same value 
            in the whole document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfSingleValueField.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfSingleValueField.#ctor(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfSingleValueField.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfSingleValueField.#ctor(Spire.Pdf.Graphics.PdfFontBase,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfCreationDateField.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfCreationDateField.#ctor(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfCreationDateField.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfCreationDateField.#ctor(Spire.Pdf.Graphics.PdfFontBase,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">A object that specifies the font attributes (the family name, the size, and the style of the font) to use. </param>
            <param name="bounds">Specifies the location and size of the field.</param>
        </member>
        <member name="P:Spire.Pdf.AutomaticFields.PdfCreationDateField.DateFormatString">
            <summary>
            Gets or sets the format string.
            </summary>
            <value>The format string.</value>
        </member>
        <member name="T:Spire.Pdf.ColorSpace.PdfCalRGBColor">
            <summary>
            Represents a calibrated RGB color, based on a CalRGB colorspace. 
            </summary>
        </member>
        <member name="T:Spire.Pdf.ColorSpace.PdfComplexColor">
            <summary>
            Represents the extended color, based on a complex colorspace. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfComplexColor.#ctor(Spire.Pdf.ColorSpace.PdfColorSpaces)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="colorspace">The colorspace.</param>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfComplexColor.ColorSpace">
            <summary>
            Gets the Colorspace
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfCalRGBColor.#ctor(Spire.Pdf.ColorSpace.PdfColorSpaces)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="colorspace">The colorspace</param>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfCalRGBColor.Blue">
            <summary>
            Gets or sets the Blue value.
            </summary>
            <value>The blue level of this color.</value>
            <remarks>The acceptable range for this value is [0.0 1.0]. 0.0 means the darkest color that can be achieved, and 1.0 means the lightest. </remarks>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfCalRGBColor.Green">
            <summary>
            Gets or sets the green level for this color. 
            </summary>
            <value>The green level of this color. </value>
            <remarks>The acceptable range for this value is [0.0 1.0]. 0.0 means the darkest color that can be achieved, and 1.0 means the lightest color. </remarks>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfCalRGBColor.Red">
            <summary>
            Gets or sets the red level for this color.
            </summary>
            <value>The red level of this color.</value>
            <remarks>The acceptable range for this value is [0.0 1.0]. 0.0 means the darkest color that can be achieved, and 1.0 means the lightest color. </remarks>
        </member>
        <member name="T:Spire.Pdf.Barcode.PdfCode128ABarcode">
            <summary>
            Represents a Code128A barcode.
            </summary>
            <remarks> Only the following symbols are allowed in a Code 128 A barcode: NUL (\x00) SOH (\x01) STX (\x02) ETX (\x03) EOT (\x04) ENQ (\x05) ACK (\x06) BEL (\x07) BS (\x08) HT (\x09) LF (\x0A) VT (\x0B) FF (\x0C) CR (\x0D) SO (\x0E) SI (\x0F) DLE (\x10) DC1 (\x11) DC2 (\x12) DC3 (\x13) DC4 (\x14) NAK (\x15) SYN (\x16) ETB (\x17) CAN (\x18) EM (\x19) SUB (\x1A) ESC (\x1B) FS (\x1C) GS (\x1D) RS (\x1E) US (\x1F) SPACE !  # $ % ' * + , - . 0 1 2 3 4 5 6 7 8 9 : ; ? @ A B C D E F G H I J K L M N O P Q R S T U V W X Y Z [ \ ]^ _ FNC1 (\xF0) FNC2 (\xF1) FNC3 (\xF2) FNC4  </remarks>
        </member>
        <member name="T:Spire.Pdf.Barcode.PdfUnidimensionalBarcode">
            <summary>
            Represents the Base class for all the Single dimensional barcodes
            </summary>
        </member>
        <member name="T:Spire.Pdf.Barcode.PdfBarcode">
            <summary>
            Represents a base class for all barcode types.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfBarcode.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfBarcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">Set the barcode text.</param>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfBarcode.BackColor">
            <summary>
            Gets or sets the back color of the barcode.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfBarcode.BarColor">
            <summary>
            Gets or sets the bar color of the barcode.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfBarcode.TextColor">
            <summary>
            Gets or sets the text color of the barcode text.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfBarcode.NarrowBarWidth">
            <summary>
            Gets or sets the narrow bar width.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfBarcode.Text">
            <summary>
            Gets or Sets the barcode text.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfBarcode.Location">
            <summary>
            Gets or sets the location to render barcode in the PDF Document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfBarcode.QuietZone">
            <summary>
            Gets or sets the empty area which is to be allocated around the barcode.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfBarcode.BarHeight">
            <summary>
            Gets or sets the bar height.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfBarcode.Size">
            <summary>
            Gets the size of the barcode.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfBarcode.Bounds">
            <summary>
            Gets or sets the rectangular area occupied by the barcode.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfUnidimensionalBarcode.#ctor">
            <summary>
            Initializes the new instance of 
            </summary>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfUnidimensionalBarcode.Draw(Spire.Pdf.PdfPageBase,System.Drawing.PointF)">
            <summary>
            Draws the barcode on the  at the specified location.
            </summary>
            <param name="page">The pdf page.</param>
            <param name="location">The barcode location.</param>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfUnidimensionalBarcode.ToImage">
            <summary>
            Exports the barcode as image.
            <returns>The barcode image.</returns>
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfUnidimensionalBarcode.Font">
            <summary>
            Gets or sets the Text font.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfUnidimensionalBarcode.TextDisplayLocation">
            <summary>
            Gets or sets the text display location. 
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfUnidimensionalBarcode.ShowCheckDigit">
            <summary>
            </summary>
            <remarks>The Default value is false.</remarks>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfUnidimensionalBarcode.EnableCheckDigit">
            <summary>
            Gets or sets a value indicating whether to enable to check digit calculation in the generated barcode or not.
            </summary>
            <remarks>The Default value is True.</remarks>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfUnidimensionalBarcode.BarcodeToTextGapHeight">
            <summary>
            Gets or sets the gap between the barcode and the displayed text.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfUnidimensionalBarcode.TextAlignment">
            <summary>
            Gets or sets the alignment of the text displayed on the barcode.
            </summary>
            <remarks>Default value is Center.</remarks>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfUnidimensionalBarcode.EncodeStartStopSymbols">
            <summary>
            Gets or sets a value indicating whether [encode start stop symbols].
            </summary>
            <value>
            <c>true</c> if [encode start stop symbols]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode128ABarcode.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode128ABarcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The Barcode Text.</param>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfRubberStampAnnotation">
            <summary>
            Represents the Rubber Stamp annotation for a PDF document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfRubberStampAnnotation.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfRubberStampAnnotation.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            <param name="rectangle">RectangleF structure that specifies the bounds of the annotation.</param>
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfRubberStampAnnotation.#ctor(System.Drawing.RectangleF,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rectangle">RectangleF structure that specifies the bounds of the annotation.</param>
            <param name="text">Text of the rubber stamp annotation.</param>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfRubberStampAnnotation.Icon">
            <summary>
            Gets or sets the annotation's icon. 
            </summary>        
            <value>A  enumeration member specifying the icon for the annotation when it is displayed in closed state. </value>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfRubberStampAnnotation.Appearance">
            <summary>
            Gets or sets appearance of the annotation.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfAnnotationActions">
            <summary>
            Represents additional actions of the annotations.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfAnnotationActions.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfAnnotationActions.MouseDown">
            <summary>
            Gets or sets the action to be performed when the mouse button is pressed inside the 
            annotations active area.
            </summary>
            <value>The mouse down action.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfAnnotationActions.MouseUp">
            <summary>
            Gets or sets the action to be performed when the mouse button is released 
            inside the annotations active area..
            </summary>
            <value>The mouse up action.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfAnnotationActions.GotFocus">
            <summary>
            Gets or sets the action to be performed when the annotation receives the 
            input focus.
            </summary>
            <value>The got focus action.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfAnnotationActions.LostFocus">
            <summary>
            Gets or sets the action to be performed when the annotation loses the 
            input focus.
            </summary>
            <value>The lost focus action.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfAnnotationActions.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfGoToAction">
            <summary>
            Represents an action which goes to a destination in the current document.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfAction">
            <summary>
            Represents base class for all action types.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfAction.NextAction">
            <summary>
            Gets or sets the next action to be performed after the action represented by this instance.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfAction.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfGoToAction.#ctor(Spire.Pdf.General.PdfDestination)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="destination">The destination to jump to.</param>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfGoToAction.#ctor(Spire.Pdf.PdfNewPage)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="page">The page to jump to.</param>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfGoToAction.Destination">
            <summary>
            Gets or sets the destination.
            </summary>
            <value>The destination.</value>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfGotoNameAction.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="destination">The destination to jump to.</param>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfGotoNameAction.Destination">
            <summary>
            Gets or sets the destination.
            </summary>
            <value>The destination.</value>
        </member>
        <member name="M:Spire.Pdf.Interfaces.IPdfCache.EqualsTo(Spire.Pdf.Interfaces.IPdfCache)">
            <summary>
            Checks whether the object is similar to another object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>True - if the objects have equal internals and can share them, False otherwise.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Spire.Pdf.Exporting.XPS.Reader.XPSDocumentReader.GetAttributeFromXmlHeader(System.String,System.String)" -->
        <member name="T:Spire.Pdf.Xmp.XmpEntityBase">
            <summary>
            Base class for the xmp entities.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Xmp.XmpEntityBase.XmlData">
            <summary>
            Gets Xml data of the entity.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.BeginPageLayoutEventArgs">
            <summary>
            Data for event before lay outing of the page.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfCancelEventArgs">
            <summary>
            Represents the data for a cancelable event.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfCancelEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether this  is cancel.
            </summary>
            <value><c>true</c> if cancel; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Spire.Pdf.Graphics.BeginPageLayoutEventArgs.#ctor(System.Drawing.RectangleF,Spire.Pdf.PdfPageBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="bounds">The bounds.</param>
            <param name="page">The page.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.BeginPageLayoutEventArgs.Bounds">
            <summary>
            Gets or sets value that indicates the lay outing bounds on the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.BeginPageLayoutEventArgs.Page">
            <summary>
            Gets the page where the lay outing should start.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.EndPageLayoutEventArgs">
            <summary>
            Contains information about layout`s element .
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.EndPageLayoutEventArgs.#ctor(Spire.Pdf.Graphics.PdfLayoutResult)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.EndPageLayoutEventArgs.Result">
            <summary>
            Gets a result of the lay outing on the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.EndPageLayoutEventArgs.NextPage">
            <summary>
            Gets or sets a value indicating the next page where the element should be layout if the process is not finished or stopped.
            </summary>
            <remarks>The default value is null. In this case the element will be layout on the next page.</remarks>
        </member>
        <member name="T:Spire.Pdf.Lists.PdfOrderedMarker">
            <summary>
            Represents marker for ordered list.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfOrderedMarker.#ctor(Spire.Pdf.PdfNumberStyle,System.String,System.String,Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="style">Number style of marker.</param>
            <param name="delimiter">Number delimiter of marker.</param>
            <param name="suffix">Number suffix of marker.</param>
            <param name="font">Number font of marker.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfOrderedMarker.#ctor(Spire.Pdf.PdfNumberStyle,System.String,Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="style">Number style of marker.</param>
            <param name="suffix">Number suffix of the marker.</param>
            <param name="font">Number font of marker.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfOrderedMarker.#ctor(Spire.Pdf.PdfNumberStyle,Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="style">Number style of marker.</param>
            <param name="font">Number font of marker.</param>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfOrderedMarker.Style">
            <summary>
            Gets or sets the list numbering style.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfOrderedMarker.StartNumber">
            <summary>
            Gets ar sets start number for ordered list. Default value is 1.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfOrderedMarker.Delimiter">
            <summary>
            Gets or sets the delimiter.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfOrderedMarker.Suffix">
            <summary>
            Gets or sets the suffix of the marker.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Security.PdfSecurity">
            <summary>
            Represents the security settings of the PDF document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSecurity.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSecurity.SetPermissions(Spire.Pdf.Security.PdfPermissionsFlags)">
            <summary>
            Logically ORs flag and mask and return result.
            </summary>
            <param name="flags">The mask of set bit that should be set in the result.</param>
            <returns>The ORed value of flag and mask.</returns>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSecurity.ResetPermissions(Spire.Pdf.Security.PdfPermissionsFlags)">
            <summary>
            Logically ANDs flag and inverted mask and return result.
            </summary>
            <param name="flags">The mask of set bit that should be cleared in the result.</param>
            <returns>The ANDed value of flag and inverted mask.</returns>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSecurity.OwnerPassword">
            <summary>
            Gets or sets the owner password.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSecurity.UserPassword">
            <summary>
            Gets or sets the user password.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSecurity.Permissions">
            <summary>
            Permissions when the document is opened with user password.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSecurity.KeySize">
            <summary>
            Gets or sets the size of the key.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interfaces.IPdfPrimitive.Save(Spire.Pdf.Interfaces.IPdfWriter)">
            <summary>
            Saves the object using the specified writer.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:Spire.Pdf.Interfaces.IPdfChangable.FreezeChanges(System.Object)">
            <summary>
            Freezes the changes.
            </summary>
            <param name="freezer">The freezer.</param>
        </member>
        <member name="P:Spire.Pdf.Interfaces.IPdfChangable.Changed">
            <summary>
            Gets a value indicating whether this  is changed.
            </summary>
            <value><c>true</c> if changed; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfImageMask">
            <summary>
            Represents the image mask object for bitmaps.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfMask">
            <summary>
            Base class for bitmap masking objects.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfImageMask.#ctor(Spire.Pdf.Graphics.PdfBitmap)">
            <summary>
            Creates new PdfImageMask object.
            </summary>
            <param name="imageMask">The image mask.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfImageMask.Mask">
            <summary>
            Gets the image mask.
            </summary>
            <value>The image mask.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfImageMask.SoftMask">
            <summary>
            Gets the mask type.
            </summary>
            <value><c>true</c> if soft mask; otherwise, hard mask <c>false</c>.</value>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfTemplate">
            <summary>
            Represents Pdf Template object.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTemplate.#ctor(System.Drawing.SizeF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="size">The size.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTemplate.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTemplate.Reset(System.Drawing.SizeF)">
            <summary>
            Resets the template and sets the specified size.
            </summary>
            <param name="size">The size.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTemplate.Reset">
            <summary>
            Resets an instance.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfTemplate.Graphics">
            <summary>
            Gets graphics context of the template.
            </summary>
            <remarks>It will return null, if the template is read-only.</remarks>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfTemplate.Size">
            <summary>
            Gets the size of the template.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfTemplate.Width">
            <summary>
            Gets the width of the template.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfTemplate.Height">
            <summary>
            Gets the height of the template.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfTemplate.ReadOnly">
            <summary>
            Gets a value indicating whether the template is read-only.
            </summary>
            <value><c>true</c> if the template is read-only; otherwise, <c>false</c>.</value>
            <remarks>Read-only templates does not expose graphics. They just return null.</remarks>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfTemplate.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the wrapped element.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfAnnotationCollection">
            <summary>
            Represents collection of  objects.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfAnnotationCollection.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfAnnotationCollection.#ctor(Spire.Pdf.PdfNewPage)">
            <summary>
            Creates new annotation collection for the specified page.
            </summary>
            <param name="page">Page which collection is created for.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfAnnotationCollection.Add(Spire.Pdf.Annotations.PdfAnnotation)">
            <summary>
            Adds a new annotation to collection. 
            </summary>
            <param name="annotation">The new annotation to be added to collection.</param>
            <returns>Position of the annotation in collection.</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfAnnotationCollection.Clear">
            <summary>
            Cleares the collection.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfAnnotationCollection.Contains(Spire.Pdf.Annotations.PdfAnnotation)">
            <summary>
            Searches the collection for the specified annotation. 
            </summary>
            <param name="annotation">The annotation to search for.</param>
            <returns>True, if annotation is contained in collection. Otherwise - false.</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfAnnotationCollection.IndexOf(Spire.Pdf.Annotations.PdfAnnotation)">
            <summary>
            Searches the collection for the specified annotation. 
            </summary>
            <param name="annotation">The Annotation to search.</param>
            <returns>Index of the element in the collection, if exists, or -1 if the element does not exist in the collection.</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfAnnotationCollection.Insert(System.Int32,Spire.Pdf.Annotations.PdfAnnotation)">
            <summary>
            Inserts annotation to the collection at the specified index.
            </summary>
            <param name="index">Index where to insert the element.</param>
            <param name="annotation">The annotation to insert in the collection.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfAnnotationCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified field.
            </summary>
            <param name="index">The index of the element to remove.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfAnnotationCollection.Remove(Spire.Pdf.Annotations.PdfAnnotation)">
            <summary>
            Removes the element from the collection. 
            </summary>
            <param name="field">The element to remove.</param>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfAnnotationCollection.Item(System.Int32)">
            <summary>
            Gets the  object at the specified position.
            </summary>
            <param name="index">The index value of the annotation in the collection. </param>
            <returns>Annotation object at the specified position.</returns>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfAnnotationCollection.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets Pdf primitive representing this object.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Security.PdfSignature">
            <summary>
            Represents a digital signature used for signing a PDF document.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfSignature.m_DigitalSigner">
            <summary>
            Digital Signature Common name
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfSignature.m_DigitalSignerLable">
            <summary>
            Digital Signature Common name label
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfSignature.m_DistinguishedName">
            <summary>
            Digital Signature Distinguished name
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfSignature.m_IsTag">
            <summary>
            Digital Signature Whether to display the label
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfSignature.m_ConfigGraphicType">
            <summary>
            Digital Signature Graphic Type
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfSignature.m_ConfiguerGraphicPath">
            <summary>
            Digital Signature Configuer Graphic file Path
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfSignature.m_ReasonLabel">
            <summary>
            Digital Signature Reason  Label
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfSignature.m_DateLabel">
            <summary>
            Digital Signature Date  
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfSignature.m_ContactInfoLabel">
            <summary>
            Digital Signature ContactInfo  Label
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfSignature.m_LocationInfoLabel">
            <summary>
            Digital Signature LocationInfo  Label
            </summary>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSignature.VerifySignature">
            <summary>
            check thie validity of the signature
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Security.PdfSignature.VerifyDocModified">
            <summary>
            Check if the document was altered after signed. True if modified; otherwise false.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.Date">
            <summary>
            Get Signature Datetime
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.SignatureName">
            <summary>
            get/set pdf signature name 
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.DigitalSigner">
             <summary>
            Digital Signature Common name
             </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.DigitalSignerLable">
            <summary>
            Digital Signature Common name label
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.DistinguishedName">
            <summary>
            Digital Signature Distinguished name
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.IsTag">
            <summary>
            Digital Signature Whether to display the label
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.ConfigGraphicType">
            <summary>
            Digital Signature Graphic Type
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.ConfiguerGraphicPath">
            <summary>
            Digital Signature Configuer Graphic file Path
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.IsConfiguerGraphicFilledBounds">
            <summary>
            Digital Signature Configuer Graphic is filled bounds.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.ReasonLabel">
            <summary>
            Digital Signature Reason  Label
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.DateLabel">
            <summary>
            Digital Signature Date  Label
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.ContactInfoLabel">
            <summary>
            Digital Signature ContactInfo  Label
            </summary>
        </member>
        <member name="P:Spire.Pdf.Security.PdfSignature.LocationInfoLabel">
            <summary>
            Digital Signature LocationInfo  Label
            </summary>
        </member>
        <member name="T:Spire.Pdf.Security.PdfCertificate">
            <summary>
            Represents the Certificate object.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Security.PdfCertificate.#ctor(System.Byte[])">
            <summary>
            Signature data
            </summary>
            <param name="signData"></param>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfListWidgetFieldItemCollection">
            <summary>
            Represents loaded item collection.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfListWidgetFieldItemCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfSectionPageCollection">
            <summary>
            Manipulates pages within a section.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfSectionPageCollection.Add">
            <summary>
            Creates a new page and adds it into the collection.
            </summary>
            <returns>The new page.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfSectionPageCollection.Add(Spire.Pdf.PdfNewPage)">
            <summary>
            Adds a page into collection.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:Spire.Pdf.PdfSectionPageCollection.Insert(System.Int32,Spire.Pdf.PdfNewPage)">
            <summary>
            Inserts a page at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="page">The page.</param>
        </member>
        <member name="M:Spire.Pdf.PdfSectionPageCollection.IndexOf(Spire.Pdf.PdfNewPage)">
            <summary>
            Returns the index of the specified page.
            </summary>
            <param name="page">The page.</param>
            <returns>The index of the page.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfSectionPageCollection.Contains(Spire.Pdf.PdfNewPage)">
            <summary>
            Determines whether the specified page is within the collection.
            </summary>
            <param name="page">The page.</param>
            <returns>
            	<c>true</c> if the collection contains the specified page; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Spire.Pdf.PdfSectionPageCollection.Remove(Spire.Pdf.PdfNewPage)">
            <summary>
            Removes the specified page.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:Spire.Pdf.PdfSectionPageCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a page at the index specified.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Spire.Pdf.PdfSectionPageCollection.Clear">
            <summary>
            Clears this collection.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Spire.Pdf.PdfSectionPageCollection.System#Collections#IEnumerable#GetEnumerator" -->
        <member name="P:Spire.Pdf.PdfSectionPageCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfSectionPageCollection.Count">
            <summary>
            Gets the count of the pages.
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Find.PdfTextFind">
            <summary>
            The class representing a result of searching designated text from PDF page.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Find.PdfTextFind.ApplyHighLight">
            <summary>
            apply hight light of the seached text
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Find.PdfTextFind.ApplyRecoverString(System.String)">
            <summary>
            apply hight light of the seached text
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Find.PdfTextFind.ApplyRecoverString(System.String,System.Drawing.Color)">
            <summary>
            apply hight light of the seached text
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Find.PdfTextFind.SearchText">
            <summary>
             Gets  search text of this System.String structure.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Find.PdfTextFind.MatchText">
            <summary>
            Gets  match text of this System.String structure.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Find.PdfTextFind.OuterText">
            <summary>
            Gets  text which is including the searched text of this System.String structure.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Find.PdfTextFind.LineText">
            <summary>
            Gets all the text of the line where covers the searched text of this System.String structure .
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Find.PdfTextFind.SearchPage">
            <summary>
            Gets page which is including the searched text of this Spire.Pdf.PdfPageBase structure.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Find.PdfTextFind.SearchPageIndex">
            <summary>
            Gets index of page which is including the searched text of this System.Int32 structure.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Find.PdfTextFind.Position">
            <summary>
             Gets the position of the searched text of this System.Drawing.PointF structure.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Find.PdfTextFind.Size">
            <summary>
             Gets the size of the searched text of this System.Drawring SizeF structure.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Find.PdfTextFind.Bounds">
            <summary>
            Gets the bounds of the searched text of this System.Drawring RectangleF structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Find.PdfTextFindCollection">
            <summary>
            The class representing all the resuls of searching designated text from PDF page
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfPens">
            <summary>
            The collection of the default pens.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.AliceBlue">
            <summary>
            Gets the AliceBlue pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.AntiqueWhite">
            <summary>
            Gets the antique white pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Aqua">
            <summary>
            Gets the Aqua default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Aquamarine">
            <summary>
            Gets the Aquamarine default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Azure">
            <summary>
            Gets the Azure default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Beige">
            <summary>
            Gets the Beige default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Bisque">
            <summary>
            Gets the Bisque default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Black">
            <summary>
            Gets the Black default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.BlanchedAlmond">
            <summary>
            Gets the BlanchedAlmond default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Blue">
            <summary>
            Gets the Blue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.BlueViolet">
            <summary>
            Gets the BlueViolet default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Brown">
            <summary>
            Gets the Brown default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.BurlyWood">
            <summary>
            Gets the BurlyWood default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.CadetBlue">
            <summary>
            Gets the CadetBlue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Chartreuse">
            <summary>
            Gets the Chartreuse default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Chocolate">
            <summary>
            Gets the Chocolate default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Coral">
            <summary>
            Gets the Coral default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.CornflowerBlue">
            <summary>
            Gets the CornflowerBlue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Cornsilk">
            <summary>
            Gets the Corn silk default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Crimson">
            <summary>
            Gets the Crimson default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Cyan">
            <summary>
            Gets the Cyan default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DarkBlue">
            <summary>
            Gets the DarkBlue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DarkCyan">
            <summary>
            Gets the DarkCyan default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DarkGoldenrod">
            <summary>
            Gets the DarkGoldenrod default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DarkGray">
            <summary>
            Gets the DarkGray default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DarkGreen">
            <summary>
            Gets the DarkGreen default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DarkKhaki">
            <summary>
            Gets the DarkKhaki default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DarkMagenta">
            <summary>
            Gets the DarkMagenta default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DarkOliveGreen">
            <summary>
            Gets the DarkOliveGreen default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DarkOrange">
            <summary>
            Gets the DarkOrange default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DarkOrchid">
            <summary>
            Gets the DarkOrchid default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DarkRed">
            <summary>
            Gets the DarkRed default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DarkSalmon">
            <summary>
            Gets the DarkSalmon default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DarkSeaGreen">
            <summary>
            Gets the DarkSeaGreen default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DarkSlateBlue">
            <summary>
            Gets the DarkSlateBlue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DarkSlateGray">
            <summary>
            Gets the DarkSlateGray default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DarkTurquoise">
            <summary>
            Gets the DarkTurquoise default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DarkViolet">
            <summary>
            Gets the DarkViolet default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DeepPink">
            <summary>
            Gets the DeepPink default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DeepSkyBlue">
            <summary>
            Gets the DeepSkyBlue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DimGray">
            <summary>
            Gets the DimGray default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.DodgerBlue">
            <summary>
            Gets the DodgerBlue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Firebrick">
            <summary>
            Gets the Firebrick default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.FloralWhite">
            <summary>
            Gets the FloralWhite default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.ForestGreen">
            <summary>
            Gets the ForestGreen default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Fuchsia">
            <summary>
            Gets the Fuchsia default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Gainsboro">
            <summary>
            Gets the Gainsborough default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.GhostWhite">
            <summary>
            Gets the GhostWhite default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Gold">
            <summary>
            Gets the Gold default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Goldenrod">
            <summary>
            Gets the Goldenrod default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Gray">
            <summary>
            Gets the Gray default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Green">
            <summary>
            Gets the Green default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.GreenYellow">
            <summary>
            Gets the GreenYellow default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Honeydew">
            <summary>
            Gets the Honeydew default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.HotPink">
            <summary>
            Gets the HotPink default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.IndianRed">
            <summary>
            Gets the IndianRed default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Indigo">
            <summary>
            Gets the Indigo default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Ivory">
            <summary>
            Gets the Ivory default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Khaki">
            <summary>
            Gets the Khaki default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Lavender">
            <summary>
            Gets the Lavender default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.LavenderBlush">
            <summary>
            Gets the LavenderBlush default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.LawnGreen">
            <summary>
            Gets the LawnGreen default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.LemonChiffon">
            <summary>
            Gets the LemonChiffon default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.LightBlue">
            <summary>
            Gets the LightBlue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.LightCoral">
            <summary>
            Gets the LightCoral default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.LightCyan">
            <summary>
            Gets the LightCyan default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.LightGoldenrodYellow">
            <summary>
            Gets the LightGoldenrodYellow default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.LightGray">
            <summary>
            Gets the LightGray default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.LightGreen">
            <summary>
            Gets the LightGreen default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.LightPink">
            <summary>
            Gets the LightPink default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.LightSalmon">
            <summary>
            Gets the LightSalmon default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.LightSeaGreen">
            <summary>
            Gets the LightSeaGreen default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.LightSkyBlue">
            <summary>
            Gets the LightSkyBlue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.LightSlateGray">
            <summary>
            Gets the LightSlateGray default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.LightSteelBlue">
            <summary>
            Gets the LightSteelBlue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.LightYellow">
            <summary>
            Gets the LightYellow default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Lime">
            <summary>
            Gets the Lime default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.LimeGreen">
            <summary>
            Gets the LimeGreen default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Linen">
            <summary>
            Gets the Linen default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Magenta">
            <summary>
            Gets the Magenta default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Maroon">
            <summary>
            Gets the Maroon default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.MediumAquamarine">
            <summary>
            Gets the MediumAquamarine default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.MediumBlue">
            <summary>
            Gets the MediumBlue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.MediumOrchid">
            <summary>
            Gets the MediumOrchid default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.MediumPurple">
            <summary>
            Gets the MediumPurple default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.MediumSeaGreen">
            <summary>
            Gets the MediumSeaGreen default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.MediumSlateBlue">
            <summary>
            Gets the MediumSlateBlue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.MediumSpringGreen">
            <summary>
            Gets the MediumSpringGreen default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.MediumTurquoise">
            <summary>
            Gets the MediumTurquoise default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.MediumVioletRed">
            <summary>
            Gets the MediumVioletRed default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.MidnightBlue">
            <summary>
            Gets the MidnightBlue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.MintCream">
            <summary>
            Gets the MintCream default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.MistyRose">
            <summary>
            Gets the MistyRose default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Moccasin">
            <summary>
            Gets the Moccasin default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.NavajoWhite">
            <summary>
            Gets the NavajoWhite default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Navy">
            <summary>
            Gets the Navy default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.OldLace">
            <summary>
            Gets the OldLace default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Olive">
            <summary>
            Gets the Olive default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.OliveDrab">
            <summary>
            Gets the OliveDrab default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Orange">
            <summary>
            Gets the Orange default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.OrangeRed">
            <summary>
            Gets the OrangeRed default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Orchid">
            <summary>
            Gets the Orchid default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.PaleGoldenrod">
            <summary>
            Gets the PaleGoldenrod default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.PaleGreen">
            <summary>
            Gets the PaleGreen default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.PaleTurquoise">
            <summary>
            Gets the PaleTurquoise default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.PaleVioletRed">
            <summary>
            Gets the PaleVioletRed default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.PapayaWhip">
            <summary>
            Gets the PapayaWhip default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.PeachPuff">
            <summary>
            Gets the PeachPuff default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Peru">
            <summary>
            Gets the Peru default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Pink">
            <summary>
            Gets the Pink default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Plum">
            <summary>
            Gets the Plum default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.PowderBlue">
            <summary>
            Gets the PowderBlue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Purple">
            <summary>
            Gets the Purple default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Red">
            <summary>
            Gets the Red default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.RosyBrown">
            <summary>
            Gets the RosyBrown default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.RoyalBlue">
            <summary>
            Gets the RoyalBlue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.SaddleBrown">
            <summary>
            Gets the SaddleBrown default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Salmon">
            <summary>
            Gets the Salmon default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.SandyBrown">
            <summary>
            Gets the SandyBrown default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.SeaGreen">
            <summary>
            Gets the SeaGreen default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.SeaShell">
            <summary>
            Gets the SeaShell default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Sienna">
            <summary>
            Gets the Sienna default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Silver">
            <summary>
            Gets the Silver default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.SkyBlue">
            <summary>
            Gets the SkyBlue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.SlateBlue">
            <summary>
            Gets the SlateBlue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.SlateGray">
            <summary>
            Gets the SlateGray default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Snow">
            <summary>
            Gets the Snow default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.SpringGreen">
            <summary>
            Gets the SpringGreen default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.SteelBlue">
            <summary>
            Gets the SteelBlue default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Tan">
            <summary>
            Gets the Tan default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Teal">
            <summary>
            Gets the Teal default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Thistle">
            <summary>
            Gets the Thistle default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Tomato">
            <summary>
            Gets the Tomato default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Transparent">
            <summary>
            Gets the Transparent default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Turquoise">
            <summary>
            Gets the Turquoise default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Violet">
            <summary>
            Gets the Violet default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Wheat">
            <summary>
            Gets the Wheat default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.White">
            <summary>
            Gets the White default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.WhiteSmoke">
            <summary>
            Gets the WhiteSmoke default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.Yellow">
            <summary>
            Gets the Yellow default pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPens.YellowGreen">
            <summary>
            Gets the YellowGreen default pen.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfTrueTypeFont">
             <summary>
             Represents TrueType font.
             </summary>
            [System.Security.Permissions.PermissionSet( System.Security.Permissions.SecurityAction.Assert, Name = "FullTrust" )]
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfFontBase">
            <summary>
            Represents the font.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFontBase.MeasureString(System.String)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">Text to be measured.</param>
            <returns>Size of the text.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFontBase.MeasureString(System.String,Spire.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">Text to be measured.</param>
            <param name="format">PdfStringFormat that represents formatting information, such as line spacing, for the string.</param>
            <returns>Size of the text.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFontBase.MeasureString(System.String,Spire.Pdf.Graphics.PdfStringFormat,System.Int32@,System.Int32@)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">Text to be measured.</param>
            <param name="format">PdfStringFormat that represents formatting information, such as line spacing, for the string.</param>
            <param name="charactersFitted">Number of characters in the string.</param>
            <param name="linesFilled">Number of text lines in the string.</param>
            <returns>Size of the text.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFontBase.MeasureString(System.String,System.Single)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">Text to be measured.</param>
            <param name="width">Maximum width of the string in points.</param>
            <returns>Size of the text.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFontBase.MeasureString(System.String,System.Single,Spire.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">Text to be measured.</param>
            <param name="width">Maximum width of the string in points.</param>
            <param name="format">PdfStringFormat that represents formatting information, such as line spacing, for the string.</param>
            <returns>Size of the text.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFontBase.MeasureString(System.String,System.Single,Spire.Pdf.Graphics.PdfStringFormat,System.Int32@,System.Int32@)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">Text to be measured.</param>
            <param name="width">Maximum width of the string in points.</param>
            <param name="format">PdfStringFormat that represents formatting information, such as line spacing, for the string.</param>
            <param name="charactersFitted">Number of characters in the string.</param>
            <param name="linesFilled">Number of text lines in the string.</param>
            <returns>Size of the text.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFontBase.MeasureString(System.String,System.Drawing.SizeF)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">Text to be measured.</param>
            <param name="layoutArea">SizeF structure that specifies the maximum layout area for the text in points.</param>
            <returns>Size of the text.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFontBase.MeasureString(System.String,System.Drawing.SizeF,Spire.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">Text to be measured.</param>
            <param name="layoutArea">SizeF structure that specifies the maximum layout area for the text in points.</param>
            <param name="format">PdfStringFormat that represents formatting information, such as line spacing, for the string.</param>
            <returns>Size of the text.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFontBase.MeasureString(System.String,System.Drawing.SizeF,Spire.Pdf.Graphics.PdfStringFormat,System.Int32@,System.Int32@)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">Text to be measured.</param>
            <param name="layoutArea">SizeF structure that specifies the maximum layout area for the text in points.</param>
            <param name="format">PdfStringFormat that represents formatting information, such as line spacing, for the string.</param>
            <param name="charactersFitted">Number of characters in the string.</param>
            <param name="linesFilled">Number of text lines in the string.</param>
            <returns>Size of the text.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFontBase.Spire#Pdf#Interfaces#IPdfCache#EqualsTo(Spire.Pdf.Interfaces.IPdfCache)">
            <summary>
            Checks whether the object is similar to another object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>True - if the objects have equal internals and can share them, False otherwise.</returns>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfFontBase.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfFontBase.Size">
            <summary>
            Gets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfFontBase.Height">
            <summary>
            Gets the height of the font in points.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfFontBase.Style">
            <summary>
            Gets the style information for this font.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfFontBase.Bold">
            <summary>
            Gets a value indicating whether this  is bold.
            </summary>
            <value><c>true</c> if bold; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfFontBase.Italic">
            <summary>
            Gets a value indicating whether this  is italic.
            </summary>
            <value><c>true</c> if italic; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfFontBase.Strikeout">
            <summary>
            Gets a value indicating whether this  is strikeout.
            </summary>
            <value><c>true</c> if strikeout; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfFontBase.Underline">
            <summary>
            Gets a value indicating whether this  is underline.
            </summary>
            <value><c>true</c> if underline; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfFontBase.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets Pdf primitive representing the font.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfLayoutType">
            <summary>
            Specifies type of paginating.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfLayoutType.Paginate">
            <summary>
            If the element exceeds the page, proceed it on the next page.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfLayoutType.OnePage">
            <summary>
            Draw the element on the one page only.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfLayoutBreakType">
            <summary>
            Specifies how the element should be contained on the page.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfLayoutBreakType.FitPage">
            <summary>
            Fit the element according to the bounds specified or the page bounds.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfLayoutBreakType.FitElement">
            <summary>
            If the element doesn't fit at the first page, don't draw it on this page.
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.PdfSound">
            <summary>
            Represents sound embedded into pdf document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.PdfSound.#ctor(System.String)">
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="P:Spire.Pdf.General.PdfSound.Rate">
            <summary>
            Gets or sets the sampling rate, in samples per second (in Hz).
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.PdfSound.Bits">
            <summary>
            Gets or sets the number of bits per sample value per channel.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.PdfSound.Encoding">
            <summary>
            Gets or sets the encoding format for the sample data.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.PdfSound.Channels">
            <summary>
            Gets or sets the number of sound channels.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.PdfSound.FileName">
            <value>The name of the file.</value>
        </member>
        <member name="P:Spire.Pdf.General.PdfSound.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Drawing.Rendering.Common.XpsPathBuilder">
            <summary>
            Converts an APS path or a clipping region into XPS Abbreviated Syntax.
            The technique is the same as in PdfPathBuilder, but Syntax of path is different
            </summary>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfRadioButtonItemCollection">
            <summary>
            Represents collection of radio buttons items.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfRadioButtonItemCollection.#ctor(Spire.Pdf.Fields.PdfRadioButtonListField)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="field">The field.</param>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfRadioButtonItemCollection.Add(Spire.Pdf.Fields.PdfRadioButtonListItem)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The  object to be added to collection.</param>
            <returns>The index of the added field.</returns>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfRadioButtonItemCollection.Insert(System.Int32,Spire.Pdf.Fields.PdfRadioButtonListItem)">
            <summary>
            Inserts an item at the specified index.
            </summary>
            <param name="index">The index where to insert the new item..</param>
            <param name="item">A  object to be added to collection.</param>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfRadioButtonItemCollection.Remove(Spire.Pdf.Fields.PdfRadioButtonListItem)">
            <summary>
            Removes the specified item from the collection.
            </summary>
            <param name="item">The  object which is to be removed from the collection.</param>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfRadioButtonItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified position.
            </summary>
            <param name="index">The index where to remove the item.</param>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfRadioButtonItemCollection.IndexOf(Spire.Pdf.Fields.PdfRadioButtonListItem)">
            <summary>
            Gets the index of the item within the collection.
            </summary>
            <param name="item">A  object whose index is requested.</param>
            <returns>Index of the item with the collection.</returns>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfRadioButtonItemCollection.Contains(Spire.Pdf.Fields.PdfRadioButtonListItem)">
            <summary>
            Determines whether the collection contains the specified item.
            </summary>
            <param name="item">Check whether  object is exists in the collection or not.</param>
            <returns>
            <c>true</c> if collection contains specified item; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfRadioButtonItemCollection.Clear">
            <summary>
            Clears the item collection.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfRadioButtonItemCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
            <value>Returns item at the specified position.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfRadioButtonItemCollection.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.PdfFileInfo">
            <summary>
            This class represents a set of the properties that define the internal structure of PDF file.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfFileInfo.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>    
        </member>
        <member name="P:Spire.Pdf.PdfFileInfo.Version">
            <summary>
            Gets or sets the version of the PDF document.
            </summary>
            <value>The document version.</value>
        </member>
        <member name="P:Spire.Pdf.PdfFileInfo.IncrementalUpdate">
            <summary>
            Gets or sets a value indicating whether [incremental update].
            </summary>
            <value><c>true</c> if [incremental update]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.PdfFileInfo.CrossReferenceType">
            <summary>
            Gets or sets the type of PDF cross-reference.
            </summary>
            <remarks>Please see the description of  for more details.</remarks>
        </member>
        <member name="P:Spire.Pdf.PdfFileInfo.TaggedPdf">
            <summary>
            Gets the value indicating whether the PDF document is tagged one or not.
            </summary>
            <value>If true PDF document is tagged, otherwise false.</value>
        </member>
        <member name="F:Spire.Pdf.PdfDocument.m_PageScaling">
            <summary>
            PDF Document Print PageScaling
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfDocument.m_SetPdfToHtmlParameter">
            <summary>
            Pdf to Html, Set Parameter
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.#ctor(System.String)">
            <param name="filename">The path to source pdf file.</param>
            <remarks>This constructor imports an existing pdf file into the document object. It automatically populates the Pages collection with the pages of the given document. </remarks>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="filename">The path to source PDF document.</param>
            <param name="password">The password (user or owner) of the encrypted document.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.#ctor(Spire.Pdf.PdfConformanceLevel)">
            <summary>
            Set Document PdfConformanceLevel
            </summary>
            <param name="Pdflevel"></param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="file">The byte array with the file content.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.#ctor(System.Byte[],System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="file">The byte array with the file content.</param>
            <param name="password">The password (user or owner) of the encrypted document.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="file">The stream with the file.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.#ctor(System.IO.Stream,System.String)">
            <summary>
            Initializes a new instance.
            </summary>
            <param name="file">The stream with the file.</param>
            <param name="password">The password (user or owner) of the encrypted document.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.Dispose">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
             is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.LoadFromFile(System.String)">
            <param name="filename">The path to source pdf file.</param>
            <remarks>This constructor imports an existing pdf file into the document object. It automatically populates the Pages collection with the pages of the given document. </remarks>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.LoadFromFile(System.String,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="filename">The path to source PDF document.</param>
            <param name="password">The password (user or owner) of the encrypted document.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.LoadFromHTML(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Load file from disk file.
            </summary>
            <param name="url">url address</param>
            <param name="enableJavaScript">Enable javascrpit</param>
            <param name="enableHyperlinks">Enable hyperlink</param>
            <param name="autoDetectPageBreak">Auto detect page break</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.LoadFromHTML(System.String,System.Boolean,System.Boolean,System.Boolean,Spire.Pdf.PdfPageSettings)">
            <summary>
             Load file from disk file.
            </summary>
            <param name="url">url address</param>
            <param name="enableJavaScript">Enable javascrpit</param>
            <param name="enableHyperlinks">Enable hyperlink</param>
            <param name="autoDetectPageBreak">Auto detect page break</param>
            <param name="Size">paper size</param>
            <param name="layoutFormat">PdfHtmlLayoutFormat layoutFormat</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.LoadFromHTML(System.String,System.Boolean,System.Boolean,System.Boolean,Spire.Pdf.PdfPageSettings,Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat)">
            <summary>
             Load file from disk file.
            </summary>
            <param name="url">url address</param>
            <param name="enableJavaScript">Enable javascrpit</param>
            <param name="enableHyperlinks">Enable hyperlink</param>
            <param name="autoDetectPageBreak">Auto detect page break</param>
            <param name="Size">paper size</param>
            <param name="layoutFormat">PdfHtmlLayoutFormat layoutFormat</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.LoadFromHTML(System.String,System.Boolean,Spire.Pdf.PdfPageSettings,Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat)">
            <summary>
            Load htmlSourceCode to Pdf
            </summary>
            <param name="htmlSourceCode">htmlSourceCode</param>
            <param name="autoDetectPageBreak">Auto detect page break</param>
            <param name="setting">PdfPageSettings setting</param>
            <param name="layoutFormat">PdfHtmlLayoutFormat layoutFormat</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.LoadFromHTML(System.String,System.Boolean,Spire.Pdf.PdfPageSettings,Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat,System.Boolean)">
            <summary>
            Load htmlSourceCode to Pdf
            </summary>
            <param name="htmlSourceCode">htmlSourceCode</param>
            <param name="autoDetectPageBreak">Auto detect page break</param>
            <param name="setting">PdfPageSettings setting</param>
            <param name="layoutFormat">PdfHtmlLayoutFormat layoutFormat</param>
            <param name="isLoadComplete">WebBrowser load Complete</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.LoadFromBytes(System.Byte[])">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="file">The byte array with the file content.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.LoadFromStream(System.IO.Stream)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="file">The stream with the file.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.LoadFromBytes(System.Byte[],System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="file">The byte array with the file content.</param>
            <param name="password">The password (user or owner) of the encrypted document.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.LoadFromStream(System.IO.Stream,System.String)">
            <summary>
            Initializes a new instance.
            </summary>
            <param name="file">The stream with the file.</param>
            <param name="password">The password (user or owner) of the encrypted document.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.HasExtendedRight">
            <summary>
            Indicates whthere contains extended right.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.RemoveExtendedRight">
            <summary>
            Removes the extended right.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.Close">
            <summary>
            Closes the document.
            </summary>
            <param name="completely">if set to <c>true</c> the document should be disposed completely.</param>
            <remarks>The document is disposed after calling the Close method. So, the document can not be saved if Close method was invoked.</remarks>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.SaveToStream(System.IO.Stream)">
            <summary>
            Saves the document to the specified stream.
            </summary>
            <param name="stream">The stream object where PDF document will be saved.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.SaveToFile(System.String)">
            <summary>
            Saves PDF document to file.
            </summary>
            <param name="filename">File name</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.SaveToFile(System.String,Spire.Pdf.FileFormat)">
            <summary>
            Saves PDF document to file.
            </summary>
            <param name="filename">File name</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.SaveAsImage(System.Int32)">
            <summary>
            Saves PDF document page as image
            </summary>
            <param name="pageIndex">Page with page index to save as image</param>
            <returns>Returns  page as Image</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.SaveAsImage(System.Int32,System.Int32,System.Int32)">
            <summary>
            Saves PDF document page as image,Set image Dpi
            </summary>
            <param name="pageIndex">Page with page index to save as image</param>
            <param name="dpiX">Pictures X resolution</param>
            <param name="dpiY">Pictures Y resolution</param>
            <returns>Returns  page as Image</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.SaveAsImage(System.Int32,Spire.Pdf.Graphics.PdfImageType)">
            <summary>
            Saves PDF document page as image
            </summary>
            <param name="pageIndex">Page index</param>
            <param name="type">PdfImageType type </param>
            <returns>Returns  page as Image</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.SaveAsImage(System.Int32,Spire.Pdf.Graphics.PdfImageType,System.Int32,System.Int32)">
            <summary>
            Saves PDF document page as image,Set PdfImageType and image Dpi
            </summary>
            <param name="pageIndex">Page index</param>
            <param name="type">PdfImageType type </param>
            <param name="dpiX">Pictures X resolution</param>
            <param name="dpiY">Pictures Y resolution</param>
            <returns>Returns  page as Image</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <value>A new object that is a copy of this instance.</value>
            <remarks>The resulting clone must be of the same type as or a compatible type to the original instance.</remarks>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.InsertPage(Spire.Pdf.PdfDocument,Spire.Pdf.PdfPageBase)">
            <summary>
            Imports a page.
            </summary>
            <param name="ldDoc">The loaded document.</param>
            <param name="page">The page.</param>
            <returns>The page in the target document.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.InsertPage(Spire.Pdf.PdfDocument,System.Int32)">
            <summary>
            Imports a page.
            </summary>
            <param name="ldDoc">The loaded document.</param>
            <param name="pageIndex">Index of the page.</param>
            <returns>The page in the target document.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.InsertPageRange(Spire.Pdf.PdfDocument,System.Int32,System.Int32)">
            <summary>
            Imports a page range from a loaded document.
            </summary>
            <param name="ldDoc">The loaded document.</param>
            <param name="startIndex">The start page index.</param>
            <param name="endIndex">The end page index.</param>
            <returns>The last created page in the target document.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.Merge(Spire.Pdf.PdfDocumentBase,System.Object[])">
            <summary>
            Merges the specified source documents and return destination document.
            </summary>
            <param name="dest">The destination document, where the other documents are merged into.
            If it's null a new document object will be created.</param>
            <param name="sourceDocuments">The source documents.</param>
            <returns>The document containing merged documents.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.MergeFiles(System.IO.Stream[])">
            <summary>
            Merges the PDF documents specified by the Stream.
            </summary>
            <param name="streams"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.MergeFiles(System.String,System.String)">
            <summary>
            Merges the PDF documents specified by the paths.
            </summary>
            <param name="firstInputFile"></param>
            <param name="secInputFile"></param>
            <returns>A new PDF document containing all merged documents.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.Split(System.String)">
            <summary>
            Splits a PDF file to many PDF files, each of them consists of one page from the source file.
            </summary>
            <param name="destFilePattern">Template for destination file names.</param>
            <remarks>
            Each destination file will have 'destFileName{0***}' name,
            where *** is an optional format string for the number of the
            page inside of the source document.
            </remarks>
        </member>
        <member name="M:Spire.Pdf.PdfDocument.Split(System.String,System.Int32)">
            <summary>
            Splits a PDF file to many PDF files, each of them consists of
            one page from the source file.
            </summary>
            <param name="destFilePattern">Template for destination file
            names.</param>
            <param name="startNumber">The number that is use as a start
            point for the page numbering.</param>
            <remarks>
            Each destination file will have 'destFileName{0***}' name,
            where *** is an optional format string for the number of the
            page inside of the source document.
            </remarks>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.AllowCreateForm">
            <summary>
            Get or Set Allow Create Form.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.PageScaling">
            <summary>
            Get or Set Current PDF Document Print PageScaling
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.CustomScaling">
            <summary>
            Get or Set Current PDF Document Print PageScaling
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.PDFStandard">
            <summary>
            Set,Get Current active pdf object 
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.Conformance">
            <summary>
            Get document PdfConformanceLevel
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.Attachments">
            <summary>
            Gets the collection of document attachments displayed on a PDF page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.Bookmarks">
            <summary>
            Gets the bookmarks.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.ColorSpace">
            <summary>
            Gets or sets the color space for page that will be created.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.DocumentInformation">
            <summary>
            Gets or sets document's information and properties.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.JavaScripts">
            <summary>
            Gets the additional document's actions.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.Form">
            <summary>
            Gets the loaded form.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.PageNumber">
            <summary>
            Get and Set the PdfPageLabel.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.Pages">
            <summary>
            Gets the pages.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.UsedFonts">
            <summary>
            Gets the fonts which are available in the PDF document.
            </summary>
            <value>Retruns the fonts which are used in the PDF document.</value>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.CompressionLevel">
            <summary>
            Gets or sets the desired level of stream compression.
            </summary>
            <remarks>All new objects should be compressed with this level of the compression.</remarks>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.Security">
            <summary>
            Gets the security parameters of the document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.ViewerPreferences">
            <summary>
            Gets or sets a viewer preferences object controlling the way the document is to be 
            presented on the screen or in print.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.AfterOpenAction">
            <summary>
            Gets or sets the action to execute when the document is opened. 
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.AfterPrintAction">
            <summary>
            Gets or sets the action to be performed after the document is printed.
            </summary>
            <value>A  object specifying the action to be executed after the document is printed. .</value>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.AfterSaveAction">
            <summary>
            Gets or sets the jave script action to be performed after the document is saved.
            </summary>
            <value>A  object specifying the action to be executed after the document is saved.</value>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.BeforeCloseAction">
            <summary>
            Gets or sets the action to be performed before the document is closed.
            </summary>
            <value>A  object specifying the action to be executed before the document is closed. </value>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.BeforePrintAction">
            <summary>
            Gets or sets the action to be performed before the document is printed.
            </summary>
            <value>A  object specifying the action to be executed before the document is printed. </value>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.BeforeSaveAction">
            <summary>
            Gets or sets the java script action to be performed before the document is saved.
            </summary>
            <value>A  object specifying the action to be executed before the document is saved. </value>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.Template">
            <summary>
            Gets the template of pdf document
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.EnableFontCache">
            <summary>
            Indicates whether enable font cache.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.PrintFromPage">
            <summary>
            Gets or sets the pagenumber which you choose as the start page to printing
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.PrintToPage">
            <summary>
            Gets or sets the pagenumber which you choose as the final page to printing.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.PrinterName">
            <summary>
            Gets or sets the name of printer which is on printing PDF document
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.CustomHandleLandscape">
             <summary>
            Gets or set a value indicating handle PageSettings Landscape.
             </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocument.PrintDocument">
             <summary>
            Gets a value indicating the System.Drawing.Printing.PrintDocument
             </summary>
        </member>
        <member name="T:Spire.Pdf.AutomaticFields.PdfSectionPageNumberField">
            <summary>
            Represents automatic field to display page number within a section.
            </summary>
        </member>
        <member name="T:Spire.Pdf.AutomaticFields.PdfMultipleNumberValueField">
            <summary>
            Represents automatic field which has the same value within the 
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfMultipleNumberValueField.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfMultipleNumberValueField.#ctor(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfMultipleNumberValueField.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfMultipleNumberValueField.#ctor(Spire.Pdf.Graphics.PdfFontBase,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="P:Spire.Pdf.AutomaticFields.PdfMultipleNumberValueField.NumberStyle">
            <summary>
            Gets or sets the number style.
            </summary>
            <value>The number style.</value>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfSectionPageNumberField.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfSectionPageNumberField.#ctor(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfSectionPageNumberField.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfSectionPageNumberField.#ctor(Spire.Pdf.Graphics.PdfFontBase,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="T:Spire.Pdf.Annotations.LineBorder">
            <summary>
            Represents the border style of the Line annotation.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.LineBorder.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.LineBorder.BorderWidth">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The line border width.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.LineBorder.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
            <value>The line border style.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.LineBorder.DashArray">
            <summary>
            Gets or sets the Line Dash
            </summary>
            <value>The line border dash array.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.LineBorder.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DView">
            <summary>
            Represents a attributes to be applied to the virtual camera associated with a 3D annotation. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DView.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DView.Background">
            <summary>
            Gets or sets the background for this view.  
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DView.CameraToWorldMatrix">
            <summary>
            Gets or sets the 3D transformation matrix. 
            </summary>
            <value>A 12-element 3D transformation matrix that specifies a position and orientation of the camera in world coordinates. </value>
            <remarks>If the array has more than 12 elements, only the first 12 will be considered.</remarks>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DView.CenterOfOrbit">
            <summary>
            Gets or sets the center of orbit for 3D artwork. 
            </summary>
            <value>A non-negative number indicating a distance in the camera coordinate system along the z axis to the center of orbit for this view. </value>
            <remarks>If this value is negative, the viewer application must determine the center of orbit.</remarks>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DView.CrossSections">
            <summary>
            Gets the list of cross sections for this view. 
            <value>A list of PDF3DCrossSection objects available for this view.</value>
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DView.ExternalName">
            <summary>
            Gets or sets the view's external name.
            </summary>
            <value>The external name of the view, suitable for presentation in a user interface.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DView.LightingScheme">
            <summary>
            Gets or sets the Creates a new page and adds it as the last page of the document scheme for this view. 
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DView.Nodes">
            <summary>
            Gets the list of 3D nodes for this view. 
            </summary>
            <value>A list of PDF3DNode objects available for this view.</value>        
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DView.Projection">
            <summary>
            Gets or sets the projection for this view. 
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DView.RenderMode">
            <summary>
            Gets or sets the rendering mode for this view. 
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DView.ResetNodesState">
            <summary>
            Gets or sets a value indicating whether nodes specified in the Nodes collection are returned to their original states (as specified in the 3D artwork) before applying transformation matrices and opacity settings specified in the node dictionaries. 
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DView.ViewNodeName">
            <summary>
            Gets or sets the name of the view node.         
            </summary>
            <remarks>The view node in the content stream defines all the properties for viewing the 3D artwork. If both ViewNodeName and CameraToWorldMatrix are specified, then ViewNodeName takes precedence.</remarks>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DView.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DViewCollection">
            <summary>
            Represents a collection of Pdf3DView objects. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DViewCollection.Add(Spire.Pdf.Annotations.Pdf3DView)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns>Pdf3DView</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DViewCollection.Contains(Spire.Pdf.Annotations.Pdf3DView)">
            <summary>
            Determines whether [contains] [the specified value].
            </summary>
            <param name="value">The value.</param>
            <returns>
            if it contains the specified value, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DViewCollection.IndexOf(Spire.Pdf.Annotations.Pdf3DView)">
            <summary>
            Indexes the of the Pdf3DView object.
            </summary>
            <param name="value">The value.</param>
            <returns>Pdf3DView</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DViewCollection.Insert(System.Int32,Spire.Pdf.Annotations.Pdf3DView)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DViewCollection.Remove(Spire.Pdf.Annotations.Pdf3DView)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The Pdf3DView object.</param>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DViewCollection.Item(System.Int32)">
            <summary>
            Gets or sets the  at the specified index.
            </summary>
            <value>Pdf3DView</value>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DLighting">
            <summary>
            Represents the lighting scheme for the 3D artwork.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DLighting.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DLighting.#ctor(Spire.Pdf.Annotations.Pdf3DLightingStyle)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="style">The  object specifies the style of the 3D artwork.</param>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DLighting.Style">
            <summary>
            Gets or sets the Lighting style of the 3D artwork.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DLighting.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.Exceptions.PdfAnnotationException">
            <summary>
            Exception of this type is raised when annotation object is used incorrectly.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Exceptions.PdfDocumentException">
            <summary>
            Base PDF document exception.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Exceptions.PdfException">
            <summary>
            General exception class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Exceptions.PdfException.#ctor">
            <summary>
            Initializes object by default error message.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Exceptions.PdfException.#ctor(System.String)">
            <summary>
            Initializes object by specified error message.
            </summary>
            <param name="message">User defined error message.</param>
        </member>
        <member name="M:Spire.Pdf.Exceptions.PdfException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes object by specified error message and inner
            exception object.
            </summary>
            <param name="message">User defined error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Spire.Pdf.Exceptions.PdfDocumentException.#ctor">
            <summary>
            Initializes object by default error message.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Exceptions.PdfDocumentException.#ctor(System.Exception)">
            <summary>
            Initializes object by default error message and inner
            exception object.
            </summary>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Spire.Pdf.Exceptions.PdfDocumentException.#ctor(System.String)">
            <summary>
            Initializes object by specified error message.
            </summary>
            <param name="message">User defined error message.</param>
        </member>
        <member name="M:Spire.Pdf.Exceptions.PdfDocumentException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes object by specified error message and inner
            exception object.
            </summary>
            <param name="message">User defined error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Spire.Pdf.Exceptions.PdfAnnotationException.#ctor">
            <summary>
            Initializes object with default error message.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Exceptions.PdfAnnotationException.#ctor(System.Exception)">
            <summary>
            Initializes object with default error message and inner
            exception object.
            </summary>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Spire.Pdf.Exceptions.PdfAnnotationException.#ctor(System.String)">
            <summary>
            Initializes object by specified error message.
            </summary>
            <param name="message">User defined error message.</param>
        </member>
        <member name="M:Spire.Pdf.Exceptions.PdfAnnotationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes object with specified error message and inner
            exception object.
            </summary>
            <param name="message">User defined error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Spire.Pdf.Exceptions.PdfConformanceException">
            <summary>
            Exception of this type is raised when the document contains object which are not 
            supported by current document standard.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Exceptions.PdfConformanceException.#ctor">
            <summary>
            Initializes object with default error message.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Exceptions.PdfConformanceException.#ctor(System.Exception)">
            <summary>
            Initializes object with default error message and inner
            exception object.
            </summary>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Spire.Pdf.Exceptions.PdfConformanceException.#ctor(System.String)">
            <summary>
            Initializes object by specified error message.
            </summary>
            <param name="message">User defined error message.</param>
        </member>
        <member name="M:Spire.Pdf.Exceptions.PdfConformanceException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes object with specified error message and inner
            exception object.
            </summary>
            <param name="message">User defined error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Spire.Pdf.Interfaces.IPdfWriter.Write(Spire.Pdf.Interfaces.IPdfPrimitive)">
            <summary>
            Writes the specified PDF object.
            </summary>
            <param name="pdfObject">The PDF object.</param>
        </member>
        <member name="M:Spire.Pdf.Interfaces.IPdfWriter.Write(System.Int64)">
            <summary>
            Writes the specified number.
            </summary>
            <param name="number">The number.</param>
        </member>
        <member name="M:Spire.Pdf.Interfaces.IPdfWriter.Write(System.Single)">
            <summary>
            Writes the specified number.
            </summary>
            <param name="number">The number.</param>
        </member>
        <member name="M:Spire.Pdf.Interfaces.IPdfWriter.Write(System.String)">
            <summary>
            Writes the specified text.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:Spire.Pdf.Interfaces.IPdfWriter.Write(System.Char[])">
            <summary>
            Writes the specified text.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:Spire.Pdf.Interfaces.IPdfWriter.Write(System.Byte[])">
            <summary>
            Writes the specified data.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="P:Spire.Pdf.Interfaces.IPdfWriter.Position">
            <summary>
            Gets or sets the current position within the stream.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interfaces.IPdfWriter.Length">
            <summary>
            Stream length.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interfaces.IPdfWriter.Document">
            <summary>
            The document required for saving process.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Reader.PathDataReader">
            <summary>
            Represents the path data reader.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Reader.PathDataReader.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PathDataReader class.
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Reader.PathDataReader.ReadSymbol">
            <summary>
            Reads the symbols
            </summary>
            <returns>Symbol</returns>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Reader.PathDataReader.GetNextSymbol">
            <summary>
            Gets the next symbol
            </summary>
            <returns>Symbol</returns>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Reader.PathDataReader.UpdateCurrentPosition(System.Int32)">
            <summary>
            Updates the current position of the reader
            </summary>
            <param name="length">Length of the path data</param>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Reader.PathDataReader.TryReadFloat(System.Single@)">
            <summary>
            Reads the float value from the path data
            </summary>
            <param name="value">float value</param>
            <returns>True if the next value is float</returns>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Reader.PathDataReader.TryReadPoint(System.Drawing.PointF@)">
            <summary>
            Reads the pint form the path data
            </summary>
            <param name="val">Point value</param>
            <returns>True if the next parameter is point</returns>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Reader.PathDataReader.TryReadPositionArray(System.String[]@)">
            <summary>
            Reads the position array from the path data
            </summary>
            <param name="val">position array</param>
            <returns>True if the next parameter is position array</returns>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Reader.PathDataReader.ReadPoints">
            <summary>
            Reads the points from the path data
            </summary>
            <returns>Points</returns>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Reader.PathDataReader.CheckIfCurrentCharIsSymbol">
            <summary>
            Checks if the current character is symbol
            </summary>
            <returns>True if the character is a symbol</returns>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Reader.PathDataReader.EOF">
            <summary>
            Gets a value indicating whether this <see cref="!:StringTokenizer"/> is EOF.
            </summary>
            <value><c>true</c> if EOF; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Reader.PathDataReader.Length">
            <summary>
            Gets text length.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Reader.PathDataReader.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="T:Spire.Pdf.Tables.PdfHeaderSource">
            <summary>
            Specifies values specifying where the header should formed from.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Tables.PdfHeaderSource.ColumnCaptions">
            <summary>
            The header is formed from column captions' values.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Tables.PdfHeaderSource.Rows">
            <summary>
            The header is formed from rows.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Tables.PdfTableDataSourceType">
            <summary>
            Specifies the datasource type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Tables.PdfTableDataSourceType.External">
            <summary>
            Specifies that the PdfLightTable has been binded to an external datasource.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Tables.PdfTableDataSourceType.TableDirect">
            <summary>
            Specifies that the values are directly binded to the PdfLightTable.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfBorderOverlapStyle">
            <summary>
            Specifies values of the border overlap style.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfBorderOverlapStyle.Overlap">
            <summary>
            Cell borders overlap (are drawn using the same coordinates).
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfBorderOverlapStyle.Inside">
            <summary>
            Cell borders are drawns in the cell's interior.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Lists.PdfList">
            <summary>
            Represents unordered list.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Lists.PdfListBase">
            <summary>
            Represents base class for lists.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListBase.Draw(Spire.Pdf.Graphics.PdfCanvas,System.Single,System.Single)">
            <summary>
            Draws an list on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the list should be printed.</param>
            <param name="x">X co-ordinate of the list.</param>
            <param name="y">Y co-ordinate of the list.</param>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfListBase.Items">
            <summary>
            Gets items of the list.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfListBase.Indent">
            <summary>
            Gets or sets tabulation for the list.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfListBase.TextIndent">
            <summary>
            Gets or sets the indent from the marker to the list item text.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfListBase.Font">
            <summary>
            Gets or sets the list font.
            </summary>		
        </member>
        <member name="P:Spire.Pdf.Lists.PdfListBase.Brush">
            <summary>
            Gets or sets list brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfListBase.Pen">
            <summary>
            Gets or sets list pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfListBase.StringFormat">
            <summary>
            Gets or sets the format of the list.
            </summary>
            <value>The format.</value>
        </member>
        <member name="E:Spire.Pdf.Lists.PdfListBase.BeginItemLayout">
            <summary>
            Event that rises when item begin layout.
            </summary>
        </member>
        <member name="E:Spire.Pdf.Lists.PdfListBase.EndItemLayout">
            <summary>
            Event that rises when item end layout.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfList.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfList.#ctor(Spire.Pdf.Lists.PdfListItemCollection)">
            <summary>
            Creates unordered list using items.
            </summary>
            <param name="items">Items for a list.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfList.#ctor(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfList.#ctor(Spire.Pdf.Lists.PdfMarker)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="marker">The marker for the list.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfList.#ctor(Spire.Pdf.Lists.PdfListItemCollection,Spire.Pdf.Lists.PdfMarker)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="items">The items collection.</param>
            <param name="marker">The marker for the list.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfList.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The formatted text.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfList.#ctor(System.String,Spire.Pdf.Lists.PdfMarker)">
            <summary>
            Initializes a new instance of the  class
            from formatted text that is splitted by new lines.
            </summary>
            <param name="text">The formatted text.</param>
            <param name="marker">The marker.</param>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfList.Marker">
            <summary>
            Gets or sets the marker.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.Oid.x509AuthorityInfoAccess">
            <summary>
            Authority Info Access.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interfaces.IPdfDecryptable.Decrypt(Spire.Pdf.Security.PdfEncryptor,System.Int64)">
            <summary>
            Decrypts the specified encryptor.
            </summary>
            <param name="encryptor">The encryptor.</param>
            <param name="currObjNumber">The curr obj number.</param>
        </member>
        <member name="P:Spire.Pdf.Interfaces.IPdfDecryptable.WasEncrypted">
            <summary>
            Gets a value indicating whether [was encrypted].
            </summary>
            <value><c>true</c> if [was encrypted]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Interfaces.IPdfDecryptable.Decrypted">
            <summary>
            Gets a value indicating whether this  is decrypted.
            </summary>
            <value><c>true</c> if decrypted; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Primitives.PdfString.ExtractedString">
            <summary>
            Gets the readable string .
            </summary>
            <value>The readable string.</value>
        </member>
        <member name="P:Spire.Pdf.Primitives.PdfString.Position">
            <summary>
            Gets or sets the integer value of the specified object.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfDocumentPageCollection">
            <summary>
            Implements a virtual collection of all pages in the document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentPageCollection.Add">
            <summary>
            Creates a page and adds it to the last section in the document.
            </summary>
            <returns>Created page object.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentPageCollection.Insert(System.Int32,Spire.Pdf.PdfNewPage)">
            <summary>
            Inserts a page at the specified index to the last section in the document.
            </summary>
            <param name="index">The index of the page in the section.</param>
            <param name="page">The page.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentPageCollection.IndexOf(Spire.Pdf.PdfNewPage)">
            <summary>
            Gets the index of the page in the document.
            </summary>
            <param name="page">The current page.</param>
            <returns>Index of the page in the document if exists, -1 otherwise.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Spire.Pdf.PdfDocumentPageCollection.GetEnumerator" -->
        <member name="P:Spire.Pdf.PdfDocumentPageCollection.Count">
            <summary>
            Gets the total number of the pages.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentPageCollection.Item(System.Int32)">
            <summary>
            Gets a page by its index in the document.
            </summary>
        </member>
        <member name="E:Spire.Pdf.PdfDocumentPageCollection.PageAdded">
            <summary>
            Represents the  method that executes on a PdfNewDocument when a new page is created.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentPageCollection.PdfPageEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element;
            false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentPageCollection.PdfPageEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentPageCollection.PdfPageEnumerator.Current">
            <summary>
            Gets the current section.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfMetafile">
            <summary>
            Class representing metafiles.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfImage">
            <summary>
            Represents the base class for images.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfImage.FromFile(System.String)">
            <summary>
            Creates PdfImage from a file.
            </summary>
            <param name="path">Path to a file.</param>
            <returns>Returns a created PdfImage object.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfImage.FromStream(System.IO.Stream)">
            <summary>
            Creates PdfImage from stream.
            </summary>
            <param name="stream">The stream.</param>
            <returns>Returns a created PdfImage object.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfImage.FromImage(System.Drawing.Image)">
            <summary>
            Converts a  object into a PDF image.
            </summary>
            <param name="image">The image.</param>
            <returns>Returns a created PdfImage object.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfImage.FromRtf(System.String,System.Single,Spire.Pdf.Graphics.PdfImageType,Spire.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Creates a new image instance from RTF text.
            </summary>
            <param name="rtf">RTF text data.</param>
            <param name="width">Width of the image in points.</param>
            <param name="type">Type of the image that should be created.</param>
            <param name="format">The text string format.</param>
            <returns>PdfImage containing RTF text.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfImage.FromRtf(System.String,System.Single,Spire.Pdf.Graphics.PdfImageType)">
            <summary>
            Creates a new image instance from RTF text.
            </summary>
            <param name="rtf">RTF text data.</param>
            <param name="width">Width of the image in points.</param>
            <param name="type">Type of the image that should be created.</param>
            <returns>PdfImage containing RTF text.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfImage.FromRtf(System.String,System.Single,System.Single,Spire.Pdf.Graphics.PdfImageType)">
            <summary>
            Creates a new image instance from RTF text.
            </summary>
            <param name="rtf">RTF text data.</param>
            <param name="width">Width of the image in points.</param>
            <param name="height">Height of the image in points.</param>
            <param name="type">Type of the image that should be created.</param>
            <returns>PdfImage containing RTF text.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfImage.FromRtf(System.String,System.Single,System.Single,Spire.Pdf.Graphics.PdfImageType,Spire.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Creates a new image instance from RTF text.
            </summary>
            <param name="rtf">RTF text data.</param>
            <param name="width">Width of the image in points.</param>
            <param name="height">Height of the image in points.</param>
            <param name="type">Type of the image that should be created.</param>
            <param name="format">The text string format.</param>
            <returns>PdfImage containing RTF text.</returns>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfImage.Height">
            <summary>
            Gets the height of the image in pixels.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfImage.PngDirectToJpeg">
            <summary>
            If True, png direct convert to Jpx and no mask.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfImage.Width">
            <summary>
            Gets the width of the image in pixels.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfImage.HorizontalResolution">
            <summary>
            Gets the horizontal resolution, in pixels per inch, of this Image. 
            </summary>
            <value>The horizontal resolution.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfImage.VerticalResolution">
            <summary>
            Gets the vertical resolution, in pixels per inch, of this Image. 
            </summary>
            <value>The vertical resolution.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfImage.PhysicalDimension">
            <summary>
            Returns the size of the image in points.
            </summary>
            <remarks>This property uses HorizontalResolution and VerticalResolution for calculating the size in points.</remarks>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfImage.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the wrapped element.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfRadioButtonWidgetItem">
            <summary>
            Represents radio button field of an existing PDF document`s form.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfStateWidgetItem">
            <summary>
            Represents the loaded state item.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfFieldWidgetItem">
            <summary>
            Represents base class for field's group items.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFieldWidgetItem.Bounds">
            <summary>
            Gets or sets the bounds.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFieldWidgetItem.Location">
            <summary>
            Gets or sets the location.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFieldWidgetItem.Size">
            <summary>
            Gets or sets the size.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFieldWidgetItem.Page">
            <summary>
            Gets the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStateWidgetItem.Checked">
            <summary>
            Gets or sets a value indicating whether this  is checked.
            </summary>           
        </member>
        <member name="P:Spire.Pdf.Widget.PdfRadioButtonWidgetItem.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value of the radio button item.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfRadioButtonWidgetItem.Selected">
            <summary>
            Gets or sets a value indicating whether this  is selected.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfListWidgetItem">
            <summary>
            Represents loaded list item.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfListWidgetItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The text.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfListWidgetItem.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>A string value representing the display text of the item. </value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfListWidgetItem.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>A string value representing the value of the item. </value>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfComboBoxWidgetItemCollection">
            <summary>
            Represents collection of Combo box items.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfComboBoxWidgetItemCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfButtonWidgetItemCollection">
            <summary>
            Represents collection of button item.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfButtonWidgetItemCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
        </member>
        <member name="T:Spire.Pdf.HtmlToPdf.HtmlToPdfLayoutParams">
            <summary>
            Represents the layout parameters.
            </summary>
        </member>
        <member name="P:Spire.Pdf.HtmlToPdf.HtmlToPdfLayoutParams.Page">
            <summary>
            Gets or sets the starting layout page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.HtmlToPdf.HtmlToPdfLayoutParams.Bounds">
            <summary>
            Gets or sets the lay outing bounds.
            </summary>
        </member>
        <member name="P:Spire.Pdf.HtmlToPdf.HtmlToPdfLayoutParams.VerticalOffsets">
            <summary>
            Gets or sets the vertical offsets.
            </summary>
            <value>The vertical offsets.</value>
        </member>
        <member name="P:Spire.Pdf.HtmlToPdf.HtmlToPdfLayoutParams.Format">
            <summary>
            Gets or sets the lay outing settings.
            </summary>
        </member>
        <member name="T:Spire.Pdf.HtmlToPdf.HtmlTags">
            <summary>
            HTML tags
            </summary>
        </member>
        <member name="M:Spire.Pdf.HtmlToPdf.HtmlHelper.ForeachTags(System.String,System.Drawing.PointF,Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            parsing html tags
            </summary>
            <param name="s">html content</param>
            <param name="point"></param>
            <param name="fontBase">drawing font</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.HtmlToPdf.HtmlHelper.ProcessHtml(System.String@,System.Int32,System.Drawing.PointF,Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            parsing html tags
            </summary>
            <param name="s">html content</param>
            <param name="index"></param>
            <param name="point"></param>
            <param name="fontBase"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.HtmlToPdf.HtmlHelper.SetHtmlTagsType(Spire.Pdf.HtmlToPdf.HtmlTags,System.String)">
            <summary>
            set html type
            </summary>
            <param name="htmlTags"></param>
            <param name="type"></param>
        </member>
        <member name="M:Spire.Pdf.HtmlToPdf.HtmlHelper.SetHtmlTagsFont(Spire.Pdf.HtmlToPdf.HtmlTags)">
            <summary>
            set text font
            </summary>
            <param name="htmlTags"></param>
        </member>
        <member name="M:Spire.Pdf.HtmlToPdf.HtmlHelper.SetFontStyle(Spire.Pdf.HtmlToPdf.HtmlTags,System.Single,System.Drawing.FontStyle)">
            <summary>
            set font style
            </summary>
            <param name="htmlTags"></param>
            <param name="size"></param>
            <param name="style"></param>
        </member>
        <member name="M:Spire.Pdf.Interfaces.ITrueTypeFont.EqualsToFont(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Checks whether fonts are equals.
            </summary>
            <param name="font">Font to compare.</param>
            <returns>True if fonts are equal, False ofhtrwise.</returns>
        </member>
        <member name="M:Spire.Pdf.Interfaces.ITrueTypeFont.GetCharWidth(System.Char)">
            <summary>
            Returns width of the char symbol.
            </summary>
            <param name="charCode">Char symbol.</param>
            <returns>Width of the char symbol in universal units.</returns>
        </member>
        <member name="M:Spire.Pdf.Interfaces.ITrueTypeFont.GetLineWidth(System.String)">
            <summary>
            Returns width of the text line.
            </summary>
            <param name="line">String line.</param>
            <returns>Width of the char symbol in universal units.</returns>
        </member>
        <member name="M:Spire.Pdf.Interfaces.ITrueTypeFont.GetCharCodeInFont(System.Char)">
            <summary>
            
            </summary>
            <param name="charCode"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Interfaces.ITrueTypeFont.GetLineInFont(System.String)">
            <summary>
            
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Interfaces.ITrueTypeFont.Close">
            <summary>
            Releases all resources.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interfaces.ITrueTypeFont.Font">
            <summary>
            Gets system font.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interfaces.ITrueTypeFont.Size">
            <summary>
            Gets size of the font.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interfaces.ITrueTypeFont.Metrics">
            <summary>
            Gets font metrics.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interfaces.ITrueTypeFont.TTFMetrics">
            <summary>
            Get the ttf metrics.
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Render.ImageRenderEventHandler">
            <summary>
            Provides image render events
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfCommon.DegreesToRadians(System.Double)">
            <summary>
            Converts an angle in degrees to radians.
            </summary>
            <param name="angleInDegrees">Double value of angle in degrees to convert.</param>
            <returns>The value of the angle in radians.</returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfCommon.RadiansToDegrees(System.Double)">
            <summary>
            Converts an angle in radians to degrees.
            </summary>
            <param name="angleInRadians">Double value of angle in radians to convert.</param>
            <returns>The value of the angle in degrees.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Spire.Pdf.General.Render.Font.FontSupport.#cctor" -->
        <member name="M:Spire.Pdf.General.Render.Font.FontSupport.GetCharFromAdobeGlyphListByName(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.FontSupport.GetNameEncoding(System.Int32)">
            <summary>
            get the name of a glyph from its encoding value (NOT the character
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Font.Type1.Type1FontParser.Parse(Spire.Pdf.General.Paper.Font.Common.Locator.FontDefinition,Spire.Pdf.General.Paper.Font.TTF.Internals.Parsing.TTFFileReader)">
            <summary>
            
            </summary>
            <param name="fontDefinition"></param>
            <param name="fontReader"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Fonts.TrueType.TTFontFamily.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Fonts.TrueType.TTFontFamily.Dispose">
            <summary>
            Clean up Memory
            </summary>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfAppearanceField">
            <summary>
            Represents form field with appearance custom support.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfAppearanceField.Appearance">
            <summary>
            Gets the appearance.
            </summary>
            <value>The appearance.</value>
        </member>
        <member name="F:Spire.Pdf.Implementation.Exporting.PdfToHtml.HtmlExportOptions.m_SetPdfToHtmlParameter">
            <summary>
            Pdf to Html, Set Parameter
            </summary>
        </member>
        <member name="M:Spire.Pdf.Implementation.Exporting.PdfToHtml.Html.HtmlTextWriterHelper.DocComment(System.String)">
            <summary>
            write doc comment
            </summary>
            <param name="comment"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.PdfDocumentBase">
            <summary>
            Represent common PdfDocumentBase classes.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfDocumentBase.m_SetPdfToHtmlParameter">
            <summary>
            Pdf to Html, Set Parameter
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfDocumentBase.m_privateFonts">
            <summary>
            Internal variable to store the private font collection.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.Split(System.String)">
            <summary>
            Splits a PDF file to many PDF files, each of them consists of one page from the source file.
            </summary>
            <param name="destFilePattern">Template for destination file names.</param>
            <remarks>
            Each destination file will have 'destFileName{0***}' name,
            where *** is an optional format string for the number of the
            page inside of the source document.
            </remarks>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.Split(System.String,System.Int32)">
            <summary>
            Splits a PDF file to many PDF files, each of them consists of
            one page from the source file.
            </summary>
            <param name="destFilePattern">Template for destination file
            names.</param>
            <param name="startNumber">The number that is use as a start
            point for the page numbering.</param>
            <remarks>
            Each destination file will have 'destFileName{0***}' name,
            where *** is an optional format string for the number of the
            page inside of the source document.
            </remarks>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.Merge(Spire.Pdf.PdfDocumentBase,System.Object[])">
            <summary>
            Merges the specified source documents and return destination document.
            </summary>
            <param name="dest">The destination document, where the other documents are merged into.
            If it's null a new document object will be created.</param>
            <param name="sourceDocuments">The source documents.</param>
            <returns>The document containing merged documents.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.Merge(System.String,System.String)">
            <summary>
            Merges the PDF documents specified by the paths.
            </summary>
            <param name="paths">The array of string paths.</param>
            <param name="password">documents password</param>
            <returns>A new PDF document containing all merged documents.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.DisposeOnClose(System.IDisposable)">
            <summary>
            Adds an object to a collection of the objects that will be disposed during document closing.
            </summary>
            <param name="obj">The object that will be disposed during document closing.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.SaveAsImage(System.Int32)">
            <summary>
            Saves PDF document page as image
            </summary>
            <param name="pageIndex">Page with page index to save as image</param>
            <returns>Returns  page as Image</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.SaveAsImage(System.Int32,System.Int32,System.Int32)">
            <summary>
             Saves PDF document page as image,set Dpi
            </summary>
            <param name="pageIndex">Page with page index to save as image</param>
            <param name="dpiX">Pictures X resolution</param>
            <param name="dpiY">Pictures Y resolution</param>
            <returns>Returns  page as Image</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.SaveAsMetaImage(System.IO.Stream,System.Int32)">
            <summary>
            Saves PDF document page as image
            </summary>
            <param name="stream">MemoryStream obj</param>
            <param name="pageIndex">Page with page index to save as image</param>
            <returns>Returns  page as Image</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.SaveAsMetaImage(System.IO.Stream,System.Int32,System.Int32,System.Int32)">
            <summary>
            Saves PDF document page as image,set Dpi
            </summary>
            <param name="stream">MemoryStream obj</param>
            <param name="pageIndex">Page with page index to save as image</param>
            <param name="dpiX">Pictures X resolution</param>
            <param name="dpiY">Pictures Y resolution</param>
            <returns>Returns  page as Image</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.SaveAsImage(System.Int32,Spire.Pdf.Graphics.PdfImageType)">
            <summary>
            Saves PDF document page as image
            </summary>
            <param name="pageIndex">Page index</param>
            <param name="type">PdfImageType type </param>
            <returns>Returns  page as Image</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.SaveAsImage(System.Int32,Spire.Pdf.Graphics.PdfImageType,System.Int32,System.Int32)">
            <summary>
            Saves PDF document page as image,Set PdfImageType and image Dpi
            </summary>
            <param name="pageIndex">Page index</param>
            <param name="type">PdfImageType type </param>
            <param name="dpiX">Pictures X resolution</param>
            <param name="dpiY">Pictures Y resolution</param>
            <returns>Returns  page as Image</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.SaveAsMetaImageToMemoryStream(System.IO.Stream,System.Int32)">
            <summary>
            Saves document page as image, Pdf to Xps
            </summary>
            <param name="stream">MemoryStream obj</param>
            <param name="pageIndex">Page index</param>
            <returns>Returns  page as Image</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.SaveAsPsPage(System.Int32)">
            <summary>
            Saves document page as image, Pdf to Xps
            </summary>
            <param name="stream">MemoryStream obj</param>
            <param name="pageIndex">Page index</param>
            <returns>Returns  page as Image</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.Save(System.String)">
            <summary>
            Saves the document to the specified filename.
            </summary>
            <param name="filename">The filename.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.Save(System.String,System.Web.HttpResponse,Spire.Pdf.HttpReadType)">
            <summary>
            Saves the document into a HTTP response stream.
            </summary>
            <param name="fileName">The name of the document.</param>
            <param name="response">The HTTP response stream object.</param>
            <param name="type">The type of the reading document.</param>
            <remarks>
            If a document containing digital signature needs to be saved then
            the destination stream must support seeking, otherwise an exception will be raised.
            Since the HTTP response stream does not support seeking please write the document to a memory stream first and then flush it to the destination stream to avoid raising an exception.
            </remarks>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.Save(System.IO.Stream,System.Web.HttpContext)">
            <summary>
            Saves the document into a HTTP response stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="response">The HTTP response stream object.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.Close">
            <summary>
            Closes the document. Releases all common resources.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.Close(System.Boolean)">
            <summary> 
            Closes the document.
            </summary>
            <param name="completely">if set to <c>true</c> the document should close its stream as well.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.Save(System.IO.Stream)">
            <summary>
            Saves the document to the specified stream.
            </summary>
            <param name="stream">The stream object where PDF document will be saved.</param>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.ImportPage(Spire.Pdf.PdfDocumentBase,Spire.Pdf.PdfPageBase)">
            <summary>
            Imports a page.
            </summary>
            <param name="ldDoc">The loaded document.</param>
            <param name="page">The page.</param>
            <returns>The page in the target document.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.ImportPage(Spire.Pdf.PdfDocumentBase,System.Int32)">
            <summary>
            Imports a page.
            </summary>
            <param name="ldDoc">The loaded document.</param>
            <param name="pageIndex">Index of the page.</param>
            <returns>The page in the target document.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.ImportPageRange(Spire.Pdf.PdfDocumentBase,System.Int32,System.Int32)">
            <summary>
            Imports a page range from a loaded document.
            </summary>
            <param name="ldDoc">The loaded document.</param>
            <param name="startIndex">The start page index.</param>
            <param name="endIndex">The end page index.</param>
            <returns>The last created page in the target document.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentBase.CreateBookmarkDestinationDictionary">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentBase.SetPdfToHtmlParameter">
            <summary>
            
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentBase.UsedFonts">
            <summary>
            Gets the fonts which are available in the PDF document.
            </summary>
            <value>Retruns the fonts which are used in the PDF document.</value>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentBase.Template">
            <summary>
            Gets or sets a template that is applied to all pages in the document.
            </summary>        
            <value>The  specifying the default template for the document.</value>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentBase.Pages">
            <summary>
            Gets the pages.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentBase.Security">
            <summary>
            Gets the security parameters of the document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentBase.DocumentInformation">
            <summary>
            Gets or sets document's information and properties.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentBase.ViewerPreferences">
            <summary>
            Gets or sets a viewer preferences object controlling the way the document is to be 
            presented on the screen or in print.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentBase.CompressionLevel">
            <summary>
            Gets or sets the desired level of stream compression.
            </summary>
            <remarks>All new objects should be compressed with this level of the compression.</remarks>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentBase.FileStructure">
            <summary>
            Gets or sets the internal structure of the PDF file.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentBase.JavaScripts">
            <summary>
            Gets the additional document's actions.
            </summary>
            <value>The  specifying the document action.</value>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentBase.Bookmarks">
            <summary>
            Gets the bookmarks.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentBase.PrivateFonts">
            <summary>
            Gets the Private Font Collection
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfBookletCreator">
            <summary>
            Represents a booklet creator, which allows to create a booklet from a Pdf document.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Attachments.PdfAttachmentCollection">
            <summary>
            Represents a collection of the attachment objects.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Attachments.PdfAttachmentCollection.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Attachments.PdfAttachmentCollection.Add(Spire.Pdf.Attachments.PdfAttachment)">
            <summary>
            Adds the specified attachment.
            </summary>
            <param name="attachment">The attachment.</param>
            <returns>Position of the inserted attachment.</returns>
        </member>
        <member name="M:Spire.Pdf.Attachments.PdfAttachmentCollection.Insert(System.Int32,Spire.Pdf.Attachments.PdfAttachment)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="attachment">The attachment.</param>
        </member>
        <member name="M:Spire.Pdf.Attachments.PdfAttachmentCollection.Remove(Spire.Pdf.Attachments.PdfAttachment)">
            <summary>
            Removes the specified attachment.
            </summary>
            <param name="attachment">The attachment.</param>
        </member>
        <member name="M:Spire.Pdf.Attachments.PdfAttachmentCollection.RemoveAt(System.Int32)">
            <summary>
            Removes attachment at the specified index.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Spire.Pdf.Attachments.PdfAttachmentCollection.IndexOf(Spire.Pdf.Attachments.PdfAttachment)">
            <summary>
            Indexes the of attachment.
            </summary>
            <param name="attachment">The attachment.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Attachments.PdfAttachmentCollection.Contains(Spire.Pdf.Attachments.PdfAttachment)">
            <summary>
            Determines whether 
            </summary>
            <param name="attachment">The attachment.</param>
            <returns>
            if it contains the specified attachment, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Attachments.PdfAttachmentCollection.Clear">
            <summary>
            Clears the collection.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Attachments.PdfAttachmentCollection.Item(System.Int32)">
            <summary>
            Gets attachment by its index in the collection.
            </summary>
            <param name="index">Index of the attachment.</param>
            <returns>Attachment object by its index in the collection.</returns>
        </member>
        <member name="P:Spire.Pdf.Attachments.PdfAttachmentCollection.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
        </member>
        <member name="T:Spire.Pdf.ColorSpace.PdfLabColor">
            <summary>
            Represents a calibrated Lab color, based on a Lab colorspace. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfLabColor.#ctor(Spire.Pdf.ColorSpace.PdfColorSpaces)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="colorspace">The ColorSpace.</param>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfLabColor.A">
            <summary>
            Gets or sets the a* component for this color. 
            </summary>
            <value>The a* component of this color.</value>
            <remarks>The range for this value is defined by the Range property of the underlying Lab colorspace. </remarks>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfLabColor.B">
            <summary>
            Gets or sets the b* component for this color. 
            </summary>
            <value>The b* component of this color.</value>
            <remarks>The range for this value is defined by the Range property of the underlying Lab colorspace. </remarks>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfLabColor.L">
            <summary>
            Gets or sets the l component for this color. 
            </summary>
            <value>The l component of this color. </value>
            <remarks>The acceptable range for this value is [0.0 100.0]. 0.0 means the darkest color that can be achieved, and 100.0 means the lightest color. </remarks>
        </member>
        <member name="T:Spire.Pdf.ColorSpace.PdfCalGrayColor">
            <summary>
            Represents a calibrated gray color, based on a CalGray colorspace. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfCalGrayColor.#ctor(Spire.Pdf.ColorSpace.PdfColorSpaces)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="colorspace">The color space.</param>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfCalGrayColor.Gray">
            <summary>
            Gets or sets the gray level for this color. 
            </summary>
            <value>The gray level of this color.</value>
            <remarks>The acceptable range for this value is [0.0 1.0]. 
            0.0 means the darkest color that can be achieved, and 1.0 means the lightest color. </remarks>
        </member>
        <member name="T:Spire.Pdf.Barcode.PdfCode39Barcode">
            <summary>
            Represents a Code39 barcode.
            </summary>
            <remarks> Only the following symbols are allowed in a Code 39 barcode:Only the following symbols are allowed in a Code 39 barcode: 1 2 3 4 5 6 7 8 9 0 A B C D E F G H I J K L M N O P Q R S T U V W X Y Z - . $ / + % SPACE
            All alphabetic characters are uppercase. If lowercase characters are required, then a Code 39 Extended barcode must be used.
            </remarks>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode39Barcode.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode39Barcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The Barcode text.</param>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfActionAnnotation">
            <summary>
            Represents the annotation with associated action.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfActionLinkAnnotation">
            <summary>
            Represents base class for link annotations with associated action.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfLinkAnnotation">
            <summary>
            Represents the base class for link annotations.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLinkAnnotation.m_highlightMode">
            <summary>
            Highlight mode of the annotation.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfLinkAnnotation.#ctor">
            <summary>
            Initializes new instance of  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfLinkAnnotation.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes new instance of  class.
            </summary>
            <param name="rectangle">Bounds of the annotation.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfActionLinkAnnotation.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rectangle">Bounds of the annotation.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfActionLinkAnnotation.#ctor(System.Drawing.RectangleF,Spire.Pdf.Actions.PdfAction)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rectangle">Bounds specifies the location of the drawn text.</param>
            <param name="action">The  specifies an action to be executed when the link is activated.</param>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfActionLinkAnnotation.Action">
            <summary>
            Gets or sets the action for the link annotation.
            </summary>
            <value>The action to be executed when the link is activated.</value>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfActionAnnotation.#ctor(System.Drawing.RectangleF,Spire.Pdf.Actions.PdfAction)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rectangle">Bounds of the annotation.</param>
            <param name="action">The Pdf action.</param>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfLaunchAction">
            <summary>
            Represents an action which launches an application or opens or prints a document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfLaunchAction.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="fileName">Name of the file to be launched.</param>       
        </member>
        <member name="M:Spire.Pdf.Actions.PdfLaunchAction.#ctor(System.String,Spire.Pdf.Actions.PdfFilePathType)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="fileName">Name of the file to be launched.</param>    
            <param name="fileName">Name of the file to be launched.</param>
            <param name="path">Name of the path type.</param>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfLaunchAction.FileName">
            <summary>
            Gets or sets file to be launched.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Interfaces.IPdfCompressor.Compress(System.Byte[])">
            <summary>
            Compresses bytes data.
            </summary>
            <param name="data">Bytes data.</param>
            <returns>
            Compressed bytes data.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Interfaces.IPdfCompressor.Compress(System.String)">
            <summary>
            Compresses string data.
            </summary>
            <param name="data">String data.</param>
            <returns>
            Compressed string data.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Interfaces.IPdfCompressor.Compress(System.IO.Stream)">
            <summary>
            Compresses stream data.
            </summary>
            <param name="inputStream">Stream data.</param>
            <returns>
            Compressed streams data.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Interfaces.IPdfCompressor.Decompress(System.String)">
            <summary>
            Decompresses string data.
            </summary>
            <param name="value">String data.</param>
            <returns>
            Decompressed bytes data.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Interfaces.IPdfCompressor.Decompress(System.Byte[])">
            <summary>
            Decompresses bytes data.
            </summary>
            <param name="value">Bytes data.</param>
            <returns>
            Decompressed bytes data.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Interfaces.IPdfCompressor.Decompress(System.IO.Stream)">
            <summary>
            Decompresses stream data.
            </summary>
            <param name="inputStream">Stream data.</param>
            <returns>
            Decompressed stream data.
            </returns>
        </member>
        <member name="P:Spire.Pdf.Interfaces.IPdfCompressor.Type">
            <summary>
            Gets the compressor type.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Interfaces.IPdfCompressor.Name">
            <summary>
            Gets the compressor name in PDF format.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfLine">
            <summary>
            Represents a line shape.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfLine.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="x2">The x2.</param>
            <param name="y2">The y2.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfLine.#ctor(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="point1">The point1.</param>
            <param name="point2">The point2.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfLine.#ctor(Spire.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="x2">The x2.</param>
            <param name="y2">The y2.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfLine.#ctor(Spire.Pdf.Graphics.PdfPen,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="point1">The point1.</param>
            <param name="point2">The point2.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfLine.X1">
            <summary>
            Gets or sets the x coordinate of the start point.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfLine.Y1">
            <summary>
            Gets or sets the y coordinate of the start point.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfLine.X2">
            <summary>
            Gets or sets the x coordinate of the end point.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfLine.Y2">
            <summary>
            Gets or sets the y coordinate of the end point.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfRadialGradientBrush">
            <summary>
            Represent radial gradient brush.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfGradientBrush">
            <summary>
            Implements gradient brush capabilities.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfBrush">
            <summary>
            Represents the abstract brush, which containing a basic functionality of a brush.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfBrush.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfBrush.Clone">
            <summary>
            Creates a new copy of a brush.
            </summary>
            <returns>A new instance of the Brush class.</returns>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfGradientBrush.Background">
            <summary>
            Gets or sets the background color of the brush.
            </summary>
            <remarks>This value is optional. If null is assigned to it,
            the associated entry is removed from the appropriate dictionary.</remarks>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfGradientBrush.AntiAlias">
            <summary>
            Gets or sets a value indicating whether use anti aliasing algorithm.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfGradientBrush.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the wrapped element.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRadialGradientBrush.#ctor(System.Drawing.PointF,System.Single,System.Drawing.PointF,System.Single,Spire.Pdf.Graphics.PdfRGBColor,Spire.Pdf.Graphics.PdfRGBColor)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="centreStart">The start centre.</param>
            <param name="radiusStart">The start radius.</param>
            <param name="centreEnd">The end centre.</param>
            <param name="radiusEnd">The end radius.</param>
            <param name="colorStart">The start color.</param>
            <param name="colorEnd">The end color.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRadialGradientBrush.Clone">
            <summary>
            Creates a new copy of a brush.
            </summary>
            <returns>A new instance of the Brush class.</returns>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRadialGradientBrush.Blend">
            <summary>
            Gets or sets a PdfBlend that specifies positions
            and factors that define a custom falloff for the gradient.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRadialGradientBrush.InterpolationColors">
            <summary>
            Gets or sets a ColorBlend that defines a multicolor linear gradient.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRadialGradientBrush.LinearColors">
            <summary>
            Gets or sets the starting and ending colors of the gradient.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRadialGradientBrush.Rectangle">
            <summary>
            Gets or sets the rectangle.
            </summary>
            <value>The rectangle.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRadialGradientBrush.Extend">
            <summary>
            Gets or sets the value indicating whether the gradient
            should extend starting and ending points.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfDocumentInformation">
            <summary>
            A class containing the information about the document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentInformation.CreationDate">
            <summary>
            Gets or sets the creation date.
            </summary>
            <value>The creation date.</value>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentInformation.ModificationDate">
            <summary>
            Gets or sets the modification date.
            </summary>
            <value>The modification date.</value>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentInformation.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentInformation.Author">
            <summary>
            Gets or sets the author.
            </summary>
            <value>The author of the document.</value>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentInformation.Subject">
            <summary>
            Gets or sets the subject.
            </summary>
            <value>The subject.</value>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentInformation.Keywords">
            <summary>
            Gets or sets the keywords.
            </summary>
            <value>The keywords.</value>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentInformation.Creator">
            <summary>
            Gets or sets the creator.
            </summary>
            <value>The creator.</value>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentInformation.Producer">
            <summary>
            If the document was converted to PDF from another format,
            the name of the application (for example, Acrobat Distiller)
            that converted it to PDF.
            </summary>
            <value>The producer of the document.</value>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentInformation.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="F:Spire.Pdf.Widget.PdfDocumentWidget.m_bookmark">
            <summary>
            Collection of loaded and created pages.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfDocumentWidget.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Load from Stream ,And Used by PdfViewer-Asp
            </summary>
            <param name="file"></param>
            <param name="isDisposedStream"></param>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfDocumentWidget.VerifySignature(System.String)">
            <summary>
            Verify PDF Document regarding signature.
            </summary>
            <param name="sigName">Signature field name.</param>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfDocumentWidget.VerifyDocModified(System.String)">
            <summary>
            Check if the document was altered after signed. True if modified; otherwise false.
            </summary>
            <param name="signName">Signature field name.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfDocumentWidget.GetSignatureFieldWidget(Spire.Pdf.Widget.PdfFormWidget,System.String)">
            <summary>
            Get PdfSignatureFieldWidget obj from form  by signName
            </summary>
            <param name="form"></param>
            <param name="signName"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfDocumentWidget.RemoveExtendedRight">
            <summary>
            Remove Extended right.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfDocumentWidget.GetNextSignatureFieldWidget(Spire.Pdf.Widget.PdfFormWidget,System.String)">
            <summary>
            Get next PdfSignatureFieldWidget obj from form  by signName
            </summary>
            <param name="form"></param>
            <param name="signName"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfDocumentWidget.GetCertificateData(System.String)">
            <summary>
            Get PDF Document regarding CertificateData
            </summary>
            <param name="sigName">Signature field name.</param>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfDocumentWidget.GetSignatureContent(System.String)">
            <summary>
            Get PDF Document regarding signature.
            </summary>
            <param name="sigName">Signature field name.</param>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfDocumentWidget.getContents(Spire.Pdf.Primitives.PdfArray)">
            <summary>
            
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfDocumentWidget.ReadBytes(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="index"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfDocumentWidget.Conformance">
            <summary>
            Gets the conformance level applied in the document.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfFormWidget">
            <summary>
            Represents Loaded form.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfForm">
            <summary>
            Represents interactive form of the Pdf document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfForm.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfForm.Fields">
            <summary>
            Gets the fields.
            </summary>
            <value>The Form fields.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfForm.IsFlatten">
            <summary>
            Gets or sets a value indicating whether this  is flatten.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfForm.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the form is read only.
            </summary>
            <value><c>true</c> if the form is read only; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfForm.AutoNaming">
            <summary>
            Gets or sets a value indicating whether [field auto naming].
            </summary>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfForm.NeedAppearances">
            <summary>
            Gets or sets a value indicating whether the viewer must generate appearances for fields.
            </summary>
            <value><c>true</c> if viewer must generate appearance; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfForm.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfFormWidget.ExportData(System.String,Spire.Pdf.Widget.DataFormat,System.String)">
            <summary>
            Export the form data to a file.
            </summary>
            <param name="fileName">Name of the document which is need to export.</param>
            <param name="dataFormat">The format of exported data.</param>
            <param name="formName"> The name of the PDF file the data is exported from.</param>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfFormWidget.ExportData(System.IO.Stream,Spire.Pdf.Widget.DataFormat,System.String)">
            <summary>
            Export the form data to a file.
            </summary>
            <param name="fileName">The stream where form data will be exported.</param>
            <param name="dataFormat">The format of exported data</param>
            <param name="formName"> The name of the PDF file the data is exported from</param>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfFormWidget.ImportData(System.String,Spire.Pdf.Widget.DataFormat)">
            <summary>
            Imports the data.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="dataFormat">The data format.</param>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfFormWidget.ImportData(System.String,Spire.Pdf.Widget.DataFormat,System.Boolean)">
            <summary>
            Imports the data.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="dataFormat">The data format.</param>
            <param name="errorFlag">if it is error flag, set to <c>true</c>.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfFormWidget.ImportDataFDF(System.IO.Stream,System.Boolean)">
            <summary>
            Import form data from FDF file.
            </summary>
            <param name="stream">The FDF file stream</param>
            <param name="continueImportOnError">False if the import should stop on the first field that generates an error, or true if the import should ignore the error and continue with the next field.</param>
            <returns>Document form fields filled with data which are imported from FDF.</returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfFormWidget.HighlightFields(System.Boolean)">
            <summary>
            Sets/Resets the form field highlight option.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfFormWidget.OnlyHexInString(System.String)">
            <summary>
            Called when [hex in string].
            </summary>
            <param name="test">The test.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfFormWidget.ImportDataXFDF(System.String)">
            <summary>
            Imports XFDF Data
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfFormWidget.ExtractSignatureAsImages">
            <summary>
            Extract Images from Signature
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfFormWidget.RenderFromAnnots(Spire.Pdf.General.Render.PdfElement.PdfPageResources)">
            <summary>
            
            </summary>
            <param name="apAsAnnotsRes"></param>
            <returns></returns>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFormWidget.FieldsWidget">
            <summary>
            Gets the field collection.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFormWidget.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the form is read only.
            </summary>
            <value>True if the field is read-only, false otherwise. Default is false.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFormWidget.XFAForm">
            <summary>
            Gets XFA data of the form.
            </summary>
            
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFormWidget.NeedAppearances">
            <summary>
            Gets or sets a value indicating whether need appearances.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfPopupAnnotationWidget">
            <summary>
            Represents the loaded pop up annotation class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfPopupAnnotationWidget.Open">
            <summary>
            Gets or sets the open option of the popup annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfPopupAnnotationWidget.Icon">
            <summary>
            Gets or sets the icon of the annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Separator.None">
            <summary>
            Is not a separator
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Separator.Separator">
            <summary>
            Is a separator, but can not be the first char of a new line
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Separator.LineBreakSeparator">
            <summary>
            Is a separator which can be the first char of a new line
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Separator.InitialQuotePunctuation">
            <summary>
            Indicates that the character is an opening or initial quotation mark.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Separator.G7FFLetter">
            <summary>
            Letter, whoes code > 0x7ff
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfLayoutHTMLResult.HTMLViewBounds">
            <summary>
            The actual bounds of the html view. It may larger than Bounds
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Render.Font.TrueTypeFont.IFont">
            <summary>
            Description of IFont.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Font.Common.IFontFactory.CreateFont(Spire.Pdf.General.Paper.Font.Common.Locator.FontDefinition,Spire.Pdf.General.Paper.Font.TTF.Internals.Parsing.TTFFileReader)">
            <summary>
             Creates a font, using font definition and ttfReader
            </summary>
            <param name="fontDefinition"></param>
            <param name="fontReader"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfListFieldItem">
            <summary>
            Represents an item of the list fields.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfListFieldItem.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfListFieldItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The item text, it is displayed in the list.</param>
            <param name="value">The item value, it is exported when form content is exported.</param>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfListFieldItem.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text of the list item field.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfListFieldItem.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value of the list item field.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfListFieldItem.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value>The primitive.</value>
        </member>
        <member name="T:Spire.Pdf.Barcode.PdfCode11Barcode">
            <summary>
            Represents a Code11 barcode.
            </summary>
            <remarks> Only the following symbols are allowed in a Code 11 barcode: 0 1 2 3 4 5 6 7 8 9 -</remarks>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode11Barcode.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode11Barcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The Barcode Text.</param>
            <param name="text">The Barcode Text.</param>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DAnnotation">
            <summary>
            Represents the 3D annotation for a PDF document.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfFileAnnotation">
            <summary>
            Represents a base class for file attachment annotation. 
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfFileAnnotation.FileName">
            <summary>
            Gets or sets file name of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfFileAnnotation.Appearance">
            <summary>
            Gets or sets appearance of the annotation.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DAnnotation.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rectangle">Bounds of the annotation.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DAnnotation.#ctor(System.Drawing.RectangleF,System.String)">
            <param name="rectangle">Bounds of the annotation.</param>
            <param name="fileName">Name of the sound file.</param>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DAnnotation.Views">
            <summary>
            Gets the list of available views for the current 3D artwork.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DAnnotation.DefaultView">
            <summary>
            Gets or sets the default view.
            </summary>
            <value>The default view.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DAnnotation.OnInstantiate">
            <summary>
            Gets or sets the code to execute when the 3D artwork is instantiated. 
            <value>Javascript code to be executed when the 3D artwork is instantiated.</value>
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DAnnotation.Activation">
            <summary>
            Gets or sets the activation options for the annotation. 
            </summary>
            <remarks>Defines the times at which the annotation should be activated and deactivated and the state of the 3D artwork instance at those times.</remarks>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DAnnotation.FileName">
            <value>Filename with Full path</value>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfSoundAction">
            <summary>
            Represents the sound action.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfSoundAction.#ctor(System.String)">
            <summary>
             Initializes a new instance of the  class.
            </summary>
            <param name="fileName">Name of the sound file.</param>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfSoundAction.Volume">
            <summary>
            Gets or sets the volume at which to play the sound, in the range -1.0 to 1.0.
            </summary>
            <value>The volume of the sound.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfSoundAction.FileName">
            <value>The name of the sound file.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfSoundAction.Sound">
            <summary>
            Gets or sets the sound.
            </summary>
            <value> represents the sound.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfSoundAction.Synchronous">
            <summary>
            Gets or sets a value whether to play the sound synchronously or asynchronously.
            If this flag is true, the viewer application retains control, allowing no further 
            user interaction other than canceling the sound, until the sound has been 
            completely played. Default value: false.
            </summary>
            <value><c>true</c> if synchronous; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfSoundAction.Repeat">
            <summary>
            Gets or sets a value indicating whether to repeat the sound indefinitely. 
            If this entry is present, the  property is ignored. Default value: false.
            </summary>
            <value><c>true</c> if repeat; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfSoundAction.Mix">
            <summary>
            Gets or sets a value indicating whether to mix this sound with any other 
            sound already playing. If this flag is false, any previously playing sound is 
            stopped before starting this sound; this can be used to stop a repeating 
            sound. Default value: false.
            </summary>
            <value><c>true</c> if mix; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfJavaScriptAction">
            <summary>
            Represents an action which performs java script action in pdf document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfJavaScriptAction.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="javaScript">The java script code.</param>
            <value>A string value representing valid javascript code to be executed.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfJavaScriptAction.Script">
             <summary>
            Gets or sets the javascript code to be executed when this action is executed. 
             </summary>
             <value>A string value representing valid javascript code to be executed. </value>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfJavaScript">
            <summary>
            The Adobe Built-in JavaScript
            </summary>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfJavaScript.GetNumberFormatString(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Get a AFNumber_Format string
            </summary>
            <param name="nDec">The number of places after the decimal point</param>
            <param name="sepStyle">The integer denoting whether to use a separator or not. If sepStyle=0, use commas. If sepStyle=1, do not separate.</param>
            <param name="negStyle">The formatting used for negative numbers: 0 = MinusBlack, 1 = Red, 2 = ParensBlack, 3 = ParensRed</param>
            <param name="currStyle">The currency style - not used</param>
            <param name="strCurrency">The currency symbol</param>
            <param name="bCurrencyPrepend">True to prepend the currency symbol; false to display on the end of the number</param>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfJavaScript.GetNumberKeystrokeString(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Get a AFNumber_Keystroke string
            </summary>
            <param name="nDec">The number of places after the decimal point</param>
            <param name="sepStyle">The integer denoting whether to use a separator or not. If sepStyle=0, use commas. If sepStyle=1, do not separate.</param>
            <param name="negStyle">The formatting used for negative numbers: 0 = MinusBlack, 1 = Red, 2 = ParensBlack, 3 = ParensRed</param>
            <param name="currStyle">The currency style - not used</param>
            <param name="strCurrency">The currency symbol</param>
            <param name="bCurrencyPrepend">True to prepend the currency symbol; false to display on the end of the number</param>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfJavaScript.GetRangeValidateString(System.Boolean,System.Single,System.Boolean,System.Single)">
            <summary>
            Get a AFRange_Validate string
            </summary>
            <param name="bGreaterThan">Indicate the use of the greater than comparison</param>
            <param name="nGreaterThan">The value to be used in the greater than comparison</param>
            <param name="bLessThan">Indicate the use of the less than comparison</param>
            <param name="nLessThan">The value to be used in the less than comparison</param>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfJavaScript.GetPercentFormatString(System.Int32,System.Int32)">
            <summary>
            Get a AFPercent_Format string
            </summary>
            <param name="nDec">The number of places after the decimal point</param>
            <param name="sepStyle">The integer denoting whether to use a separator or not. If sepStyle=0, use commas. If sepStyle=1, do not separate</param>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfJavaScript.GetPercentKeystrokeString(System.Int32,System.Int32)">
            <summary>
            Get a AFPercent_Keystroke string
            </summary>
            <param name="nDec">The number of places after the decimal point</param>
            <param name="sepStyle">The integer denoting whether to use a separator or not. If sepStyle=0, use commas. If sepStyle=1, do not separate</param>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfJavaScript.GetDateFormatString(System.String)">
            <summary>
            Get a AFDate_FormatEx string
            </summary>
            <param name="cFormat">Must be one of: "m/d", "m/d/yy", "mm/dd/yy", "mm/yy", "d-mmm", "d-mmm-yy", "dd-mmm-yy", "yymm-dd", "mmm-yy", "mmmm-yy", "mmm d, yyyy", "mmmm d, yyyy", "m/d/yy h:MM tt", "m/d/yy HH:MM"</param>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfJavaScript.GetDateKeystrokeString(System.String)">
            <summary>
            Get a AFDate_KeystrokeEx string
            </summary>
            <param name="cFormat">Must be one of: "m/d", "m/d/yy", "mm/dd/yy", "mm/yy", "d-mmm", "d-mmm-yy", "dd-mmm-yy", "yymm-dd", "mmm-yy", "mmmm-yy", "mmm d, yyyy", "mmmm d, yyyy", "m/d/yy h:MM tt", "m/d/yy HH:MM"</param>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfJavaScript.GetTimeFormatString(System.Int32)">
            <summary>
            Get a AFTime_Format string
            </summary>
            <param name="ptf">The time format: 0 = 24HR_MM [ 14:30 ], 1 = 12HR_MM [ 2:30 PM ], 2 = 24HR_MM_SS [ 14:30:15 ], 3 = 12HR_MM_SS [ 2:30:15 PM ]</param>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfJavaScript.GetTimeKeystrokeString(System.Int32)">
            <summary>
            Get a AFTime_Keystroke string
            </summary>
            <param name="ptf">The time format: 0 = 24HR_MM [ 14:30 ], 1 = 12HR_MM [ 2:30 PM ], 2 = 24HR_MM_SS [ 14:30:15 ], 3 = 12HR_MM_SS [ 2:30:15 PM ]</param>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfJavaScript.GetSpecialFormatString(System.Int32)">
            <summary>
            Get a AFSpecial_Format string
            </summary>
            <param name="psf">The type of formatting to use:0 = zip code, 1 = zip + 4, 2 = phone, 3 = SSN</param>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfJavaScript.GetSpecialKeystrokeString(System.Int32)">
            <summary>
            Get a AFSpecial_Format string
            </summary>
            <param name="psf">The type of formatting to use:0 = zip code, 1 = zip + 4, 2 = phone, 3 = SSN</param>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfJavaScript.GetSimpleCalculateString(System.String,System.String[])">
            <summary>
            Get a AFSimple_Calculate string
            </summary>
            <param name="cFunction">Must be one of "AVG", "SUM", "PRD", "MIN", "MAX"</param>
            <param name="cFields">The name list of the fields to use in the calculation</param>
        </member>
        <member name="T:Spire.Pdf.Tables.PdfTableLayoutFormat">
            <summary>
            Represents the parameters for Light Table layout.
            </summary>  
        </member>
        <member name="M:Spire.Pdf.Tables.PdfTableLayoutFormat.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfTableLayoutFormat.#ctor(Spire.Pdf.Graphics.PdfTextLayout)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="baseFormat">The base format.</param>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTableLayoutFormat.StartColumnIndex">
            <summary>
            Gets or sets the start column index.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTableLayoutFormat.EndColumnIndex">
            <summary>
            Gets or sets the end column index.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Security.PdfEncryptionKeySize">
            <summary>
            Specifies length of the encryption key for encryption.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfEncryptionKeySize.Key40Bit">
            <summary>
            The key is 40 bit long.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfEncryptionKeySize.Key128Bit">
            <summary>
            The key is 128 bit long.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfEncryptionKeySize.Key256Bit">
            <summary>
            The key is 256 bit long.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Security.PdfEncryptionAlgorithm">
            <summary>
            Specifies the type of encryption algorithm used.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfEncryptionAlgorithm.RC4">
            <summary>
            The encryption algorithm is RC4.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfEncryptionAlgorithm.AES">
            <summary>
            The encryption algorithm is AES.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Security.PdfPermissionsFlags">
            <summary>
            Specifies the available permissions set for the signature.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfPermissionsFlags.Default">
            <summary>
            Default value.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfPermissionsFlags.Print">
            <summary>
            Print the document.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfPermissionsFlags.EditContent">
            <summary>
            Edit content.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfPermissionsFlags.CopyContent">
            <summary>
            Copy content.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfPermissionsFlags.EditAnnotations">
            <summary>
            Add or modify text annotations, fill in interactive form fields.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfPermissionsFlags.FillFields">
            <summary>
            Fill form fields. (Only for 128 bits key).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfPermissionsFlags.AccessibilityCopyContent">
            <summary>
            Copy accessibility content.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfPermissionsFlags.AssembleDocument">
            <summary>
            Assemble document permission. (Only for 128 bits key).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfPermissionsFlags.FullQualityPrint">
            <summary>
            Full quality print.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.SecurityHandlers.Standard">
            <summary>
            The built-in password-based security handler.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Security.StoreType">
            <summary>
            Specifies the naming a system store.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.StoreType.MY">
            <summary>
            A certificate store that holds certificates with associated private keys.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.StoreType.ROOT">
            <summary>
            Root certificates.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.StoreType.CA">
            <summary>
            Certification authority certificates.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.StoreType.SPC">
            <summary>
            Software Publisher Certificate.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Security.PdfCertificationFlags">
            <summary>
            Specifies the available permissions on certificated document.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfCertificationFlags.ForbidChanges">
            <summary>
            Disallow any changes to the document.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfCertificationFlags.AllowFormFill">
            <summary>
            Only allow form fill-in actions on this document.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.PdfCertificationFlags.AllowComments">
            <summary>
            Only allow commenting and form fill-in actions on this document.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Security.SignatureFlags">
            <summary>
            Enumeration of signature flags.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.SignatureFlags.None">
            <summary>
            No flags specified.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.SignatureFlags.SignaturesExists">
            <summary>
            If set, the document contains at least one signature field. This flag allows a viewer 
            application to enable user interface items (such as menu items or pushbuttons) related 
            to signature processing without having to scan the entire document for the presence 
            of signature fields.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.SignatureFlags.AppendOnly">
            <summary>
            If set, the document contains signatures that may be invalidated if the file is saved 
            (written) in a way that alters its previous contents, as opposed to an incremental 
            update. Merely updating the file by appending new information to the end of the 
            previous version is safe. Viewer applications can use this flag to present 
            a user requesting a full save with an additional alert box warning that signatures 
            will be invalidated and requiring explicit confirmation before continuing with the operation.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Security.ConfiguerGraphicType">
            <summary>
            Signture Configuer Graphic type
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.ConfiguerGraphicType.No">
            <summary>
            No Show Picture Signature and Text Signature
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.ConfiguerGraphicType.Picture">
            <summary>
            draw Picture Signature
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.ConfiguerGraphicType.Text">
            <summary>
            draw Text Signature
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.ConfiguerGraphicType.PictureSignInformation">
            <summary>
            draw Picture Signature and Information
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.ConfiguerGraphicType.TextSignInformation">
            <summary>
            draw Text Signature and Information
            </summary>
        </member>
        <member name="F:Spire.Pdf.Security.ConfiguerGraphicType.SignInformationPicture">
            <summary>
            draw  Information and Picture Signature
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfLinearGradientBrush">
            <summary>
            Implements linear gradient brush by using PDF axial shading pattern.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfLinearGradientBrush.#ctor(System.Drawing.PointF,System.Drawing.PointF,Spire.Pdf.Graphics.PdfRGBColor,Spire.Pdf.Graphics.PdfRGBColor)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="point1">The starting point of the gradient.</param>
            <param name="point2">The end point of the gradient.</param>
            <param name="color1">The starting color of the gradient.</param>
            <param name="color2">The end color of the gradient.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfLinearGradientBrush.#ctor(System.Drawing.RectangleF,Spire.Pdf.Graphics.PdfRGBColor,Spire.Pdf.Graphics.PdfRGBColor,Spire.Pdf.Graphics.PdfLinearGradientMode)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rect">A RectangleF structure that specifies the bounds of the linear gradient. </param>
            <param name="color1">The starting color for the gradient.</param>
            <param name="color2">The ending color for the gradient.</param>
            <param name="mode">The mode.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfLinearGradientBrush.#ctor(System.Drawing.RectangleF,Spire.Pdf.Graphics.PdfRGBColor,Spire.Pdf.Graphics.PdfRGBColor,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rect">A RectangleF structure that specifies the bounds of the linear gradient.</param>
            <param name="color1">The starting color for the gradient.</param>
            <param name="color2">The ending color for the gradient.</param>
            <param name="angle">The angle, measured in degrees clockwise from the x-axis,
            of the gradient's orientation line.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfLinearGradientBrush.Clone">
            <summary>
            Creates a new copy of a brush.
            </summary>
            <returns>A new instance of the Brush class.</returns>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfLinearGradientBrush.Blend">
            <summary>
            Gets or sets a PdfBlend that specifies positions
            and factors that define a custom falloff for the gradient.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfLinearGradientBrush.InterpolationColors">
            <summary>
            Gets or sets a ColorBlend that defines a multicolor linear gradient.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfLinearGradientBrush.LinearColors">
            <summary>
            Gets or sets the starting and ending colors of the gradient.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfLinearGradientBrush.Rectangle">
            <summary>
            Gets a rectangular region that defines
            the boundaries of the gradient.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfLinearGradientBrush.Extend">
            <summary>
            Gets or sets the value indicating whether the gradient
            should extend starting and ending points.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfRGBColor">
            <summary>
            Implements structures and routines working with color.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRGBColor.#ctor(Spire.Pdf.Graphics.PdfRGBColor)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="color">Source color object.</param>
            <property name="flag" value="Finished"/>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRGBColor.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="color">Source color object.</param>
            <property name="flag" value="Finished"/>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRGBColor.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="gray">Gray value.</param>
            <property name="flag" value="Finished"/>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRGBColor.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="red">Red channel value.</param>
            <param name="green">Green channel value.</param>
            <param name="blue">Blue channel value.</param>
            <property name="flag" value="Finished"/>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRGBColor.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="cyan">Cyan channel value.</param>
            <param name="magenta">Magenta channel value.</param>
            <param name="yellow">Yellow channel value.</param>
            <param name="black">Black channel value.</param>
            <property name="flag" value="Finished"/>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRGBColor.ToArgb">
            <summary>
            Creates the Alpha ,Red ,Green, and Blue value of this PDFColor structure.
            </summary>
            <returns>ARGB value.</returns>
            <property name="flag" value="Finished"/>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRGBColor.op_Implicit(System.Drawing.Color)~Spire.Pdf.Graphics.PdfRGBColor">
            <summary>
            Implicit operator.
            </summary>
            <param name="color">System.Drawing.Color.</param>
            <returns>PDFColor.</returns>
            <property name="flag" value="Finished"/>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRGBColor.op_Implicit(Spire.Pdf.Graphics.PdfRGBColor)~System.Drawing.Color">
            <summary>
            Implicit operator.
            </summary>
            <param name="color">System.Drawing.Color.</param>
            <returns>PDFColor.</returns>
            <property name="flag" value="Finished"/>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRGBColor.op_Equality(Spire.Pdf.Graphics.PdfRGBColor,Spire.Pdf.Graphics.PdfRGBColor)">
            <summary>
            Operator ==.
            </summary>
            <param name="colour1">The color 1.</param>
            <param name="colour2">The color 2.</param>
            <returns>
            True if color 1 is equal to color 2; otherwise False.
            </returns>
            <property name="flag" value="Finished"/>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRGBColor.op_Inequality(Spire.Pdf.Graphics.PdfRGBColor,Spire.Pdf.Graphics.PdfRGBColor)">
            <summary>
            Operator !=.
            </summary>
            <param name="colour1">The color 1.</param>
            <param name="colour2">The color 2.</param>
            <returns>
            True if color 1 is not equal to color 2; otherwise False.
            </returns>
            <property name="flag" value="Finished"/>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRGBColor.Equals(System.Object)">
            <summary>
            Determines whether the specified 
            is equal to the current .
            </summary>
            <param name="obj">The  to
            compare with the current .</param>
            <returns>
            True if the specified  is equal
            to the current ; otherwise -
            False.
            </returns>
            <property name="flag" value="Finished"/>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRGBColor.Equals(Spire.Pdf.Graphics.PdfRGBColor)">
            <summary>
            Determines if the specified color is equal to this one.
            </summary>
            <param name="colour">The color.</param>
            <returns>
            True if the color is equal; otherwise - False.
            </returns>
            <property name="flag" value="Finished"/>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRGBColor.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for
            use in hashing algorithms and data structures like a hash
            table.
            </summary>
            <returns>
            A hash code for the current .
            </returns>
            <property name="flag" value="Finished"/>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRGBColor.CompareColours(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Compares colors.
            </summary>
            <param name="color1">The color 1.</param>
            <param name="color2">The color 2.</param>
            <returns>
            True if colors are identical; otherwise - False.
            </returns>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRGBColor.Empty">
            <summary>
            Gets a null color.
            </summary>
            <value>The empty.</value>
            <property name="flag" value="Finished"/>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRGBColor.IsEmpty">
            <summary>
            Gets whether the PDFColor is Empty or not.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
            <property name="flag" value="Finished"/>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRGBColor.B">
            <summary>
            Gets or sets Blue channel value.
            </summary>
            <value>The B.</value>
            <property name="flag" value="Finished"/>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRGBColor.Blue">
            <summary>
            Gets the blue.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRGBColor.C">
            <summary>
            Gets or sets Cyan channel value.
            </summary>
            <value>The C.</value>
            <property name="flag" value="Finished"/>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRGBColor.G">
            <summary>
            Gets or sets Green channel value.
            </summary>
            <value>The G.</value>
            <property name="flag" value="Finished"/>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRGBColor.Green">
            <summary>
            Gets the green.
            </summary>
            <value>The green.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRGBColor.Gray">
            <summary>
            Gets or sets Gray channel value.
            </summary>
            <value>The gray.</value>
            <property name="flag" value="Finished"/>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRGBColor.K">
            <summary>
            Gets or sets Black channel value.
            </summary>
            <value>The K.</value>
            <property name="flag" value="Finished"/>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRGBColor.M">
            <summary>
            Gets or sets Magenta channel value.
            </summary>
            <value>The M.</value>
            <property name="flag" value="Finished"/>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRGBColor.R">
            <summary>
            Gets or sets Red channel value.
            </summary>
            <value>The R.</value>
            <property name="flag" value="Finished"/>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRGBColor.Red">
            <summary>
            Gets the red.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRGBColor.Y">
            <summary>
            Gets or sets Yellow channel value.
            </summary>
            <value>The Y.</value>
            <property name="flag" value="Finished"/>
        </member>
        <member name="T:Spire.Pdf.PdfDocumentTemplate">
            <summary>
            Encapsulates a page template for all the pages in the document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfDocumentTemplate.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentTemplate.Left">
            <summary>
            Gets or sets a left page template.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentTemplate.Top">
            <summary>
            Gets or sets a top page template.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentTemplate.Right">
            <summary>
            Gets or sets a right page template.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentTemplate.Bottom">
            <summary>
            Gets or sets a bottom page template.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentTemplate.EvenLeft">
            <summary>
            Gets or sets a left page template using on the even pages.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentTemplate.EvenTop">
            <summary>
            Gets or sets a top page template using on the even pages.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentTemplate.EvenRight">
            <summary>
            Gets or sets a right page template using on the even pages.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentTemplate.EvenBottom">
            <summary>
            Gets or sets a bottom page template using on the even pages.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentTemplate.OddLeft">
            <summary>
            Gets or sets a left page template using on the odd pages.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentTemplate.OddTop">
            <summary>
            Gets or sets a top page template using on the odd pages.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentTemplate.OddRight">
            <summary>
            Gets or sets a right page template using on the odd pages.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentTemplate.OddBottom">
            <summary>
            Gets or sets a bottom page template using on the odd pages.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfDocumentTemplate.Stamps">
            <summary>
            Gets a collection of stamp elements.
            </summary>
        </member>
        <member name="T:Spire.Pdf.HtmlToPdf.HtmlToPdfResult">
            <summary>
            Represents the result of html to pdf conversion.
            </summary>
        </member>
        <member name="M:Spire.Pdf.HtmlToPdf.HtmlToPdfResult.#ctor(System.Drawing.Image[],System.Collections.ArrayList,System.Collections.ArrayList)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="image">The image.</param>
            <param name="pageBreaks">The page breaks.</param>
            <param name="anchors">The anchors.</param>
        </member>
        <member name="M:Spire.Pdf.HtmlToPdf.HtmlToPdfResult.Render(Spire.Pdf.PdfPageBase,Spire.Pdf.Graphics.PdfTextLayout)">
            <summary>
            Draws the HtmlToPdfResults on to the document.
            </summary>
            <param name="page">The Pdf Page.</param>
            <param name="format">The Metafile layout format.</param>
        </member>
        <member name="M:Spire.Pdf.HtmlToPdf.HtmlToPdfResult.System#IDisposable#Dispose">
            <summary>
            Performs application-defined tasks associated with releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:Spire.Pdf.HtmlToPdf.HtmlToPdfResult.RenderedImage">
            <summary>
            Gets the rendered image.
            </summary>
            <value>The rendered image.</value>
        </member>
        <member name="T:Spire.Pdf.Graphics.TextAlign">
            <summary>
            Specifies how text in a  is
            horizontally aligned.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TextAlign.Left">
            <summary>
            The text is aligned to the left.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TextAlign.Right">
            <summary>
            The text is aligned to the right.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TextAlign.Center">
            <summary>
            The text is aligned in the center.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TextAlign.Justify">
            <summary>
            The text is justified.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfHTMLTextElement">
            <summary>
            Class that represent HTML text area with the ability to span several pages.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.PdfFontStructure.BuildIFontFromSystemFont(System.String)">
            <summary>
            Creates the I font.
            </summary>
            <param name="fontName">Name of the font.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.PdfFontStructure.GetMatchFontName(System.Collections.ArrayList,System.String)">
            <summary>
            Match Font by fontName
            </summary>
            <param name="list"></param>
            <param name="fontName"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.PdfFontStructure.AddFontToPrivateList(System.Byte[])">
            <summary>
            Add fake font to private list.
            </summary>
            <param name="fontData"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.PdfFontStructure.MeasureNoEmbedFontTextWidth(System.Drawing.Font,System.String)">
            <summary>
            宽度表为空,计算非嵌入字体文本长度
            </summary>
            <param name="font"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.PdfFontStructure.DrawType3FontFromGraphicsData(Spire.Pdf.General.Render.PdfToImageRenderer,Spire.Pdf.General.Render.TextElement,System.Drawing.Graphics)">
            <summary>
            Draw text of embed font to page
            </summary>
            <param name="render">Render object</param>
            <param name="element"></param>
            <param name="g"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.PdfFontStructure.ByteArrayToFile(System.String,System.Byte[])">
            <summary>
            Function to save byte array to a file
            </summary>
            <param name="_FileName">File name to save byte array</param>
            <param name="_ByteArray">Byte array to save to external file</param>
            <returns>Return true if byte array save successfully, if not return false</returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.PdfFontStructure.EscapeSymbols(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.PdfFontStructure.EscapeQuotes(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.PdfFontStructure.Spilts(System.String,System.String)">
            <summary>
            Spirt string by opstr
            </summary>
            <param name="text"></param>
            <param name="opstr"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.PdfFontStructure.IsHexString(System.String)">
            <summary>
            验证是否是16进制
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.PdfFontStructure.MapDifferences(System.String,System.Boolean)">
            <summary>
            Character map table for embed font condition.
            </summary>
            <param name="encodedText"></param>
            <param name="isNoEmbedFont"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.PdfFontStructure.SkipEscapeSequence(System.String)">
            <summary>
            Remove eascape text.
            </summary>
            <param name="text"></param>
            <returns></returns>
            
        </member>
        <member name="P:Spire.Pdf.General.Render.PdfElement.PdfFontStructure.IsEmbed">
            <summary>
            Inidcates whether font is embed.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.AdobeGlyphList.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.AdobeGlyphList.Dispose">
            <summary>
            Clean up Memory
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.Decode.CCITTFaxDecode.GetDicSplitPdfString(Spire.Pdf.Primitives.PdfString)">
            <summary>
            Get PdfDictionary Split PdfString
            </summary>
            <param name="value">PdfString value</param>
            <returns>PdfDictionary dic</returns>
        </member>
        <member name="M:Spire.Pdf.Exporting.PageResourceLoader.DecodeTest(Spire.Pdf.PdfPageBase,System.String,System.String)">
            <summary>
            Extracts the text from the page given
            </summary>
            <param name="page">page from which text is extracted</param>
            <param name="fontName">font used in the text</param>
            <param name="textToDecode">text in the page to be decoded</param>
            <returns>decoded text</returns>
        </member>
        <member name="M:Spire.Pdf.Exporting.PageResourceLoader.GetFontResources(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.PdfPageBase)">
            <summary>
            Collects all the fonts in the page in a dictionary
            </summary>
            <param name="resourceDictionary">dictionary containing all the resources in the page</param>
            <param name="page">page in which text is to be extracted</param>
            <returns>dictionary containing font name and the font</returns>
        </member>
        <member name="M:Spire.Pdf.Exporting.PageResourceLoader.GetImageResources(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Collects all the images in the pdf document
            </summary>
            <param name="resourceDictionary">containing all the resources of the document</param>
            <returns>dictionary of images</returns>
        </member>
        <member name="M:Spire.Pdf.Exporting.PageResourceLoader.UpdatePageResources(Spire.Pdf.Exporting.PdfPageResources,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Updates the resources in the page
            </summary>
            <param name="pageResources">Existing page resources</param>
            <param name="objects">Dictionary items to the updated</param>
            <returns>Updated page resource</returns>
        </member>
        <member name="T:Spire.Pdf.ColorSpace.PdfColorSpaces">
            <summary>
            Represents the base class for all colorspaces. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfColorSpaces.Spire#Pdf#Interfaces#IPdfCache#EqualsTo(Spire.Pdf.Interfaces.IPdfCache)">
            <summary>
            Checks whether the object is similar to another object.
            </summary>
            <param name="obj">The object to compare witht ehcurrent object.</param>
            <returns>True - if the objects have equal internals and can share them, False otherwise.</returns>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfColorSpaces.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets Pdf primitive representing the font.
            </summary>
        </member>
        <member name="T:Spire.Pdf.ColorSpace.PdfCalRGBColorSpace">
            <summary>
            Representing a CalRGB colorspace. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfCalRGBColorSpace.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfCalRGBColorSpace.BlackPoint">
            <summary>
            Gets or sets the black point. 
            </summary>
            <value>An array of three numbers [XB YB ZB] specifying the tristimulus value, in the CIE 1931 XYZ space, of the diffuse black point. </value>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfCalRGBColorSpace.Gamma">
            <summary>
            Gets or sets the gamma. 
            </summary>
            <value>An array of three numbers [GR GG GB] specifying the gamma for the red, green, and blue components of the color space. </value>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfCalRGBColorSpace.Matrix">
            <summary>
            Gets or sets the colorspace transformation matrix. 
            </summary>
            <value>An array of nine numbers [XA YA ZA XB YB ZB XC YC ZC] specifying the linear interpretation of the decoded A, B, and C components of the color space with respect to the final XYZ representation.</value>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfCalRGBColorSpace.WhitePoint">
            <summary>
            Gets or sets the white point.
            </summary>
            <value>An array of three numbers [XW YW ZW] specifying the tristimulus value, in the CIE 1931 XYZ space, of the diffuse white point.</value>
        </member>
        <member name="T:Spire.Pdf.Barcode.PdfCode39ExtendedBarcode">
            <summary>
            Represents a Code39 Extended barcode.
            Code 39 Extended is designed to encode 128 full ASCII characters.
            </summary>
            <remarks> All 128 ASCII characters can be encoded in an extended Code 39 barcode</remarks>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode39ExtendedBarcode.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode39ExtendedBarcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The Barcode text.</param>
        </member>
        <member name="T:Spire.Pdf.Annotations.Appearance.PdfAppearanceState">
            <summary>
            Represents the states of an annotation's appearance.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.Appearance.PdfAppearanceState.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Appearance.PdfAppearanceState.On">
            <summary>
            Gets or sets the active state template.
            </summary>
            <value>The  object specifies an active state template.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.Appearance.PdfAppearanceState.Off">
            <summary>
            Gets or sets the inactive state.
            </summary>
            <value>The  object specifies an inactive state template.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.Appearance.PdfAppearanceState.OnMappingName">
            <summary>
            Gets or sets the mapping name of the active state.
            </summary>
            <value>String specifies the mapping name of the active state.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.Appearance.PdfAppearanceState.OffMappingName">
            <summary>
            Gets or sets the mapping name of the inactive state.
            </summary>
            <value>String specifies the mapping name of the inactive state.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.Appearance.PdfAppearanceState.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfUriAction">
            <summary>
            Represents an action which resolves unique resource identifier.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfUriAction.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfUriAction.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="uri">The unique resource identifier.</param>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfUriAction.Uri">
            <summary>
            Gets or sets the unique resource identifier.
            </summary>
            <value>The unique resource identifier.</value>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.DocumentStructure">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.DocumentStructure.DocumentStructureOutline">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.DocumentStructure.Story">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.Outline">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Outline.DocumentOutline">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.DocumentOutline">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.DocumentOutline.OutlineEntry">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.DocumentOutline.lang">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.OutlineEntry">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.OutlineEntry.OutlineLevel">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.OutlineEntry.OutlineTarget">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.OutlineEntry.Description">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.OutlineEntry.lang">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.Story">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Story.StoryFragmentReference">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Story.StoryName">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.StoryFragmentReference">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.StoryFragmentReference.FragmentName">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.StoryFragmentReference.Page">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.StoryFragments">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.StoryFragments.StoryFragment">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.StoryFragment">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.StoryFragment.StoryBreak">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.StoryFragment.Items">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.StoryFragment.StoryBreak1">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.StoryFragment.StoryName">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.StoryFragment.FragmentName">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.StoryFragment.FragmentType">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.Break">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.Figure">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Figure.Items">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.NamedElement">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.NamedElement.NameReference">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.List">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.List.Items">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.ListItem">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ListItem.Items">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ListItem.Marker">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.Paragraph">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Paragraph.Items">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.Table">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Table.Items">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.TableRowGroup">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.TableRowGroup.Items">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.TableRow">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.TableRow.Items">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.TableCell">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.TableCell.Items">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.TableCell.ItemsElementName">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.TableCell.RowSpan">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.TableCell.ColumnSpan">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.ItemsChoiceType">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.ItemsChoiceType.FigureStructure">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.ItemsChoiceType.ListStructure">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.ItemsChoiceType.ParagraphStructure">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.ItemsChoiceType.TableStructure">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.Section">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Section.Items">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.FragmentType">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.FragmentType.Content">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.FragmentType.Header">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.FragmentType.Footer">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Tables.BeginRowLayoutEventHandler">
            <summary>
            Delegate for handling StartRowLayoutEvent.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="args">The arguments of the event.</param>
            <remarks>This event is raised when starting a row in a layout.</remarks>
        </member>
        <member name="T:Spire.Pdf.Tables.EndRowLayoutEventHandler">
            <summary>
            Delegate for handling EndRowLayoutEvent.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="args">The arguments of the event.</param>
            <remarks>This event is raised when you are finished laying out a row on a page.</remarks>
        </member>
        <member name="T:Spire.Pdf.Tables.BeginCellLayoutEventHandler">
            <summary>
            Delegate for handling StartCellLayoutEvent.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="args">The arguments of the event.</param>
            <remarks>This event is raised when laying out a cell on a page.</remarks>
        </member>
        <member name="T:Spire.Pdf.Tables.EndCellLayoutEventHandler">
            <summary>
            Delegate for handling EndCellLayoutEvent.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="args">The arguments of the event.</param>
            <remarks>This event is raised when you have finished laying out a page.</remarks>
        </member>
        <member name="T:Spire.Pdf.Tables.QueryNextRowEventHandler">
            <summary>
            Delegate for handling NextRowEvent.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="args">The arguments of the event.</param>
        </member>
        <member name="T:Spire.Pdf.Tables.QueryColumnCountEventHandler">
            <summary>
            Delegate for handling GettingColumnNumber Event.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="args">The arguments of the event.</param>
        </member>
        <member name="T:Spire.Pdf.Tables.QueryRowCountEventHandler">
            <summary>
            Delegate for handling GettingRowNumber Event.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="args">The arguments of the event.</param>
        </member>
        <member name="T:Spire.Pdf.Tables.BeginRowLayoutEventArgs">
            <summary>
            Represents StartRowLayout Event arguments.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.BeginRowLayoutEventArgs.RowIndex">
            <summary>
            Gets the index of the row.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.BeginRowLayoutEventArgs.CellStyle">
            <summary>
            Gets or sets the cell style.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.BeginRowLayoutEventArgs.ColumnSpanMap">
            <summary>
            Gets or sets the span map.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.BeginRowLayoutEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether table drawing should stop.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.BeginRowLayoutEventArgs.Skip">
            <summary>
            Gets or sets a value indicating whether this row should be ignored.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.BeginRowLayoutEventArgs.IgnoreColumnFormat">
            <summary>
            Gets or sets a value indicating whether column string format should be ignored.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.BeginRowLayoutEventArgs.MinimalHeight">
            <summary>
            Sets the minimal height of the row.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Tables.EndRowLayoutEventArgs">
            <summary>
            Represents arguments of EndRowLayoutEvent.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.EndRowLayoutEventArgs.RowIndex">
            <summary>
            Gets the index of the row.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.EndRowLayoutEventArgs.LayoutCompleted">
            <summary>
            Gets a value indicating whether the row was drawn completely
            (nothing should be printed on the next page).
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.EndRowLayoutEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether this row should be the last one printed.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.EndRowLayoutEventArgs.Bounds">
            <summary>
            Gets or sets the row bounds.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Tables.CellLayoutEventArgs">
            <summary>
            The base class for cell layout arguments.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.CellLayoutEventArgs.RowIndex">
            <summary>
            Gets the index of the row.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.CellLayoutEventArgs.CellIndex">
            <summary>
            Gets the index of the cell.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.CellLayoutEventArgs.Value">
            <summary>
            Gets the value.
            </summary>
            <remarks>The value might be null or an empty string,
            which means that either no text were acquired or all
            text was on the previous page.</remarks>
        </member>
        <member name="P:Spire.Pdf.Tables.CellLayoutEventArgs.Bounds">
            <summary>
            Gets the bounds of the cell.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.CellLayoutEventArgs.Graphics">
            <summary>
            Gets the graphics, on which the cell should be drawn.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Tables.BeginCellLayoutEventArgs">
            <summary>
            Represents arguments of StartCellLayout Event.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.BeginCellLayoutEventArgs.Skip">
            <summary>
            Gets or sets a value indicating whether the value of this cell should be skipped.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Tables.EndCellLayoutEventArgs">
            <summary>
            Represents arguments of EndCellLayout Event.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Tables.QueryNextRowEventArgs">
            <summary>
            Represents arguments of the NextRow Event.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.QueryNextRowEventArgs.RowData">
            <summary>
            Gets or sets the row data.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.QueryNextRowEventArgs.ColumnCount">
            <summary>
            Gets the column count.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.QueryNextRowEventArgs.RowIndex">
            <summary>
            Gets the index of the row.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Tables.QueryColumnCountEventArgs">
            <summary>
            The arguments of the GettingColumnNumber Event.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.QueryColumnCountEventArgs.ColumnCount">
            <summary>
            Gets or sets the column number.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Tables.QueryRowCountEventArgs">
            <summary>
            The arguments of the GettingRowNumber Event.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.QueryRowCountEventArgs.RowCount">
            <summary>
            Gets or sets the column number.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Lists.BeginItemLayoutEventHandler">
            <summary>
            Delegate for handling BeginItemLayoutEvent.
            </summary>
            <param name="sender">The item that begin layout.</param>
            <param name="args">Begin Item Layout arguments.</param>
        </member>
        <member name="T:Spire.Pdf.Lists.EndItemLayoutEventHandler">
            <summary>
            Delegate for handling EndItemLayoutEvent.
            </summary>
            <param name="sender">The item that end layout.</param>
            <param name="args">End Item Layout arguments.</param>
        </member>
        <member name="T:Spire.Pdf.Lists.BeginItemLayoutEventArgs">
            <summary>
            Represents begin layout event arguments.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.BeginItemLayoutEventArgs.Item">
            <summary>
            Gets the item.
            </summary>
            <value>The item that layout.</value>
        </member>
        <member name="P:Spire.Pdf.Lists.BeginItemLayoutEventArgs.Page">
            <summary>
            Gets the page.
            </summary>
            <value>The page in which item start layout.</value>
        </member>
        <member name="T:Spire.Pdf.Lists.EndItemLayoutEventArgs">
            <summary>
            Represents end layout event arguments.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.EndItemLayoutEventArgs.Item">
            <summary>
            Gets the item that layout.
            </summary>
            <value>The item that layout.</value>
        </member>
        <member name="P:Spire.Pdf.Lists.EndItemLayoutEventArgs.Page">
            <summary>
            Gets the page in which item ended layout.
            </summary>
            <value>The page in which item ended layout.</value>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfFileLinkAnnotation">
            <summary>
            Represents the annotation link to external file.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfFileLinkAnnotation.#ctor(System.Drawing.RectangleF,System.String)">
            <param name="rectangle">Bounds of the annotation.</param>
            <param name="fileName">A string value specifying the full path to the file to be embedded.</param>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfFileLinkAnnotation.FileName">
            <value>A string value specifying the full path to the file to be embedded.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfFileLinkAnnotation.Action">
            <summary>
            Gets or sets the action.
            </summary>
            <value>The action to be executed when the annotation is activated.</value>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfDocumentLinkAnnotation">
            <summary>
            Represents annotation object with holds link on another location within a document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfDocumentLinkAnnotation.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes new  instance.
            </summary>
            <param name="rectangle">Bounds of the annotation.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfDocumentLinkAnnotation.#ctor(System.Drawing.RectangleF,Spire.Pdf.General.PdfDestination)">
            <summary>
            Initializes new  instance.
            </summary>
            <param name="rectangle">Bounds of the annotation.</param>
            <param name="destination">Destination of the annotation.</param>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfDocumentLinkAnnotation.Destination">
            <summary>
            Gets or sets the destination of the annotation.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfSectionTemplate">
            <summary>
            Encapsulates a page template for all the pages in the section.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfSectionTemplate.#ctor">
            <summary>
            Creates a new object.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfSectionTemplate.ApplyDocumentLeftTemplate">
            <summary>
            Gets or sets value indicating whether parent Left page template should be used or not.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfSectionTemplate.ApplyDocumentTopTemplate">
            <summary>
            Gets or sets value indicating whether parent Top page template should be used or not.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfSectionTemplate.ApplyDocumentRightTemplate">
            <summary>
            Gets or sets value indicating whether parent Right page template should be used or not.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfSectionTemplate.ApplyDocumentBottomTemplate">
            <summary>
            Gets or sets value indicating whether parent Bottom page template should be used or not.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfSectionTemplate.ApplyDocumentStamps">
            <summary>
            Gets or sets value indicating whether 
            the parent stamp elements should be used or not.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Paper.Drawing.Rendering.Xps.XpsRenderer.IsNegative">
            <summary>
            Reverse y position.
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Paper.Drawing.Rendering.Dml.Styles.DmlFontReference">
            This element represents a reference to a themed font. 
        </member>
        <member name="P:Spire.Pdf.General.Paper.Drawing.Fonts.TrueType.TTFont.Panose">
            <summary>
            Represents 10 byte series of numbers is used to describe the visual characteristics of a given typeface. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Fonts.ExternalFontCache.Finalize">
            <summary>
            Destructor 
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Fonts.ExternalFontCache.Dispose">
            <summary>
            Clean up Memory
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Fonts.PdfExternalFontCache.Finalize">
            <summary>
            Destructor 
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.Fonts.PdfExternalFontCache.Dispose">
            <summary>
            Clean up Memory
            </summary>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfFieldCollection">
            <summary>
            Represents collection of the Pdf fields.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfFieldCollection.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfFieldCollection.Add(Spire.Pdf.Fields.PdfField)">
            <summary>
            Adds the specified field.
            </summary>
            <param name="field">The field item which is added in the PDF form.</param>
            <returns>The field to be added on the page. </returns>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfFieldCollection.Insert(System.Int32,Spire.Pdf.Fields.PdfField)">
            <summary>
            Inserts the the field at the specified index.
            </summary>
            <param name="index">The index of the field.</param>
            <param name="field">The field which should be inserted at the specified index.</param>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfFieldCollection.Contains(Spire.Pdf.Fields.PdfField)">
            <summary>
            Determines whether field is contained within the collection.
            </summary>
            <param name="field">Check whether  object is present in the field collection or not.</param>
            <returns>
            <c>true</c> if field is present in the collection, otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfFieldCollection.IndexOf(Spire.Pdf.Fields.PdfField)">
            <summary>
            Gets the index of the field.
            </summary>
            <param name="field">The  object whose index is requested.</param>
            <returns>Index of the field in collection.</returns>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfFieldCollection.Remove(Spire.Pdf.Fields.PdfField)">
            <summary>
            Removes the specified field in the collection.
            </summary>
            <param name="field">The  object to be removed from collection.</param>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfFieldCollection.RemoveAt(System.Int32)">
            <summary>
            Removes field at the specified position.
            </summary>
            <param name="index">The index where to remove the item.</param>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfFieldCollection.Clear">
            <summary>
            Clears the form field collection.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfFieldCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>        
        </member>
        <member name="P:Spire.Pdf.Fields.PdfFieldCollection.Item(System.String)">
            <summary>
            Gets the  with thier field name.
            </summary>   
        </member>
        <member name="P:Spire.Pdf.Fields.PdfFieldCollection.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Word.ToFlowDoucment.Format.IFlowDocumentBuilder.WriteFooter(Spire.Pdf.General.Paper.Word.ToFlowDoucment.Format.FormatElement,System.Single,System.Int32)">
            <summary>
            html Split Page Number
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Word.ToFlowDoucment.Format.IFlowDocumentBuilder.GetCurrentPageIndex">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Word.ToFlowDoucment.Format.IFlowDocumentBuilder.JavaScript">
             <summary>
            html write javascript
             </summary>
        </member>
        <member name="M:Spire.Pdf.Implementation.Exporting.PdfToHtml.HtmlFileExport.WriteDocComment">
            <summary>
            Writes the doc Comment
            </summary>
        </member>
        <member name="M:Spire.Pdf.Implementation.Exporting.PdfToHtml.HtmlFileExport.DocumentPageStart(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="PageWidth"></param>
            <param name="PageMarginTopHeight"></param>
        </member>
        <member name="M:Spire.Pdf.Implementation.Exporting.PdfToHtml.HtmlFileExport.DocumentPageEnd">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spire.Pdf.Implementation.Exporting.PdfToHtml.HtmlFileExport.JavaScript">
            <summary>
            
            </summary>
            <param name="js"></param>
        </member>
        <member name="M:Spire.Pdf.Implementation.Exporting.PdfToHtml.XhtmlFileExport.WriteDocComment">
            <summary>
            write doc comment
            </summary>
            <param name="comment"></param>
        </member>
        <member name="F:Spire.Pdf.Common.PdfToHtmlConverter.m_SetPdfToHtmlParameter">
            <summary>
            Pdf to Html, Set Parameter
            </summary>
        </member>
        <member name="P:Spire.Pdf.Common.PdfToHtmlConverter.SetPdfToHtmlParameter">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Pdf.AutomaticFields.PdfSectionPageCountField">
            <summary>
            Represents automatic field to display number of pages in section.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfSectionPageCountField.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfSectionPageCountField.#ctor(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfSectionPageCountField.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfSectionPageCountField.#ctor(Spire.Pdf.Graphics.PdfFontBase,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="T:Spire.Pdf.Barcode.PdfCodabarBarcode">
             <summary>
              Represents a Codabar barcode.
             </summary>
            <remarks> This symbology allows the encoding of strings of up to 16 digits, 10 numeric digits (0 through 9) and 
             6 special non alpha characters ("+", "-", "$", "/", ":", "."). 
             </remarks>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCodabarBarcode.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCodabarBarcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The Barcode Text.</param>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DProjection">
            <summary>
             Represents the mapping of 3D camera co-ordinates onto the target coordinate system of the annotation.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DProjection.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DProjection.#ctor(Spire.Pdf.Annotations.Pdf3DProjectionType)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="type">The Pdf3D Projection Type.</param>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DProjection.ProjectionType">
            <summary>
            Gets or sets the type of the projection.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DProjection.ClipStyle">
            <summary>
            Gets or sets the projection ClipStyle.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DProjection.OrthoScaleMode">
            <summary>
             Gets or sets the scale mode for ortho graphic projections.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DProjection.FarClipDistance">
            <summary>
            Gets or sets the far clipping distance.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DProjection.FieldOfView">
            <summary>
            Gets or sets the field of view.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DProjection.NearClipDistance">
            <summary>
            Gets or sets the near clipping distance.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DProjection.Scaling">
            <summary>
            Gets or sets the projection scaling.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DProjection.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGrid.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGrid.Draw(Spire.Pdf.Graphics.PdfCanvas,System.Drawing.PointF,System.Single)">
            <summary>
            Draws the specified graphics.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="location">The location.</param>
            <param name="width">The width.</param>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGrid.Draw(Spire.Pdf.Graphics.PdfCanvas,System.Single,System.Single,System.Single)">
            <summary>
            Draws the specified graphics.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGrid.Draw(Spire.Pdf.Graphics.PdfCanvas,System.Drawing.RectangleF)">
            <summary>
            Draws the specified graphics.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGrid.Draw(Spire.Pdf.PdfNewPage,System.Drawing.PointF)">
            <summary>
            Draws the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="location">The location.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGrid.Draw(Spire.Pdf.PdfNewPage,System.Drawing.PointF,Spire.Pdf.Grid.PdfGridLayoutFormat)">
            <summary>
            Draws the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="location">The location.</param>
            <param name="format">The format.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGrid.Draw(Spire.Pdf.PdfNewPage,System.Drawing.RectangleF)">
            <summary>
            Draws the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="bounds">The bounds.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGrid.Draw(Spire.Pdf.PdfNewPage,System.Drawing.RectangleF,Spire.Pdf.Grid.PdfGridLayoutFormat)">
            <summary>
            Draws the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="bounds">The bounds.</param>
            <param name="format">The format.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGrid.Draw(Spire.Pdf.PdfNewPage,System.Single,System.Single)">
            <summary>
            Draws the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGrid.Draw(Spire.Pdf.PdfNewPage,System.Single,System.Single,Spire.Pdf.Grid.PdfGridLayoutFormat)">
            <summary>
            Draws the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="format">The format.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGrid.Draw(Spire.Pdf.PdfNewPage,System.Single,System.Single,System.Single)">
            <summary>
            Draws the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGrid.Draw(Spire.Pdf.PdfNewPage,System.Single,System.Single,System.Single,Spire.Pdf.Grid.PdfGridLayoutFormat)">
            <summary>
            Draws the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="format">The format.</param>
            <returns></returns>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGrid.Headers">
            <summary>
            Gets the headers.
            </summary>
            <value>The headers.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGrid.Rows">
            <summary>
            Gets the rows.
            </summary>
            <value>The rows.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGrid.DataSource">
            <summary>
            Gets or sets the data source.
            </summary>
            <value>The data source.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGrid.DataMember">
            <summary>
            Gets or sets the data member.
            </summary>
            <value>The data member.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGrid.Style">
            <summary>
            Gets or sets the style.
            </summary>
            <value>The style.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGrid.Columns">
            <summary>
            Gets the columns.
            </summary>
            <value>The columns.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGrid.RepeatHeader">
            <summary>
            Gets or sets a value indicating whether [repeat header].
            </summary>
            <value><c>true</c> if [repeat header]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGrid.AllowCrossPages">
            <summary>
            Gets or sets whether to cross a page.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfPageWidget">
            <summary>
            Represents a page loaded from a document.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfPageBase">
            <summary>
            The base class for all pages.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.IsBlank">
            <summary>
            Returns page is blank flag for page's content.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.AddCommand">
            <summary>
            add 'q','Q'
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.GetClientSize">
            <summary>
            Returns a page size reduced by page margins and page template dimensions.
            </summary>
            <remarks>It's the actual size of the page where some output can be performed.</remarks>
            <returns>Returns a page size reduced by page margins and page template dimensions.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.ReplaceImage(System.Int32,Spire.Pdf.Graphics.PdfImage)">
            <summary>
            Replace the Image at index's Position.
            </summary>
            <param name="index">index of an image</param>
            <param name="image">The New Replace image</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.CreateTemplate">
            <summary>
            Creates a template from page content and all annotation appearances.
            </summary>
            <returns>The created template.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.ExtractTextWithComplexity">
            <summary>
            Extracts text from the given PDF Page.
            </summary>
            <returns>The Extracted Text.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.ExtractText">
            <summary>
            Extracts text from the given PDF Page.
            </summary>
            <returns>The Extracted Text.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.ExtractText(System.Boolean)">
            <summary>
            Extracts text from the given PDF Page.
            </summary>
            <returns>The Extracted Text.</returns>
        </member>
        <member name="F:Spire.Pdf.PdfPageBase.finds">
            <summary>
            Text search result
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageBase.searchText">
            <summary>
            Find text
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.FindText(System.String)">
            <summary>
            find text
            </summary>
            <param name="searchPatternText">string searchPatternText</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.ExecuteCommandFindText(System.String)">
            <summary>
            Find text in page
            </summary>
            <param name="searchPatternText">The text which is to be searched  </param>
            <returns>The result which has already been searched </returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.ExecuteCommandFindText(System.String,Spire.Pdf.Exporting.XObjectElement,Spire.Pdf.General.Render.PdfElement.PdfRecordCollection)">
            <summary>
            Find text in page
            </summary>
            <param name="searchPatternText">The text which is to be searched  </param>
            <returns>The result which has already been searched </returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.GetFindTextFromXObject(System.String[],Spire.Pdf.Exporting.PdfPageResources,Spire.Pdf.Exporting.XObjectElement)">
            <summary>
            find text from XObject
            </summary>
            <param name="xobjectElement">string[] xobjectElement</param>
            <param name="m_pageResources">Spire.Pdf.Exporting.PdfPageResources m_pageResources</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.ExtractImages">
            <summary>
            Extracts images from the given PDF Page.
            </summary>
            <returns>Returns the extracted image as Image[].</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.ExtractImages(System.Boolean)">
            <summary>
            Extracts images from the given PDF Page. and image is not processed.
            </summary>
            <returns>Returns the extracted image as Image[].</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.LoadFromRTF(System.String,System.Single,System.Boolean)">
            <summary>
            Insert rich text to page
            </summary>
            <param name="rtf">rich text</param>
            <param name="width">width</param>
            <param name="IsSplitLine">IsSplitLine</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.LoadFromRTF(System.String,System.Single,System.Boolean,System.Drawing.PointF)">
            <summary>
            Insert rich text to page
            </summary>
            <param name="rtf">rich text</param>
            <param name="width">width</param>
            <param name="IsSplitLine">IsSplitLine</param>
            <param name="point">Draw text x,y point</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.LoadFromRTF(System.String,System.Single,System.Single,System.Boolean)">
            <summary>
            Insert rich text to page
            </summary>
            <param name="rtf">rich text</param>
            <param name="width">width</param>
            <param name="IsSplitLine">IsSplitLine</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageBase.LoadFromRTF(System.String,System.Single,System.Single,System.Boolean,System.Drawing.PointF)">
            <summary>
            Insert rich text to page
            </summary>
            <param name="rtf">rich text</param>
            <param name="width">width</param>
            <param name="IsSplitLine">IsSplitLine</param>
            <param name="point">Draw text x,y point</param>
        </member>
        <member name="P:Spire.Pdf.PdfPageBase.CropBox">
            <summary>
            Returns the visible region of the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageBase.BleedBox">
            <summary>
            Returns page region after clipping.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageBase.MediaBox">
            <summary>
            Returns page region mediabox.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageBase.TrimBox">
            <summary>
            Returns page region after trimming.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageBase.ArtBox">
            <summary>
            Returns page region containing content.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageBase.AnnotationsWidget">
            <summary>
            Gets the field collection.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageBase.ImagesInfo">
            <summary>
            Gets the information about the extracted image.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageBase.Canvas">
            <summary>
            Gets the graphics of the .
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageBase.Section">
            <summary>
            Gets the parent section of the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageBase.PageLayers">
            <summary>
            Gets the collection of the page's layers.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageBase.DefaultLayerIndex">
            <summary>
            Gets or sets index of the default layer.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageBase.DefaultLayer">
            <summary>
            Gets the default layer of the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageBase.Size">
            <summary>
            Gets the size of the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageBase.ActualSize">
            <summary>
            Gets the actual size of the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageBase.BackgroundImage">
            <summary>
            Gets or sets page's background image.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageBase.BackgroundColor">
            <summary>
            Gets or sets page's background color.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageBase.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the wrapped element.
            </summary>
        </member>
        <member name="E:Spire.Pdf.PdfPageBase.BeginSave">
            <summary>
            Raises before the page saves.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfPageWidget.RemoveFromDictionaries(Spire.Pdf.Annotations.PdfAnnotation)">
            <summary>
            Raises before the page saves.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfPageWidget.FontName(System.String,System.Single@)">
            <summary>
            Gets the text size of a specified font.
            </summary>
            <param name="key">Font key</param>
            <returns>Returns the text size of the specified font</returns>
        </member>
        <member name="P:Spire.Pdf.PdfPageWidget.Size">
            <summary>
            Gets the size of the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageWidget.Document">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfSolidBrush">
            <summary>
            Represents a brush that fills any object with a solid colour.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfSolidBrush.#ctor(Spire.Pdf.Graphics.PdfRGBColor)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfSolidBrush.#ctor(Spire.Pdf.ColorSpace.PdfComplexColor)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="color">color</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfSolidBrush.Clone">
            <summary>
            Creates a new copy of a brush.
            </summary>
            <returns>A new instance of the Brush class.</returns>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfSolidBrush.Color">
            <summary>
            Gets or sets the color of the brush.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfCanvas">
            <summary>
            The class representing a graphics context of the objects.
            It's used for performing simple graphics operations.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawLine(Spire.Pdf.Graphics.PdfPen,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draws a line.
            </summary>
            <param name="pen">The pen.</param>
            <param name="point1">The point1.</param>
            <param name="point2">The point2.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawLine(Spire.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a line.
            </summary>
            <param name="pen">The pen.</param>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="x2">The x2.</param>
            <param name="y2">The y2.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawRectangle(Spire.Pdf.Graphics.PdfPen,System.Drawing.RectangleF)">
            <summary>
            Draws a rectangle.
            </summary>
            <param name="pen">The pen.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawRectangle(Spire.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a rectangle.
            </summary>
            <param name="pen">The pen.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawRectangle(Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF)">
            <summary>
            Draws a rectangle.
            </summary>
            <param name="brush">The brush.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawRectangle(Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a rectangle.
            </summary>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawRectangle(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF)">
            <summary>
            Draws a rectangle.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawRectangle(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a rectangle.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawEllipse(Spire.Pdf.Graphics.PdfPen,System.Drawing.RectangleF)">
            <summary>
            Draws an ellipse.
            </summary>
            <param name="pen">The pen.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawEllipse(Spire.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an ellipse.
            </summary>
            <param name="pen">The pen.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawEllipse(Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF)">
            <summary>
            Draws an ellipse.
            </summary>
            <param name="brush">The brush.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawEllipse(Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an ellipse.
            </summary>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawEllipse(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF)">
            <summary>
            Draws an ellipse.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawEllipse(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an ellipse.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawArc(Spire.Pdf.Graphics.PdfPen,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Draws an arc.
            </summary>
            <param name="pen">The pen.</param>
            <param name="rectangle">The rectangle.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawArc(Spire.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an arc.
            </summary>
            <param name="pen">The pen.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawPie(Spire.Pdf.Graphics.PdfPen,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Draws a pie.
            </summary>
            <param name="pen">The pen.</param>
            <param name="rectangle">The rectangle.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawPie(Spire.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a pie.
            </summary>
            <param name="pen">The pen.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawPie(Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Draws a pie.
            </summary>
            <param name="brush">The brush.</param>
            <param name="rectangle">The rectangle.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawPie(Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a pie.
            </summary>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawPie(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Draws a pie.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="rectangle">The rectangle.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawPie(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a pie.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawPolygon(Spire.Pdf.Graphics.PdfPen,System.Drawing.PointF[])">
            <summary>
            Draws a polygon.
            </summary>
            <param name="pen">The pen.</param>
            <param name="points">The points.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawPolygon(Spire.Pdf.Graphics.PdfBrush,System.Drawing.PointF[])">
            <summary>
            Draws a polygon.
            </summary>
            <param name="brush">The brush.</param>
            <param name="points">The points.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawPolygon(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Drawing.PointF[])">
            <summary>
            Draws a polygon.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="points">The points.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawBezier(Spire.Pdf.Graphics.PdfPen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draws a bezier curve.
            </summary>
            <param name="pen">The pen.</param>
            <param name="startPoint">The start point.</param>
            <param name="firstControlPoint">The first control point.</param>
            <param name="secondControlPoint">The second control point.</param>
            <param name="endPoint">The end point.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawBezier(Spire.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a bezier curve.
            </summary>
            <param name="pen">The pen.</param>
            <param name="startPointX">The start point X.</param>
            <param name="startPointY">The start point Y.</param>
            <param name="firstControlPointX">The first control point X.</param>
            <param name="firstControlPointY">The first control point Y.</param>
            <param name="secondControlPointX">The second control point X.</param>
            <param name="secondControlPointY">The second control point Y.</param>
            <param name="endPointX">The end point X.</param>
            <param name="endPointY">The end point Y.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawPath(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfPath)">
            <summary>
            Draws a path.
            </summary>
            <param name="pen">The pen.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawPath(Spire.Pdf.Graphics.PdfBrush,Spire.Pdf.Graphics.PdfPath)">
            <summary>
            Draws a path.
            </summary>
            <param name="brush">The brush.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawPath(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,Spire.Pdf.Graphics.PdfPath)">
            <summary>
            Draws a path.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawImage(Spire.Pdf.Graphics.PdfImage,System.Drawing.PointF)">
            <summary>
            Draws an image.
            </summary>
            <param name="image">The image.</param>
            <param name="point">The point.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawImage(Spire.Pdf.Graphics.PdfImage,System.Single,System.Single)">
            <summary>
            Draws an image.
            </summary>
            <param name="image">The image.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawImage(Spire.Pdf.Graphics.PdfImage,System.Drawing.RectangleF)">
            <summary>
            Draws an image.
            </summary>
            <param name="image">The image.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawImage(Spire.Pdf.Graphics.PdfImage,System.Drawing.PointF,System.Drawing.SizeF)">
            <summary>
            Draws an image.
            </summary>
            <param name="image">The image.</param>
            <param name="point">The point.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawImage(Spire.Pdf.Graphics.PdfImage,System.Int32,System.Drawing.PointF,System.Drawing.SizeF)">
            <summary>
            Draws an image,recommending monochrome image.
            </summary>
            <param name="image">The image.</param>
            <param name="compressionQuality">The image compresson quality.</param>
            <param name="point">The point.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawImage(Spire.Pdf.Graphics.PdfImage,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an image.
            </summary>
            <param name="image">The image.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawImage(Spire.Pdf.Graphics.PdfImage,System.Int32,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an image,recommending monochrome image
            </summary>
            <param name="image">The image.</param>
            <param name="compressionQuality">The image compresson quality.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush,System.Drawing.PointF)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
            <param name="point">The location point.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush,System.Drawing.PointF,Spire.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
            <param name="point">The point.</param>
            <param name="format">The text string format.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,Spire.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="format">The text string format.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,System.Drawing.PointF)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="point">The location point.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,System.Drawing.PointF,Spire.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="point">The point.</param>
            <param name="format">The text string format.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,System.Single,System.Single)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,System.Single,System.Single,Spire.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="format">The text string format.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Drawing.PointF)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="point">The location point.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Drawing.PointF,Spire.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="point">The point.</param>
            <param name="format">The text string format.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,Spire.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="format">The text string format.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF)">
            <summary>
            Draws the specified text string at the specified location and size
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the drawn text.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF,Spire.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Draws the specified text string at the specified location and size
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the drawn text.</param>
            <param name="format">The text string format.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,System.Drawing.RectangleF)">
            <summary>
            Draws the specified text string at the specified location and size
            with the specified Pen and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the drawn text.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,System.Drawing.RectangleF,Spire.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Draws the specified text string at the specified location and size
            with the specified Pen and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the drawn text.</param>
            <param name="format">The text string format.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF,Spire.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Draws the specified text string at the specified location and size
            with the specified Pen, Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the drawn text.</param>
            <param name="format">The text string format.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush,System.Drawing.PointF,System.Boolean)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
            <param name="point">The location point.</param>
            <param name="htmlTags">whether the parsing of HTML tags</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush,System.Drawing.PointF,Spire.Pdf.Graphics.PdfStringFormat,System.Boolean)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
            <param name="point">The point.</param>
            <param name="format">The text string format.</param>
            <param name="htmlTags">whether the parsing of HTML tags</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Boolean)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="htmlTags">whether the parsing of HTML tags</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,Spire.Pdf.Graphics.PdfStringFormat,System.Boolean)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="format">The text string format.</param>
            <param name="htmlTags">whether the parsing of HTML tags</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,System.Drawing.PointF,System.Boolean)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="point">The location point.</param>
            <param name="htmlTags">whether the parsing of HTML tags</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,System.Drawing.PointF,Spire.Pdf.Graphics.PdfStringFormat,System.Boolean)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="point">The point.</param>
            <param name="format">The text string format.</param>
            <param name="htmlTags">whether the parsing of HTML tags</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Boolean)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="htmlTags">whether the parsing of HTML tags</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,System.Single,System.Single,Spire.Pdf.Graphics.PdfStringFormat,System.Boolean)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="format">The text string format.</param>
            <param name="htmlTags">whether the parsing of HTML tags</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Drawing.PointF,System.Boolean)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="point">The location point.</param>
            <param name="htmlTags">whether the parsing of HTML tags</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Drawing.PointF,Spire.Pdf.Graphics.PdfStringFormat,System.Boolean)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="point">The point.</param>
            <param name="format">The text string format.</param>
            <param name="htmlTags">whether the parsing of HTML tags</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,Spire.Pdf.Graphics.PdfStringFormat,System.Boolean)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="format">The text string format.</param>
            <param name="htmlTags">whether the parsing of HTML tags</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Boolean)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="htmlTags">whether the parsing of HTML tags</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF,System.Boolean)">
            <summary>
            Draws the specified text string at the specified location and size
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the drawn text.</param>
            <param name="htmlTags">whether the parsing of HTML tags</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF,Spire.Pdf.Graphics.PdfStringFormat,System.Boolean)">
            <summary>
            Draws the specified text string at the specified location and size
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the drawn text.</param>
            <param name="format">The text string format.</param>
            <param name="htmlTags">whether the parsing of HTML tags</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,System.Drawing.RectangleF,System.Boolean)">
            <summary>
            Draws the specified text string at the specified location and size
            with the specified Pen and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the drawn text.</param>
            <param name="htmlTags">whether the parsing of HTML tags</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,System.Drawing.RectangleF,Spire.Pdf.Graphics.PdfStringFormat,System.Boolean)">
            <summary>
            Draws the specified text string at the specified location and size
            with the specified Pen and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the drawn text.</param>
            <param name="format">The text string format.</param>
            <param name="htmlTags">whether the parsing of HTML tags</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawString(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF,Spire.Pdf.Graphics.PdfStringFormat,System.Boolean)">
            <summary>
            Draws the specified text string at the specified location and size
            with the specified Pen, Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the drawn text.</param>
            <param name="format">The text string format.</param>
            <param name="htmlTags">whether the parsing of HTML tags</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.TranslateTransform(System.Single,System.Single)">
            <summary>
            Translates the coordinates by specified coordinates.
            </summary>
            <param name="offsetX">The X value by which to translate
            coordinate system.</param>
            <param name="offsetY">The Y value by which to translate
            coordinate system.</param>
            <property name="flag" value="Finished"/>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.ScaleTransform(System.Single,System.Single)">
            <summary>
            Scales the coordinates by specified coordinates.
            </summary>
            <param name="scaleX">The value by which to scale coordinate
            system in the X axis direction.</param>
            <param name="scaleY">The value by which to scale coordinate
            system in the Y axis direction.</param>
            <property name="flag" value="Finished"/>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.RotateTransform(System.Single)">
            <summary>
            Rotates the coordinate system in counterclockwise direction.
            </summary>
            <param name="angle">The angle of the rotation (in degrees).</param>
            <property name="flag" value="Finished"/>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.SkewTransform(System.Single,System.Single)">
            <summary>
            Skews the coordinate system axes.
            </summary>
            <param name="angleX">Skews the X axis by this angle (in
            degrees).</param>
            <param name="angleY">Skews the Y axis by this angle (in
            degrees).</param>
            <property name="flag" value="Finished"/>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawTemplate(Spire.Pdf.Graphics.PdfTemplate,System.Drawing.PointF)">
            <summary>
            Draws a template using its original size, at the specified location.
            </summary>
            <param name="template"> object.</param>
            <param name="location">Location of the template.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.DrawTemplate(Spire.Pdf.Graphics.PdfTemplate,System.Drawing.PointF,System.Drawing.SizeF)">
            <summary>
            Draws a template at the specified location and size.
            </summary>
            <param name="template"> object.</param>
            <param name="location">Location of the template.</param>
            <param name="size">Size of the template.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.Flush">
            <summary>
            Flashes this instance.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.Save">
            <summary>
            Saves the current state of this Graphics and identifies the saved state with a GraphicsState.
            </summary>
            <returns>This method returns a GraphicsState that represents the saved state of this Graphics. </returns>
            <remarks>This method works similar to  method.</remarks>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.Restore">
            <summary>
            Restores the last state of this Graphics.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.Restore(Spire.Pdf.Graphics.PdfGraphicsState)">
            <summary>
            Restores the state of this Graphics to the state represented by a GraphicsState.
            </summary>
            <param name="state">GraphicsState that represents the state to which to restore this Graphics.</param>
            <remarks>This method works similar to  method.</remarks>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.SetClip(System.Drawing.RectangleF)">
            <summary>
            Modifying the current clipping path by intersecting it with the current path.
            </summary>
            <param name="rectangle">Clip rectangle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.SetClip(System.Drawing.RectangleF,Spire.Pdf.Graphics.PdfFillMode)">
            <summary>
            Modifying the current clipping path by intersecting it with the current path.
            </summary>
            <param name="rectangle">Clip rectangle.</param>
            <param name="mode">The fill mode to determine which regions lie inside the clipping	path.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.SetClip(Spire.Pdf.Graphics.PdfPath)">
            <summary>
            Modifying the current clipping path by intersecting it with the current path.
            </summary>
            <param name="path">Clip path.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.SetClip(Spire.Pdf.Graphics.PdfPath,Spire.Pdf.Graphics.PdfFillMode)">
            <summary>
            Modifying the current clipping path by intersecting it with the current path.
            </summary>
            <param name="path">Clip path.</param>
            <param name="mode">The fill mode to determine which regions lie inside the clipping	path.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.SetTransparency(System.Single)">
            <summary>
            Sets the transparency.
            </summary>
            <param name="alpha">The alpha value for both pen
            and brush operations.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.SetTransparency(System.Single,System.Single)">
            <summary>
            Sets the transparency.
            </summary>
            <param name="alphaPen">The alpha value for pen operations.</param>
            <param name="alphaBrush">The alpha value for brush operations.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.SetTransparency(System.Single,System.Single,Spire.Pdf.Graphics.PdfBlendMode)">
            <summary>
            Sets the transparency.
            </summary>
            <param name="alphaPen">The alpha value for pen operations.</param>
            <param name="alphaBrush">The alpha value for brush operations.</param>
            <param name="blendMode">The blend mode.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfCanvas.Size">
            <summary>
            Gets the size of the canvas.
            </summary>
            <remarks>Usually, this value is equal to the size of the object this graphics belongs to.</remarks>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfCanvas.ClientSize">
            <summary>
            Gets the size of the canvas reduced by margins and page templates.
            </summary>
            <remarks>It indicates a size of the canvas reduced by margins and template dimensions.
            This value doesn't change when any custom clip is set.</remarks>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfCanvas.ColorSpace">
            <summary>
            Gets or sets the current color space.
            </summary>
            <remarks>The value change of this property has impact on the objects
            which will be drawn after the change.</remarks>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.TransparencyData.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
            true if obj and this instance are the same type and
            represent the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCanvas.TransparencyData.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfGraphicsState">
            <summary>
            Represents the state of a Graphics object.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Functions.PdfFunction">
            <summary>
            Implements the base class for all functions.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Functions.PdfFunction.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.Functions.PdfExponentialInterpolationFunction">
            <summary>
            Implements PDF Exponential Interpolation Function.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Functions.PdfExponentialInterpolationFunction.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="Init">init</param>
        </member>
        <member name="P:Spire.Pdf.Functions.PdfExponentialInterpolationFunction.C0">
            <summary>
            Gets or sets the function result when x = 0.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Functions.PdfExponentialInterpolationFunction.C1">
            <summary>
            Gets or sets the function result when x = 1.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Functions.PdfExponentialInterpolationFunction.Exponent">
            <summary>
            Gets or sets the Exponent.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfTextBoxWidgetItemCollection">
            <summary>
            Represents collection of text box group items.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfTextBoxWidgetItemCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfTexBoxWidgetItem">
            <summary>
            Represents an item in a text box field collection.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfTextWebLinkAnnotationWidget">
            <summary>
            Represents the loaded text web link annotation class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfTextWebLinkAnnotationWidget.Url">
            <summary>
            Gets or sets the Url.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoType.CT_TYPE1">
            <summary>
            Retrieves character type info
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoType.CT_TYPE2">
            <summary>
            Retrieves bi-directional layout info
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoType.CT_TYPE3">
            <summary>
            Retrieves text processing info
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype1.C1_UPPER">
            <summary>
            Uppercase
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype1.C1_LOWER">
            <summary>
            Lowercase
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype1.C1_DIGIT">
            <summary>
            Decimal digits
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype1.C1_SPACE">
            <summary>
            Space characters
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype1.C1_PUNCT">
            <summary>
            Punctuation
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype1.C1_CNTRL">
            <summary>
            Control characters
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype1.C1_BLANK">
            <summary>
            Blank characters
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype1.C1_XDIGIT">
            <summary>
            Hexadecimal digits
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype1.C1_ALPHA">
            <summary>
            Any linguistic character: alphabetic, syllabary, or ideographic
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype2.C2_LEFTTORIGHT">
            <summary>
            Left to right
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype2.C2_RIGHTTOLEFT">
            <summary>
            Right to left
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype2.C2_EUROPENUMBER">
            <summary>
            European number, European digit
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype2.C2_EUROPESEPARATOR">
            <summary>
            European numeric separator
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype2.C2_EUROPETERMINATOR">
            <summary>
            European numeric terminator
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype2.C2_ARABICNUMBER">
            <summary>
            Arabic number
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype2.C2_COMMONSEPARATOR">
            <summary>
            Common numeric separator
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype2.C2_BLOCKSEPARATOR">
            <summary>
            Block separator
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype2.C2_SEGMENTSEPARATOR">
            <summary>
            Segment separator
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype2.C2_WHITESPACE">
            <summary>
            White space
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype2.C2_OTHERNEUTRAL">
            <summary>
            Other neutrals
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype2.C2_NOTAPPLICABLE">
            <summary>
            No implicit directionality (for example, control codes)
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype3.C3_DIACRITIC">
            <summary>
            Diacritic nonspacing mark
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype3.C3_VOWELMARK">
            <summary>
            Vowel nonspacing mark
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype3.C3_SYMBOL">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype3.C3_KATAKANA">
            <summary>
            Katakana character
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype3.C3_HIRAGANA">
            <summary>
            Hiragana character
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype3.C3_HALFWIDTH">
            <summary>
            Half-width (narrow) character
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype3.C3_FULLWIDTH">
            <summary>
            Full-width (wide) character
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype3.C3_IDEOGRAPH">
            <summary>
            Ideographic character
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype3.C3_KASHIDA">
            <summary>
            Arabic Kashida character
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype3.C3_LEXICAL">
            <summary>
            Punctuation which is counted as part of the word
            (Kashida, hyphen, feminine/masculine ordinal indicators, equal sign, and so forth)
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype3.C3_ALPHA">
            <summary>
            All linguistic characters (alphabetical, syllabary, and ideographic)
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.StringInfoCtype3.C3_NOTAPPLICABLE">
            <summary>
            Not applicable
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.FormatMessageFlags">
            <summary>
            Native enum.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.Images.Metafiles.PdfEmfRenderer.DrawLines(System.Drawing.Pen,System.Drawing.PointF[],System.Boolean)">
            <summary>
            Draws extra line between the last and first points.
            </summary>
            <param name="pen">The pen.</param>
            <param name="points">The points.</param>
            <param name="closeShape">If true, connects last and first points.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Images.Metafiles.PdfEmfRenderer.DrawCompoundLine(System.Drawing.Pen,System.Drawing.PointF[],System.Boolean,Spire.Pdf.Graphics.PdfPen)">
            <summary>
            Darw the multiple Line
            </summary>
            <param name="pen"></param>
            <param name="points"></param>
            <param name="rotate"></param>
            <param name="pdfPen"></param>
        </member>
        <member name="P:Spire.Pdf.Graphics.Images.Metafiles.PdfEmfRenderer.FontRegistryKey">
            <summary>
            Get Font registry key.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.Images.Metafiles.PdfEmfRenderer.FontNameRegistrySubKey">
            <summary>
            Get font name key of teh registry.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfFontStyle">
            <summary>
            Specifies style information applied to text.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFontStyle.Regular">
            <summary>
            Normal text.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFontStyle.Bold">
            <summary>
            Bold text.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFontStyle.Italic">
            <summary>
            Italic text.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFontStyle.Underline">
            <summary>
            Represents the underline text.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFontStyle.Strikeout">
            <summary>
            Strikeout text.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfFontFamily">
            <summary>
            Indicates type of standard PDF fonts.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFontFamily.Helvetica">
            <summary>
            Represents the Helvetica font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFontFamily.Courier">
            <summary>
            Represents the Courier font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFontFamily.TimesRoman">
            <summary>
            Represents the Times Roman font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFontFamily.Symbol">
            <summary>
            Represents the Symbol font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFontFamily.ZapfDingbats">
            <summary>
            Represents the ZapfDingbats font.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfCjkFontFamily">
            <summary>
            Specifies the type of CJK font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfCjkFontFamily.HanyangSystemsGothicMedium">
            <summary>
            Represents the Hanyang Systems Gothic Medium font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfCjkFontFamily.HanyangSystemsShinMyeongJoMedium">
            <summary>
            Represents the Hanyang Systems shin myeong Jo Medium font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfCjkFontFamily.HeiseiKakuGothicW5">
            <summary>
            Represents the Heisei kaku GothicW5 font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfCjkFontFamily.HeiseiMinchoW3">
            <summary>
            Represents the Heisei MinchoW3 font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfCjkFontFamily.MonotypeHeiMedium">
            <summary>
            Represents the Monotype Hei Medium font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfCjkFontFamily.MonotypeSungLight">
            <summary>
            Represents the monotype sung Light font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfCjkFontFamily.SinoTypeSongLight">
            <summary>
            Represents the sinotype song light font.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfFontType">
            <summary>
            Specifies the type of the font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFontType.Standard">
            <summary>
            Indicates the standard Adobe fonts.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFontType.TrueType">
            <summary>
            Indicates the non-embedded TrueType fonts.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFontType.TrueTypeEmbedded">
            <summary>
            Indicates the Embedded TrueType fonts.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfWordWrapType">
            <summary>
            Specifies the types of text wrapping.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfWordWrapType.None">
            <summary>
            Text wrapping between lines when formatting within a rectangle is disabled.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfWordWrapType.Word">
            <summary>
            Text is wrapped by words. If there is a word that is longer than bounds' width, this word is wrapped by characters.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfWordWrapType.WordOnly">
            <summary>
            Text is wrapped by words. If there is a word that is longer than bounds' width, it won't be wrapped at all
            and the process will be finished.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfWordWrapType.Character">
            <summary>
            Text is wrapped by characters. In this case the word at the end of the text line can be split.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfSubSuperScript">
            <summary>
            Specifies type of the SubSuperScript.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfSubSuperScript.None">
            <summary>
            Specifies no subscript or superscript.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfSubSuperScript.SuperScript">
            <summary>
            Specifies superscript format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfSubSuperScript.SubScript">
            <summary>
            Specifies subscript format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfPlatformID.AppleUnicode">
            <summary>
            Apple platform.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfPlatformID.Macintosh">
            <summary>
            Macintosh platform.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfPlatformID.Iso">
            <summary>
            Iso platform.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfPlatformID.Microsoft">
            <summary>
            Microsoft platform.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfNameID.Copyright">
            <summary>
            The Copyright
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfNameID.FontFamily">
            <summary>
            The Font Family
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfNameID.FontSubFamily">
            <summary>
            The Font Sub Family
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfNameID.FontIdentifier">
            <summary>
            The Font Identifier
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfNameID.FontName">
            <summary>
            The Font Name
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfNameID.Version">
            <summary>
            The Version
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfNameID.PostScriptName">
            <summary>
            The PostScriptName
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfNameID.Trademark">
            <summary>
            The Trademark
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfCmapEncoding.Unknown">
            <summary>
            Unknown encoding.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfCmapEncoding.Symbol">
            <summary>
            When building a symbol font for Windows.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfCmapEncoding.Unicode">
            <summary>
            When building a Unicode font for Windows.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfCmapEncoding.Macintosh">
            <summary>
            For font that will be used on a Macintosh.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfMicrosoftEncodingID.Undefined">
            <summary>
            Undefined encoding.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfMicrosoftEncodingID.Unicode">
            <summary>
            Unicode encoding.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfMacintoshEncodingID.Roman">
            <summary>
            Roman encoding.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfMacintoshEncodingID.Japanese">
            <summary>
            Japanese encoding.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfMacintoshEncodingID.Chinese">
            <summary>
            Chinese encoding.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfCmapFormat.Apple">
            <summary>
            This is the Apple standard character to glyph index mapping table.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfCmapFormat.Microsoft">
            <summary>
            This is the Microsoft standard character to glyph index mapping table.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfCmapFormat.Trimmed">
            <summary>
            Format 6: Trimmed table mapping.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.TtfCompositeGlyphFlags">
            <summary>
            ttf composite glyph flags.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfCompositeGlyphFlags.ARG_1_AND_2_ARE_WORDS">
            <summary>
            The ARG_1_AND_2_ARE_WORDS.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfCompositeGlyphFlags.ARGS_ARE_XY_VALUES">
            <summary>
            The ARGS_ARE_XY_VALUES.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfCompositeGlyphFlags.ROUND_XY_TO_GRID">
            <summary>
            The ROUND_XY_TO_GRID.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfCompositeGlyphFlags.WE_HAVE_A_SCALE">
            <summary>
            The WE_HAVE_A_SCALE.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfCompositeGlyphFlags.RESERVED">
            <summary>
            The RESERVED.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfCompositeGlyphFlags.MORE_COMPONENTS">
            <summary>
            The MORE_COMPONENTS.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfCompositeGlyphFlags.WE_HAVE_AN_X_AND_Y_SCALE">
            <summary>
            The WE_HAVE_AN_X_AND_Y_SCALE.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfCompositeGlyphFlags.WE_HAVE_A_TWO_BY_TWO">
            <summary>
            The WE_HAVE_A_TWO_BY_TWO.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfCompositeGlyphFlags.WE_HAVE_INSTRUCTIONS">
            <summary>
            The WE_HAVE_INSTRUCTIONS.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TtfCompositeGlyphFlags.USE_MY_METRICS">
            <summary>
            The USE_MY_METRICS.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.FontEncoding.Unknown">
            <summary>
            Unknown encoding
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.FontEncoding.StandardEncoding">
            <summary>
            Adobe standard Latin-text encoding
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.FontEncoding.MacRomanEncoding">
            <summary>
            Mac OS standard encoding
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.FontEncoding.MacExpertEncoding">
            <summary>
            An encoding for use with expert fonts
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.FontEncoding.WinAnsiEncoding">
            <summary>
            Windows Code Page 1252
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.FontEncoding.PDFDocEncoding">
            <summary>
            Encoding for text strings in a PDF document outside the document's content streams.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.FontEncoding.IdentityH">
            <summary>
            The horizontal identity mapping for 2-byte CIDs; may be used with CIDFonts using any
            Registry, Ordering, and Supplement values. It maps 2-byte character codes ranging from
            0 to 65,535 to the same 2-byte CID value, interpreted high-order byte first.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.FontDescriptorFlags.FixedPitch">
            <summary>
            All glyphs have the same width (as opposed to proportional or variable-pitch
            fonts, which have different widths).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.FontDescriptorFlags.Serif">
            <summary>
            Glyphs have serifs, which are short strokes drawn at an angle on the top and
            bottom of glyph stems (as opposed to sans serif fonts, which do not).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.FontDescriptorFlags.Symbolic">
            <summary>
            Font contains glyphs outside the Adobe standard Latin character set. The
            flag and the nonsymbolic flag cannot both be set or both be clear.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.FontDescriptorFlags.Script">
            <summary>
            Glyphs resemble cursive handwriting.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.FontDescriptorFlags.Nonsymbolic">
            <summary>
            Font uses the Adobe standard Latin character set or a subset of it.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.FontDescriptorFlags.Italic">
            <summary>
            Glyphs have dominant vertical strokes that are slanted.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.FontDescriptorFlags.ForceBold">
            <summary>
            Bold font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CompositeFontType.Type0">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CompositeFontType.TrueType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToImageRenderer.m_textLeading">
            <summary>
            Text leading
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToImageRenderer.m_textScaling">
            <summary>
            horizontal scaling 
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToImageRenderer.m_wordSpacing">
            <summary>
            word spacing 
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToImageRenderer.m_currentTextElement">
            <summary>
            Current text element
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToImageRenderer.m_characterSpacing">
            <summary>
            Character spacing.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToImageRenderer.m_colorspaceTable">
            <summary>
            Colorspace table of page resource
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToImageRenderer.m_patternTable">
            <summary>
            Pattern table of page resource
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.PdfToImageRenderer.m_GraphicObjectData">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.#ctor(System.Drawing.Graphics,Spire.Pdf.General.Render.PdfElement.PdfPageResources,System.Boolean)">
            <summary>
            Extract Signature As Images
            </summary>
            <param name="g"></param>
            <param name="resources"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.#ctor(Spire.Pdf.General.Render.PdfElement.PdfRecordCollection,Spire.Pdf.General.Render.PdfElement.PdfPageResources,System.Drawing.Graphics,Spire.Pdf.General.Render.Page,System.Boolean,Spire.Pdf.PdfPrintPageScaling)">
            <summary>
            Print Pdf Page to Image
            </summary>
            <param name="contentElements">PdfRecordCollection contentElements</param>
            <param name="resources">PdfPageResources resources</param>
            <param name="g">Graphics g</param>
            <param name="page">Current Page</param>
            <param name="newPage">Whether new page</param>
            <param name="printPageScaling">Pdf Print Page Scale type</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.LoadHeader(Spire.Pdf.General.Render.Page)">
            <summary>
             Set page RotateAngle
            </summary>
            <param name="page">Current  Pdf Page</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.LoadHeader(Spire.Pdf.General.Render.Page,Spire.Pdf.PdfPrintPageScaling)">
            <summary>
            Set page RotateAngle
            </summary>
            <param name="page">Current  Pdf Page</param>
            <param name="printPageScaling">Pdf Print Page Scale type</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.AddBezierCurve(System.String[])">
            <summary>
            
            </summary>
            <param name="curve"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.AddBezierCurve2(System.String[])">
            <summary>
            
            </summary>
            <param name="curve"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.AddBezierCurve3(System.String[])">
            <summary>
            
            </summary>
            <param name="curve"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.AddLine(System.String[])">
            <summary>
            
            </summary>
            <param name="line"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.BeginPath(System.String[])">
            <summary>
            
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.PdfToXpsExecuteDoCommand(System.String[],Spire.Pdf.General.Paper.Drawing.Fonts.PdfExternalFontCache)">
            <summary>
            execute do command
            </summary>
            <param name="xobjectElement"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.DrawAndFillPathType3Font(System.Drawing.Drawing2D.FillMode,System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
            <summary>
            Draw Type3Font
            </summary>
            <param name="mode"></param>
            <param name="Type3FontPath"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.GetClipRectangle(System.String[])">
            <summary>
            Get Rectangle from pdf dictionary.
            </summary>
            <param name="rectangle"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.SetBBoxForForm(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            set BBox for Form object.
            </summary>
            <param name="x,y,x1,y1"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.RenderAsImage">
            
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.ExecuteCommand(Spire.Pdf.General.Render.PdfElement.PdfRecord)">
            <summary>
            Execute pdf command.
            </summary>
            <param name="record"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.RenderTextElement(System.String[],System.String)">
            <summary>
            Render text element
            </summary>
            <param name="textElements">text elements</param>
            <param name="tokenType">token type</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfToImageRenderer.RenderText(System.String,Spire.Pdf.General.Render.PdfElement.PdfFontStructure,System.String,System.Boolean)">
            <summary>
            Render text to pdf drawing context.
            </summary>
            <param name="tokenType"></param>
            <param name="structure"></param>
            <param name="decodedText"></param>
            <param name="increaseWidth"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.XObjectElement.GetPdfPageResources">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.XObjectElement.RenderXobject(System.Drawing.Graphics,Spire.Pdf.General.Render.PdfElement.PdfPageResources,Spire.Pdf.General.Render.Page)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="resources"></param>
            <param name="imageRender"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.XObjectElement.Render(Spire.Pdf.General.Render.PdfElement.PdfPageResources)">
            <summary>
            get PdfRecordCollection from resources
            </summary>
            <param name="resources"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.XObjectElement.RenderImage(Spire.Pdf.General.Render.PdfToImageRenderer,System.Drawing.Graphics,Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
            Render inline image.
            </summary>
            <param name="g"></param>
            <param name="dictionary"></param>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfTextBoxField">
            <summary>
            Represents text box field in the PDF form.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.BackColor">
            <summary>
            Get or Set the back color of the field
            </summary>
            <value>A  object specifying the background color of field. </value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.ForeColor">
            <summary>
            Gets or Set the fore color of the field.
            </summary>
            <value>A  object specifying the background color of field.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.TextAlignment">
            <summary>
            Get or Set the text alignment in a text box.
            </summary>
            <value>A  enumeration member specifying the text alignment in a text box.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.HighlightMode">
            <summary>
            Get or Set the HighLightMode of the Field.
            </summary>
            <value>A  enumeration member specifying the highlight mode in a text box.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.Text">
            <summary>
            Gets or Set value of the text box field.
            </summary>
            <value>A string value representing the value of the item. </value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.DefaultValue">
            <summary>
            Gets or set the default value of the field.
            </summary>
            <value>A string value representing the default value of the item. </value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.SpellCheck">
            <summary>
            Gets or sets a value indicating whether to check spelling.
            </summary>
            <value>True if the field content should be checked for spelling erorrs, false otherwise. Default is true.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.InsertSpaces">
            <summary>
            Meaningful only if the MaxLength property is set and the Multiline, Password properties are false.
            If set, the field is automatically divided into as many equally spaced positions, or combs, 
            as the value of MaxLength, and the text is laid out into those combs.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.Multiline">
            <summary>
            Gets or sets a value indicating whether this  is multiline.
            </summary>       
            <value>True if the field is multiline, false otherwise. Default is false.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.Password">
            <summary>
            Gets or sets a value indicating whether this  is password field.
            </summary>
            <value>True if the field is a password field, false otherwise. Default is false.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.Scrollable">
            <summary>
            Gets or sets a value indicating whether this  is scrollable.
            </summary>
            <value>True if the field content can be scrolled, false otherwise. Default is true.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.MaxLength">
            <summary>
            Gets or sets the maximum length of the field, in characters.
            </summary>
            <value>A positive integer value specifying the maximum number of characters that can be entered in the text edit field.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.Actions">
            <summary>
            Gets the actions of the field.
            </summary>
            <value>The actions.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.Bounds">
            <summary>
            Gets or sets the bounds.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.Location">
            <summary>
            Gets or sets the location.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.Size">
            <summary>
            Gets or sets the size.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.BorderStyle">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.BorderColor">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.BorderWidth">
            <summary>
            Gets or Sets the width of the border.
            </summary>
            <value>The width of the border.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.Font">
            <summary>
            Gets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.Visible">
            <summary>
            Gets a value indicating the visibility of the field.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.Name">
            <summary>
            Gets the name of the field.
            </summary>
            <value>A string value specifying the name of the field.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.MappingName">
            <summary>
            Gets or sets the mapping name to be used when exporting interactive form
            field data from the document.
            </summary>
            <value>A string value specifying the mapping name of the field. </value>        
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.ToolTip">
            <summary>
            Gets or sets the tool tip.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.Page">
            <summary>
            Gets the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.ReadOnly">
            <summary>
            Gets or sets a value indicating whether [read only].
            </summary>
            <value>True if the field is read-only, false otherwise. Default is false.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.Required">
            <summary>
            Gets or sets a value indicating whether this  is required.
            </summary>
            <value>True if the field is required, false otherwise. Default is false.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.Export">
            <summary>
            Gets or sets a value indicating whether this  is export.
            </summary>
            <value><c>true</c> if export; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.IPdfTextBoxField.Flatten">
            <summary>
            Gets or sets a value indicating whether this  is flatten.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfTextBoxField.m_passwordValue">
            <summary>
            The password chrackter.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfTextBoxField.#ctor(Spire.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="page">Page which the field to be placed on.</param>
            <param name="name">The name of the text box field.</param>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfTextBoxField.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text of the text box field.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfTextBoxField.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
            <value>The default value of the text box field.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfTextBoxField.SpellCheck">
            <summary>
            Gets or sets a value indicating whether to check spelling.
            </summary>
            <value><c>true</c> if check spelling; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfTextBoxField.InsertSpaces">
            <summary>
            Meaningful only if the MaxLength property is set and the Multiline, Password properties are false.
            If set, the field is automatically divided into as many equally spaced positions, or combs, 
            as the value of MaxLength, and the text is laid out into those combs.
            </summary>
            <value><c>true</c> if need to insert spaces; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfTextBoxField.Multiline">
            <summary>
            Gets or sets a value indicating whether this  is multiline.
            </summary>
            <value><c>true</c> if multiline; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfTextBoxField.Password">
            <summary>
            Gets or sets a value indicating whether this  is password field.
            </summary>
            <value><c>true</c> if password field; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfTextBoxField.Scrollable">
            <summary>
            Gets or sets a value indicating whether this  is scrollable.
            </summary>
            <value><c>true</c> if scrollable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfTextBoxField.MaxLength">
            <summary>
            Gets or sets the maximum number of characters that can be entered in the text box.
            </summary>
            <value>An integer value specifying the maximum number of characters that can be entered in the text box.</value>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfListFieldItemCollection">
            <summary>
            Represents list field item collection.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfListFieldItemCollection.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfListFieldItemCollection.Add(Spire.Pdf.Fields.PdfListFieldItem)">
            <summary>
            Adds the specified item in the collection.
            </summary>
            <param name="item">The  object which to be added in the collection.</param>
            <returns>item</returns>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfListFieldItemCollection.Insert(System.Int32,Spire.Pdf.Fields.PdfListFieldItem)">
            <summary>
            Inserts the list item field at the specified index.
            </summary>
            <param name="index">The index where to insert the new item.</param>
            <param name="item">The  object to be added to collection.</param>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfListFieldItemCollection.Remove(Spire.Pdf.Fields.PdfListFieldItem)">
            <summary>
            Removes the specified item.
            </summary>
            <param name="item">The  object which to be removed in the collection.</param>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfListFieldItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified position.
            </summary>
            <param name="index">The index where to remove the item.</param>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfListFieldItemCollection.Contains(Spire.Pdf.Fields.PdfListFieldItem)">
            <summary>
            Determines whether the item is contained by the collection.
            </summary>
            <param name="item">Check whether  object is exists in the collection or not.</param>
            <returns>
            <c>true</c> if the item is contained within the collection; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfListFieldItemCollection.IndexOf(Spire.Pdf.Fields.PdfListFieldItem)">
            <summary>
            Gets the index of the specified item.
            </summary>
            <param name="item">A  object whose index is requested.</param>
            <returns>The index of the given item, -1 if the item does not exist.</returns>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfListFieldItemCollection.Clear">
            <summary>
            Clears the collection.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfListFieldItemCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
            <value>The  object.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfListFieldItemCollection.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.Implementation.Exporting.PdfToHtml.PdfToHtmlParameter">
            <summary>
            Pdf to html Set Parameter
            </summary>
        </member>
        <member name="F:Spire.Pdf.Implementation.Exporting.PdfToHtml.PdfToHtmlParameter.m_SplitHtmlNumber">
            <summary>
            In 1000 The Split Page
            </summary>
        </member>
        <member name="P:Spire.Pdf.Implementation.Exporting.PdfToHtml.PdfToHtmlParameter.SplitHtmlNumber">
            <summary>
            In 1000 The Split Page,default 1000
            </summary>
        </member>
        <member name="P:Spire.Pdf.Implementation.Exporting.PdfToHtml.PdfToHtmlParameter.IsEmbedImage">
            <summary>
            wheather embedded image
            </summary>
        </member>
        <member name="T:Spire.Pdf.Bookmarks.PdfBookmarkCollection">
            <summary>
            This class plays two roles: it's a base class for all bookmarks
            and it's a root of a bookmarks tree.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Bookmarks.PdfBookmarkCollection.Add(System.String)">
            <summary>
            Creates and adds an outline.
            </summary>
            <param name="title">The title of the new outline.</param>
            <returns>The outline created.</returns>
        </member>
        <member name="M:Spire.Pdf.Bookmarks.PdfBookmarkCollection.Contains(Spire.Pdf.Bookmarks.PdfBookmark)">
            <summary>
            Determines whether the specified outline is a direct descendant of the outline base.
            </summary>
            <param name="outline">The outline.</param>
            <returns>
            <c>true</c> if the specified outline is a direct descendant of the outline base;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Bookmarks.PdfBookmarkCollection.Remove(System.String)">
            <summary>
            Removes the specified bookmark from the document.
            </summary>
            <param name="title">The title of the outline.</param>
        </member>
        <member name="M:Spire.Pdf.Bookmarks.PdfBookmarkCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the specified bookmark from the document at the specified index.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Spire.Pdf.Bookmarks.PdfBookmarkCollection.Clear">
            <summary>
            Removes all the bookmark from the document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Bookmarks.PdfBookmarkCollection.Insert(System.Int32,System.String)">
            <summary>
            Inserts a new outline at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="title">The title of the new outline.</param>
            <returns>The new outline.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Spire.Pdf.Bookmarks.PdfBookmarkCollection.System#Collections#IEnumerable#GetEnumerator" -->
        <member name="P:Spire.Pdf.Bookmarks.PdfBookmarkCollection.Count">
            <summary>
            Gets number of the elements in the collection.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Bookmarks.PdfBookmarkCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
            <value>index</value>
        </member>
        <member name="P:Spire.Pdf.Bookmarks.PdfBookmarkCollection.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.ColorSpace.PdfKnownColor">
            <summary>
            Represents an indexed color, based on an indexed colorspace. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfKnownColor.#ctor(Spire.Pdf.ColorSpace.PdfKnownColorSpace)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="colorspace">The colorspace.</param>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfKnownColor.SelectColorIndex">
            <summary>
            Gets or sets the color index
            </summary>
            <value>The index of the select color.</value>
            <remarks>The acceptable range for this value is 0 - MaxColorIndex.</remarks>
        </member>
        <member name="T:Spire.Pdf.ColorSpace.PdfCalGrayColorSpace">
            <summary>
            Represents a CalGray colorspace.
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfCalGrayColorSpace.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfCalGrayColorSpace.BlackPoint">
            <summary>
            Gets or sets the black point. 
            </summary>
            <value>An array of three numbers [XB YB ZB] specifying the tristimulus value, in the CIE 1931 XYZ space, of the diffuse black point. Default value: [ 0.0 0.0 0.0 ].</value>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfCalGrayColorSpace.Gamma">
            <summary>
            Gets or sets the gamma.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfCalGrayColorSpace.WhitePoint">
            <summary>
            Gets or sets the white point.
            </summary>
            <value>An array of three numbers [XW YW ZW] specifying the tristimulus value, in the CIE 1931 XYZ space, of the diffuse white point. The numbers XW and ZW must be positive, and YW must be equal to 1.0.</value>
        </member>
        <member name="T:Spire.Pdf.Barcode.PdfCode128CBarcode">
            <summary>
            Represents a Code128C barcode.
            </summary>
            <remarks>Only the following symbols are allowed in a Code 128C barcode: 0 1 2 3 4 5 6 7 8 9 FNC1 (\xF0). Code 128 C encodes only numeric symbols at double density, each pair of digits is encoded using a single symbol.</remarks>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode128CBarcode.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode128CBarcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The Barcode text.</param>
        </member>
        <member name="T:Spire.Pdf.Annotations.Appearance.PdfExtendedAppearance">
            <summary>
            Represents extended appearance of the annotation. It has two states such as On state and Off state.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.Appearance.PdfExtendedAppearance.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Appearance.PdfExtendedAppearance.Normal">
            <summary>
            Gets the normal appearance of the annotation.
            </summary>
            <value>The  object specifies the normal appearance of the annotation.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.Appearance.PdfExtendedAppearance.MouseHover">
            <summary>
            Gets the appearance when mouse is hovered.
            </summary>
            <value>The  object specifies the annotation appearance when the mouse is hovered on it.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.Appearance.PdfExtendedAppearance.Pressed">
            <summary>
            Gets the pressed state annotation.
            </summary>
            <value>The appearance in pressed state.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.Appearance.PdfExtendedAppearance.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DNode">
            <summary>
            Represents the particular areas of 3D artwork and the opacity and visibility with which individual nodes are displayed.  
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DNode.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DNode.Visible">
            <summary>
            Gets or sets a value indicating whether the node is visible or not. 
            </summary>
            <value>True if the node is visible. </value>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DNode.Name">
            <summary>
            Gets or sets the node name. 
            </summary>
            <value>The name of the 3D node.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DNode.Opacity">
            <summary>
            Gets or sets the cutting plane opacity. 
            </summary>
            <value>A number indicating the opacity of the cutting plane using a standard additive blend mode. </value>
            <remarks>The opacity is given in percents, 100 is full opacity, 0 is no opacity.</remarks>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DNode.Matrix">
            <summary>
            Gets or sets the 3D transformation matrix. 
            </summary>
            <value>A 12-element 3D transformation matrix that specifies the position and orientation of this node, relative to its parent, in world coordinates. </value>
            <remarks>If the array has more than 12 elements, only the first 12 will be considered.</remarks>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DNode.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DNodeCollection">
            <summary>
            Represents a collection of  objects. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DNodeCollection.Add(Spire.Pdf.Annotations.Pdf3DNode)">
            <summary>
            Adds the specified value.
            <param name="value">The value.</param>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DNodeCollection.Contains(Spire.Pdf.Annotations.Pdf3DNode)">
            <summary>
            Determines whether [contains] [the specified value].
            </summary>
            <param name="value">The value.</param>
            <returns>
            if it contains the specified value, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DNodeCollection.IndexOf(Spire.Pdf.Annotations.Pdf3DNode)">
            <summary>
            Indexes the of.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DNodeCollection.Insert(System.Int32,Spire.Pdf.Annotations.Pdf3DNode)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DNodeCollection.Remove(Spire.Pdf.Annotations.Pdf3DNode)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DNodeCollection.Item(System.Int32)">
            <summary>
            Gets or sets the  at the specified index.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Renderer.XPStoPDFRenderer.DrawAlternateContent(Spire.Pdf.Exporting.XPS.Schema.Mc.AlternateContent)">
            <summary>
            Converts the alternateContent graphics to PDF graphics.
            </summary>
            <param name="alternateContent"></param>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Renderer.XPStoPDFRenderer.DrawChoice(Spire.Pdf.Exporting.XPS.Schema.Mc.Choice,System.String)">
            <summary>
             Converts the choice graphics to PDF graphics.
            </summary>
            <param name="choice"></param>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Renderer.XPStoPDFRenderer.DrawFallback(Spire.Pdf.Exporting.XPS.Schema.Mc.Fallback,System.String)">
            <summary>
             Converts the fallback graphics to PDF graphics.
            </summary>
            <param name="fallback"></param>
        </member>
        <member name="M:Spire.Pdf.Exporting.XPS.Renderer.XPStoPDFRenderer.DrawBaloo(Spire.Pdf.Exporting.XPS.Schema.Mc.Baloo,System.String)">
            <summary>
             Converts the baloo graphics to PDF graphics.
            </summary>
            <param name="baloo"></param>
        </member>
        <member name="T:Spire.Pdf.Tables.PdfTable">
            <summary>
            Represents fast table with few features.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfTable.Draw(Spire.Pdf.Graphics.PdfCanvas,System.Drawing.PointF,System.Single)">
            <summary>
            Draws an element on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the element should be printed.</param>
            <param name="location">The location of the element.</param>
            <param name="width">The width of the table.</param>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfTable.Draw(Spire.Pdf.Graphics.PdfCanvas,System.Single,System.Single,System.Single)">
            <summary>
            Draws an element on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the element should be printed.</param>
            <param name="x">X co-ordinate of the element.</param>
            <param name="y">Y co-ordinate of the element.</param>
            <param name="width">The width of the table.</param>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfTable.Draw(Spire.Pdf.Graphics.PdfCanvas,System.Drawing.RectangleF)">
            <summary>
            Draws an element on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the element should be printed.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfTable.Draw(Spire.Pdf.PdfNewPage,System.Drawing.PointF)">
            <summary>
            Draws the table starting from the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="location">The location.</param>
            <returns>The results of the lay outing.</returns>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfTable.Draw(Spire.Pdf.PdfNewPage,System.Drawing.PointF,Spire.Pdf.Tables.PdfTableLayoutFormat)">
            <summary>
            Draws the table starting from the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="location">The location.</param>
            <param name="format">The format.</param>
            <returns>The results of the lay outing.</returns>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfTable.Draw(Spire.Pdf.PdfNewPage,System.Drawing.RectangleF)">
            <summary>
            Draws the table starting from the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="bounds">The bounds.</param>
            <returns>The results of the lay outing.</returns>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfTable.Draw(Spire.Pdf.PdfNewPage,System.Drawing.RectangleF,Spire.Pdf.Tables.PdfTableLayoutFormat)">
            <summary>
            Draws the table starting from the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="bounds">The bounds.</param>
            <param name="format">The format.</param>
            <returns>The results of the lay outing.</returns>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfTable.Draw(Spire.Pdf.PdfNewPage,System.Single,System.Single)">
            <summary>
            Draws the table starting from the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <returns>The results of the lay outing.</returns>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfTable.Draw(Spire.Pdf.PdfNewPage,System.Single,System.Single,Spire.Pdf.Tables.PdfTableLayoutFormat)">
            <summary>
            Draws the table starting from the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="format">The format.</param>
            <returns>The results of the lay outing.</returns>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfTable.Draw(Spire.Pdf.PdfNewPage,System.Single,System.Single,System.Single)">
            <summary>
            Draws the table starting from the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="width">The width.</param>
            <returns>The results of the lay outing.</returns>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfTable.Draw(Spire.Pdf.PdfNewPage,System.Single,System.Single,System.Single,Spire.Pdf.Tables.PdfTableLayoutFormat)">
            <summary>
            Draws the table starting from the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="width">The width.</param>
            <param name="format">The format.</param>
            <returns>The results of the lay outing.</returns>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfTable.Draw(Spire.Pdf.Graphics.PdfCanvas,System.Single,System.Single)">
            <summary>
            Draws an element on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the element should be printed.</param>
            <param name="x">X co-ordinate of the element.</param>
            <param name="y">Y co-ordinate of the element.</param>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTable.Columns">
            <summary>
            Gets the columns.
            </summary>
            <value>The table column collection</value>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTable.Rows">
            <summary>
            Gets the rows.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTable.DataSource">
            <summary>
            Gets or sets the data source.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTable.DataMember">
            <summary>
            Gets or sets the data member.
            </summary>
            <value>The data member.</value>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTable.DataSourceType">
            <summary>
            Gets or sets the datasource type of the PdfLightTable
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTable.Style">
            <summary>
            Gets or sets the properties.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTable.IgnoreSorting">
            <summary>
            Gets or sets a value indicating whether
            PdfLightTable should ignore sorting in data table.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTable.AllowCrossPages">
            <summary>
            Gets a value Indicates whether can cross a page.
            </summary>
        </member>
        <member name="E:Spire.Pdf.Tables.PdfTable.BeginRowLayout">
            <summary>
            The event raised on starting row lay outing.
            </summary>
        </member>
        <member name="E:Spire.Pdf.Tables.PdfTable.EndRowLayout">
            <summary>
            The event raised on having finished row lay outing.
            </summary>
        </member>
        <member name="E:Spire.Pdf.Tables.PdfTable.BeginCellLayout">
            <summary>
            The event raised on starting cell lay outing.
            </summary>
        </member>
        <member name="E:Spire.Pdf.Tables.PdfTable.EndCellLayout">
            <summary>
            The event raised on having finished cell layout.
            </summary>
        </member>
        <member name="E:Spire.Pdf.Tables.PdfTable.QueryNextRow">
            <summary>
            The event raised when the next row data is requested.
            </summary>
        </member>
        <member name="E:Spire.Pdf.Tables.PdfTable.QueryColumnCount">
            <summary>
            The event raised when the column number is requested.
            </summary>
        </member>
        <member name="E:Spire.Pdf.Tables.PdfTable.QueryRowCount">
            <summary>
            The event raised when the row number is requested.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Tables.PdfTableStyle">
            <summary>
            Represents parameters of PdfLightTable.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfTableStyle.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTableStyle.DefaultStyle">
            <summary>
            Gets or sets the default cell style.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTableStyle.AlternateStyle">
            <summary>
            Gets or sets the alternate style, which is the style of the odd rows.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTableStyle.HeaderSource">
            <summary>
            Gets or sets a value indicating whether
            to use rows or column captions for forming header.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTableStyle.HeaderRowCount">
            <summary>
            Gets or sets the header rows count.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTableStyle.HeaderStyle">
            <summary>
            Gets or sets the header cell style.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTableStyle.RepeatHeader">
            <summary>
            Gets or sets a value indicating whether to repeat header on each page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTableStyle.ShowHeader">
            <summary>
            Gets or sets a value indicating whether the header is visible.
            </summary>
            <remarks>If the header is made up with ordinary rows they aren't visible
            while this property is set to false.</remarks>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTableStyle.CellSpacing">
            <summary>
            Gets or sets the cell spacing.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTableStyle.CellPadding">
            <summary>
            Gets or sets the cell padding.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTableStyle.BorderOverlapStyle">
            <summary>
            Gets or sets a value indicating whether the cell borders
            should overlap its neighbour's borders or be drawn in the cell interior.
            </summary>
            <remarks>Please, use this property with caution,
            because it might cause unexpected results if borders
            are not the same width and colour.</remarks>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfTableStyle.BorderPen">
            <summary>
            Gets or sets the pen of the table border.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Tables.PdfCellStyle">
            <summary>
            Represents information about cell style.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfCellStyle.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfCellStyle.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush,Spire.Pdf.Graphics.PdfPen)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="fontBrush">The font brush.</param>
            <param name="borderPen">The border pen.</param>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfCellStyle.Font">
            <summary>
            Gets or sets the font.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfCellStyle.StringFormat">
            <summary>
            Gets or sets the string format of the cell text.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfCellStyle.TextPen">
            <summary>
            Gets or sets the font which will be used to draw text outlines.
            </summary>
            <remarks>It should be null for default text representation.</remarks>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfCellStyle.TextBrush">
            <summary>
            Gets or sets the brush which will be used to draw font.
            </summary>
            <remarks>This brush will be used to fill glyphs interior, which is the default.</remarks>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfCellStyle.BorderPen">
            <summary>
            Gets or sets the pen with which the border will be drawn.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfCellStyle.BackgroundBrush">
            <summary>
            Gets or sets the brush with which the background will be drawn.
            </summary>
            <remarks>It's null by default.</remarks>
        </member>
        <member name="T:Spire.Pdf.Tables.PdfColumnCollection">
            <summary>
            Represents the collection of the columns.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfColumnCollection.Add(Spire.Pdf.Tables.PdfColumn)">
            <summary>
            Adds the specified column.
            </summary>
            <param name="column">The column.</param>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfColumnCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Tables.PdfColumn">
            <summary>
            Represents a single column of the table.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfColumn.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfColumn.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="columnName">Name of the column.</param>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfColumn.StringFormat">
            <summary>
            Gets or sets the string format.
            </summary>
            <value>The string format.</value>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfColumn.Width">
            <summary>
            Gets or sets the width of the column.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfColumn.ColumnName">
            <summary>
            Gets or sets the column name.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Tables.PdfRow">
            <summary>
            Represents a single column of the table.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfRow.Values">
            <summary>
            The array of values that are used to create the new row.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Tables.PdfRowCollection">
            <summary>
            Represents the collection of the columns.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Tables.PdfRowCollection.Add(Spire.Pdf.Tables.PdfRow)">
            <summary>
            Adds the specified row.
            </summary>
            <param name="row">The row.</param> 
        </member>
        <member name="M:Spire.Pdf.Tables.PdfRowCollection.Add(System.Object[])">
            <summary>
            The array of values that are used to create the new row.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Tables.PdfRowCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Tables.PdfTableException">
            <summary>
            Represents as a message deliverer from PdfLightTable class to the user.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Lists.PdfListItemCollection">
            <summary>
            Represents collection of list items.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItemCollection.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItemCollection.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="items">A string array that contains items separated by the new line character.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItemCollection.Add(Spire.Pdf.Lists.PdfListItem)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns>The item index in collection.</returns>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItemCollection.Add(Spire.Pdf.Lists.PdfListItem,System.Single)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
            <param name="itemIndent">The item indent.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItemCollection.Add(System.String)">
            <summary>
            Adds the item with a specified text.
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItemCollection.Add(System.String,System.Single)">
            <summary>
            Adds the specified text.
            </summary>
            <param name="text">The text.</param>
            <param name="itemIndent">The item indent.</param>
            <returns>List item.</returns>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItemCollection.Add(System.String,Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Adds the specified text.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <returns>The item index in collection.</returns>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItemCollection.Add(System.String,Spire.Pdf.Graphics.PdfFontBase,System.Single)">
            <summary>
            Adds the specified text.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="itemIndent">The item indent.</param>
            <returns>List item.</returns>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItemCollection.Insert(System.Int32,Spire.Pdf.Lists.PdfListItem)">
            <summary>
            Inserts item at the specified index.
            </summary>
            <param name="index">The specified index.</param>
            <param name="item">The item.</param>
            <returns>The item index </returns>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItemCollection.Insert(System.Int32,Spire.Pdf.Lists.PdfListItem,System.Single)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="item">The item.</param>
            <param name="itemIndent">The item indent.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItemCollection.Remove(Spire.Pdf.Lists.PdfListItem)">
            <summary>
            Removes the specified item from the list.
            </summary>
            <param name="item">The specified item.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index from the list.
            </summary>
            <param name="index">he specified index.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItemCollection.IndexOf(Spire.Pdf.Lists.PdfListItem)">
            <summary>
            Determines the index of a specific item in the list.
            </summary>
            <param name="item">The item to locate in the list. </param>
            <returns>The index of item if found in the list; otherwise, -1. </returns>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItemCollection.Clear">
            <summary>
            Clears collection.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfListItemCollection.Item(System.Int32)">
            <summary>
            Gets the PdfListItem from collection at the specified index.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Lists.PdfListItem">
            <summary>
            Represents the list item of the list.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItem.#ctor">
            <summary>
            Creates new empty pdf list item.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItem.#ctor(System.String)">
            <summary>
            Creates new pdf list item with default settings.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItem.#ctor(System.String,Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The text of item.</param>
            <param name="font">The font of item.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItem.#ctor(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The text of item.</param>
            <param name="font">The font of item.</param>
            <param name="format">The string format.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfListItem.#ctor(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfStringFormat,Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Creates new list item.
            </summary>
            <param name="text">The item text.</param>
            <param name="font">The item font.</param>
            <param name="format">The string format of item.</param>
            <param name="pen">The item pen.</param>
            <param name="brush">The item brush.</param>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfListItem.Font">
            <summary>
            Gets or sets item font.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfListItem.Text">
            <summary>
            Gets or sets item text.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfListItem.StringFormat">
            <summary>
            Gets or sets item string format.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfListItem.Pen">
            <summary>
            Gets or sets list item pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfListItem.Brush">
            <summary>
            Gets or sets list item brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfListItem.SubList">
            <summary>
            Gets or sets sublist for item. 
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfListItem.TextIndent">
            <summary>
            Gets or sets indent for item.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Grid.PdfGridBeginPageLayoutEventArgs">
            <summary>
            Arguments of BeginPageLayoutEvent.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridBeginPageLayoutEventArgs.StartRowIndex">
            <summary>
            Gets the start row.
            </summary>
            <value>The start row.</value>
        </member>
        <member name="T:Spire.Pdf.Grid.PdfGridEndPageLayoutEventArgs">
            <summary>
            Arguments of EndPageLayoutEvent.
            </summary>
        </member>
        <member name="P:Spire.Pdf.IO.PdfParser.IntegerQueue">
            <summary>
            Get Holds all integers that have been read ahead.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfBitmap">
            <summary>
            Represents the bitmap images.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfBitmap.#ctor(System.Drawing.Image)">
            <summary>
            Creates new PdfBitmap instance.
            </summary>
            <param name="image">The image.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfBitmap.#ctor(System.String)">
            <summary>
            Creates new PdfBitmap instance.
            </summary>
            <param name="path">The image path.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfBitmap.#ctor(System.IO.Stream)">
            <summary>
            Creates new PdfBitmap instance.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfBitmap.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
             is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfBitmap.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing,
            releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBitmap.ActiveFrame">
            <summary>
            Gets or sets the active frame of the bitmap.
            </summary>
            <value>The active frame index.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBitmap.FrameCount">
            <summary>
            Gets the number of frames in the bitmap.
            </summary>
            <value>The frame count.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBitmap.Mask">
            <summary>
            Gets or sets the mask of bitmap.
            </summary>
            <value>New PdfMask.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBitmap.Quality">
            <summary>
            Gets or sets the quality.
            </summary>
            <remarks>When the image is stored into PDF not as a mask,
            you may reduce its quality, which saves the disk space.</remarks>
        </member>
        <member name="M:Spire.Pdf.Graphics.ImageUtilities.GetShortInverted(System.IO.Stream)">
            <summary>
            Reads an inverted short from the Stream.
            </summary>
            <param name="istr">the Stream</param>
            <returns>an int</returns>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfPngImage.IHDR">
            A PNG marker. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfPngImage.PLTE">
            A PNG marker. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfPngImage.IDAT">
            A PNG marker. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfPngImage.IEND">
            A PNG marker. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfPngImage.tRNS">
            A PNG marker. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfPngImage.pHYs">
            A PNG marker. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfPngImage.gAMA">
            A PNG marker. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfPngImage.cHRM">
            A PNG marker. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfPngImage.sRGB">
            A PNG marker. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfPngImage.iCCP">
            A PNG marker. 
        </member>
        <member name="F:Spire.Pdf.Graphics.ByteBuffer.count">
            The count of bytes in the buffer. 
        </member>
        <member name="F:Spire.Pdf.Graphics.ByteBuffer.buf">
            The buffer where the bytes are stored. 
        </member>
        <member name="F:Spire.Pdf.Graphics.ByteBuffer.HIGH_PRECISION">
            If <CODE>true</CODE> always output floating point numbers with 6 decimal digits.
            If <CODE>false</CODE> uses the faster, although less precise, representation.
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.#ctor">
            Creates new ByteBuffer with capacity 128 
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.#ctor(System.Int32)">
            Creates a byte buffer with a certain capacity.
            @param size the initial capacity
        </member>
        <!-- Badly formed XML comment ignored for member "M:Spire.Pdf.Graphics.ByteBuffer.SetCacheSize(System.Int32)" -->
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.FillCache(System.Int32)">
             You can fill the cache in advance if you want to.
            
             @param   decimals
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.ConvertToBytes(System.Int32)">
             Converts an double (multiplied by 100 and cast to an int) into an array of bytes.
            
             @param   i   the int
             @return  a bytearray
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.Append_i(System.Int32)">
            Appends an <CODE>int</CODE>. The size of the array will grow by one.
            @param b the int to be appended
            @return a reference to this <CODE>ByteBuffer</CODE> object
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.Append(System.Byte[],System.Int32,System.Int32)">
            Appends the subarray of the <CODE>byte</CODE> array. The buffer will grow by
            <CODE>len</CODE> bytes.
            @param b the array to be appended
            @param off the offset to the start of the array
            @param len the length of bytes to Append
            @return a reference to this <CODE>ByteBuffer</CODE> object
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.Append(System.Byte[])">
            Appends an array of bytes.
            @param b the array to be appended
            @return a reference to this <CODE>ByteBuffer</CODE> object
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.Append(System.String)">
            Appends a <CODE>string</CODE> to the buffer. The <CODE>string</CODE> is
            converted according to the encoding ISO-8859-1.
            @param str the <CODE>string</CODE> to be appended
            @return a reference to this <CODE>ByteBuffer</CODE> object
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.Append(System.Char)">
            Appends a <CODE>char</CODE> to the buffer. The <CODE>char</CODE> is
            converted according to the encoding ISO-8859-1.
            @param c the <CODE>char</CODE> to be appended
            @return a reference to this <CODE>ByteBuffer</CODE> object
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.Append(Spire.Pdf.Graphics.ByteBuffer)">
            Appends another <CODE>ByteBuffer</CODE> to this buffer.
            @param buf the <CODE>ByteBuffer</CODE> to be appended
            @return a reference to this <CODE>ByteBuffer</CODE> object
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.Append(System.Int32)">
            Appends the string representation of an <CODE>int</CODE>.
            @param i the <CODE>int</CODE> to be appended
            @return a reference to this <CODE>ByteBuffer</CODE> object
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.Append(System.Int64)">
            Appends the string representation of a <CODE>long</CODE>.
            @param i the <CODE>long</CODE> to be appended
            @return a reference to this <CODE>ByteBuffer</CODE> object
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.Append(System.Single)">
            Appends a string representation of a <CODE>float</CODE> according
            to the Pdf conventions.
            @param i the <CODE>float</CODE> to be appended
            @return a reference to this <CODE>ByteBuffer</CODE> object
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.Append(System.Double)">
            Appends a string representation of a <CODE>double</CODE> according
            to the Pdf conventions.
            @param d the <CODE>double</CODE> to be appended
            @return a reference to this <CODE>ByteBuffer</CODE> object
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.FormatDouble(System.Double)">
            Outputs a <CODE>double</CODE> into a format suitable for the PDF.
            @param d a double
            @return the <CODE>string</CODE> representation of the <CODE>double</CODE>
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.FormatDouble(System.Double,Spire.Pdf.Graphics.ByteBuffer)">
            Outputs a <CODE>double</CODE> into a format suitable for the PDF.
            @param d a double
            @param buf a ByteBuffer
            @return the <CODE>String</CODE> representation of the <CODE>double</CODE> if
            <CODE>buf</CODE> is <CODE>null</CODE>. If <CODE>buf</CODE> is <B>not</B> <CODE>null</CODE>,
            then the double is appended directly to the buffer and this methods returns <CODE>null</CODE>.
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.Reset">
            Sets the size to zero.
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.ToByteArray">
             Creates a newly allocated byte array. Its size is the current
             size of this output stream and the valid contents of the buffer
             have been copied into it.
            
             @return  the current contents of this output stream, as a byte array.
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.ToString">
             Converts the buffer's contents into a string, translating bytes into
             characters according to the platform's default character encoding.
            
             @return string translated from the buffer's contents.
        </member>
        <member name="M:Spire.Pdf.Graphics.ByteBuffer.WriteTo(System.IO.Stream)">
             Writes the complete contents of this byte buffer output to
             the specified output stream argument, as if by calling the output
             stream's write method using <code>out.Write(buf, 0, count)</code>.
            
             @param      out   the output stream to which to write the data.
             @exception  IOException  if an I/O error occurs.
        </member>
        <member name="P:Spire.Pdf.Graphics.ByteBuffer.Size">
             Returns the current size of the buffer.
            
             @return the value of the <code>count</code> field, which is the number of valid bytes in this byte buffer.
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.RIGHT_ALIGN">
            <summary> this is a kind of image Element. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.LEFT_ALIGN">
            <summary> this is a kind of image Element. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.MIDDLE_ALIGN">
            <summary> this is a kind of image Element. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.TEXTWRAP">
            <summary> this is a kind of image Element. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.UNDERLYING">
            <summary> this is a kind of image Element. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.AX">
            <summary> This represents a coordinate in the transformation matrix. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.AY">
            <summary> This represents a coordinate in the transformation matrix. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.BX">
            <summary> This represents a coordinate in the transformation matrix. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.BY">
            <summary> This represents a coordinate in the transformation matrix. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.CX">
            <summary> This represents a coordinate in the transformation matrix. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.CY">
            <summary> This represents a coordinate in the transformation matrix. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.DX">
            <summary> This represents a coordinate in the transformation matrix. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.DY">
            <summary> This represents a coordinate in the transformation matrix. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.ORIGINAL_NONE">
            type of image 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.ORIGINAL_JPEG">
            type of image 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.ORIGINAL_PNG">
            type of image 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.ORIGINAL_GIF">
            type of image 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.ORIGINAL_BMP">
            type of image 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.ORIGINAL_TIFF">
            type of image 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.ORIGINAL_WMF">
            type of image 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.ORIGINAL_JPEG2000">
            type of image 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.ORIGINAL_JBIG2">
            type of image
            @since	2.1.5
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.VALID_MARKER">
            <summary> This is a type of marker. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.UNSUPPORTED_MARKER">
            <summary> This is a type of marker. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.NOPARAM_MARKER">
            <summary> This is a type of marker. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.M_APPD">
            Marker value for Photoshop IRB 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.invert">
            Image color inversion 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.type">
            <summary> The imagetype. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.alignment">
            <summary> The alignment of the Image. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.alt">
            <summary> Text that can be shown instead of the image. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.absoluteX">
            <summary> This is the absolute X-position of the image. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.absoluteY">
            <summary> This is the absolute Y-position of the image. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.plainWidth">
            <summary> This is the width of the image without rotation. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.plainHeight">
            <summary> This is the width of the image without rotation. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.scaledWidth">
            <summary> This is the scaled width of the image taking rotation into account. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.scaledHeight">
            <summary> This is the original height of the image taking rotation into account. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.compressionLevel">
            The compression level of the content streams.
            @since   2.1.3
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.rotationRadians">
            <summary> This is the rotation of the image. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.colorspace">
            <summary> this is the colorspace of a jpeg-image. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.bpc">
            <summary> this is the bits per component of the raw image. It also flags a CCITT image.</summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.transparency">
            <summary> this is the transparency information of the raw image</summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.indentationLeft">
            the indentation to the left. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.indentationRight">
            the indentation to the right. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.dpiX">
            <summary> Holds value of property dpiX. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.dpiY">
            <summary> Holds value of property dpiY. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.interpolation">
            <summary> Holds value of property interpolation. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.profile">
            <summary> ICC Profile attached </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.deflated">
            Holds value of property deflated. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.smask">
            Holds value of property smask. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.xyRatio">
            Holds value of property XYRatio. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.originalType">
            Holds value of property originalType. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.originalData">
            Holds value of property originalData. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.spacingBefore">
            The spacing before the image. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.spacingAfter">
            The spacing after the image. 
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.widthPercentage">
            Holds value of property widthPercentage.
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.initialRotation">
            Holds value of property initialRotation.
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.VALID_MARKERS">
            <summary> Acceptable Jpeg markers. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.UNSUPPORTED_MARKERS">
            <summary> Unsupported Jpeg markers. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.NOPARAM_MARKERS">
            <summary> Jpeg markers without additional parameters. </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfJpegImage.PS_8BIM_RESO">
            sequence preceding Photoshop resolution data 
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfRectangle">
            <summary>
            Represents a simple rectangle that could be drawn and/or filled.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfRectangleArea">
            <summary>
            Represents an area bound by a rectangle.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRectangleArea.X">
            <summary>
            Gets or sets the X co-ordinate of the upper-left corner of this the element.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRectangleArea.Y">
            <summary>
            Gets or sets the Y co-ordinate of the upper-left corner of this the element.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRectangleArea.Width">
            <summary>
            Gets or sets the width of this element.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRectangleArea.Height">
            <summary>
            Gets or sets the height of this element.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRectangleArea.Size">
            <summary>
            Gets or sets the size of this element.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfRectangleArea.Bounds">
            <summary>
            Gets or sets bounds of this element.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRectangle.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRectangle.#ctor(Spire.Pdf.Graphics.PdfPen,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRectangle.#ctor(Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRectangle.#ctor(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRectangle.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRectangle.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRectangle.#ctor(Spire.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRectangle.#ctor(Spire.Pdf.Graphics.PdfPen,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRectangle.#ctor(Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRectangle.#ctor(Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRectangle.#ctor(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfRectangle.#ctor(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfEllipse">
            <summary>
            Describes an ellipse shape.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfEllipse.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfEllipse.#ctor(Spire.Pdf.Graphics.PdfPen,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfEllipse.#ctor(Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfEllipse.#ctor(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfEllipse.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfEllipse.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfEllipse.#ctor(Spire.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfEllipse.#ctor(Spire.Pdf.Graphics.PdfPen,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfEllipse.#ctor(Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfEllipse.#ctor(Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfEllipse.#ctor(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfEllipse.#ctor(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfEllipse.RadiusX">
            <summary>
            Gets the radius X.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfEllipse.RadiusY">
            <summary>
            Gets the radius Y.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfEllipse.Center">
            <summary>
            Gets the center point.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfArc">
            <summary>
            Represents an arc shape.
            </summary>
            <remarks>It ignores brush setting.</remarks>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfEllipsePart">
            <summary>
            The base class of arc and pie shapes.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfEllipsePart.StartAngle">
            <summary>
            Gets or sets the start angle.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfEllipsePart.SweepAngle">
            <summary>
            Gets or sets the sweep angle.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfArc.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfArc.#ctor(Spire.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfArc.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfArc.#ctor(System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfArc.#ctor(Spire.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfArc.#ctor(Spire.Pdf.Graphics.PdfPen,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="rectangle">The rectangle.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfRadioButtonListFieldWidget">
            <summary>
            Represents radio button field of an existing PDF document`s form.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfRadioButtonListFieldWidget.WidgetWidgetItems">
            <summary>
            Gets the collection of radio button items.
            </summary>
            <value>A  that represents the items within the list.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfRadioButtonListFieldWidget.SelectedIndex">
            <summary>
            Gets or sets the index of the selected item in the list.
            </summary>
            <value>The lowest ordinal index of the selected items in the list. The default is -1, which indicates that nothing is selected. </value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfRadioButtonListFieldWidget.SelectedValue">
            <summary>
            Gets or sets the value of the first selected item in the list. 
            </summary>
            <value>A string value specifying the value of the first selected item, null (Nothing in VB.NET) if there is no selected item.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfRadioButtonListFieldWidget.SelectedItem">
            <summary>
            Gets the selected item.
            </summary>
            <value>Return the item as PdfLoadedRadioButtonItem class</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfRadioButtonListFieldWidget.Value">
            <summary>
            Gets or sets the value of specified item.
            </summary>
            <value>A string value representing the value of the item.</value>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfComboBoxWidgetWidgetItem">
            <summary>
            Represents group for combo box field.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfCheckBoxWidgetWidgetItem">
            <summary>
            Represents loaded check box item.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfPageNumber">
            <summary>
            This class allows to manipulate with page
            labels of one of the sections.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfPageNumber.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageNumber.NumberStyle">
            <summary>
            Gets or sets the numbering style.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageNumber.Prefix">
            <summary>
            Gets or sets the prefix.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageNumber.StartNumber">
            <summary>
            Gets or sets the start number.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageNumber.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.PageAddedEventHandler">
            <summary>
            Represents the  method that executes on a PdfNewDocument when a new page is created.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">A  that contains the event data.</param>
        </member>
        <member name="T:Spire.Pdf.PageAddedEventArgs">
            <summary>
            Provides data for PageAdded event.
            </summary>
            <remarks>
            This event raised on adding the pages. 
            </remarks> 
        </member>
        <member name="M:Spire.Pdf.PageAddedEventArgs.#ctor(Spire.Pdf.PdfNewPage)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="page">a  object representing the page which is added in the document.</param>
        </member>
        <member name="P:Spire.Pdf.PageAddedEventArgs.Page">
            <summary>
            Gets the newly added page.
            </summary>
            <value>a  object representing the page which is added in the document.</value>
        </member>
        <member name="M:Spire.Pdf.General.Render.Page.CreatePageBuffer(System.Single,System.Boolean)">
            <summary>
            Create Page iamge Buffer,it's eastAsianFont
            </summary>
            <param name="zoomFactor">float zoomFactor</param>
            <param name="eastAsianFont">bool eastAsianFont</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.Page.CreatePageBuffer(System.Single,System.Int32,System.Int32)">
            <summary>
            Create Page iamge Buffer
            </summary>
            <param name="zoomFactor">float zoomFactor</param>
            <param name="dpiX">int dpiX</param>
            <param name="dpiY">int dpiY</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.Page.CreateBitmap(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Create Bitmap,set width,height and dpi
            </summary>
            <param name="width">Bitmap width</param>
            <param name="height">Bitmap height </param>
            <param name="dpiX">Bitmap dpiX</param>
            <param name="dpiY">Bitmap dpiY</param>
            <returns></returns>
        </member>
        <member name="F:Spire.Pdf.General.Render.Font.OpenTypeFile.Table_name.PLATFORMID_UNICODE">
             <summary>
             Values for platformID
             </summary>
            
        </member>
        <member name="F:Spire.Pdf.General.Render.Font.OpenTypeFile.Table_name.ENCODINGID_MAC_ROMAN">
             <summary>
             Values for platformSpecificID if platform is Mac
             </summary>
            
        </member>
        <member name="F:Spire.Pdf.General.Render.Font.OpenTypeFile.Table_name.ENCODINGID_UNICODE_DEFAULT">
             <summary>
             Values for platformSpecificID if platform is Unicode
             </summary>
            
        </member>
        <member name="F:Spire.Pdf.General.Render.Font.OpenTypeFile.Table_name.LANGUAGEID_MAC_ENGLISH">
             <summary>
             Values for language ID if platform is Mac
             </summary>
            
        </member>
        <member name="F:Spire.Pdf.General.Render.Font.OpenTypeFile.Table_name.NAMEID_COPYRIGHT">
             <summary>
             Values for nameID
             </summary>
            
        </member>
        <member name="T:Spire.Pdf.General.Render.ColorSpace.LastColorCache">
            <summary>
            Provides color caching of last color
            </summary>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfSignatureAppearanceField">
            <summary>
            Represents form field with appearance custom support.
            </summary>   
        </member>
        <member name="T:Spire.Pdf.Fields.PdfSignatureStyledField">
            <summary>
            Represents form's field with style parameters.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfSignatureStyledField.#ctor(Spire.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="page">The page where the field should be placed.</param>
            <param name="name">The name.</param>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfSignatureStyledField.Bounds">
            <summary>
            Gets or sets the bounds.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfSignatureStyledField.Location">
            <summary>
            Gets or sets the location.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfSignatureStyledField.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfSignatureStyledField.BorderColor">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfSignatureStyledField.BackColor">
            <summary>
            Gets or sets the color of the background.
            </summary>
            <value>The color of the background.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfSignatureStyledField.BorderWidth">
            <summary>
            Gets or sets the width of the border.
            </summary>
            <value>The width of the border.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfSignatureStyledField.HighlightMode">
            <summary>
            Gets or sets the highlighting mode.
            </summary>
            <value>The highlighting mode.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfSignatureStyledField.Actions">
            <summary>
            Gets the actions of the field.
            </summary>
            <value>The actions.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfSignatureStyledField.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
            <value>The border style.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfSignatureStyledField.Visible">
            <summary>
            Gets or sets a value indicating whether this  is visible.
            </summary>
            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfSignatureAppearanceField.Appearance">
            <summary>
            Gets the appearance.
            </summary>
            <value>The appearance.</value>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfRadioButtonListItem">
            <summary>
            Represents an item of a radio button list.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfRadioButtonListItem.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfRadioButtonListItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfRadioButtonListItem.Form">
            <summary>
            Gets the form of the field.
            </summary>
            <value>The  object of the field.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfRadioButtonListItem.Bounds">
            <summary>
            Gets or sets the bounds.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfRadioButtonListItem.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfRadioButtonListItem.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Pdf.Implementation.Exporting.PdfToHtml.Html.HtmlCssWriter.StyleId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Spire.Pdf.Implementation.Exporting.PdfToHtml.Html.HtmlCssWriter.CssFileNumber">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Pdf.Barcode.PdfCode32Barcode">
            <summary>
            Represents a Code32 barcode.
            </summary>
            <remarks> Only the following symbols are allowed in a Code 32 barcode: 1 2 3 4 5 6 7 8 9 0. The barcode length is 9 digits (8 user defined digits + 1 check digit).
            Code 32 barcodes are also known as Italian Pharmacode barcodes. 
            </remarks>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode32Barcode.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode32Barcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The Barcode Text.</param>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DRendermode">
            <summary>
            Represents the rendering mode of the 3D artwork. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DRendermode.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DRendermode.#ctor(Spire.Pdf.Annotations.Pdf3DRenderStyle)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="style">The  object specifies the rendering style of the 3D artwork.</param>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DRendermode.Style">
            <summary>
            Gets or sets the type of the projection.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DRendermode.AuxilaryColor">
            <summary>
            Gets or sets the Auxiliary color.
            </summary> 
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DRendermode.FaceColor">
            <summary>
            Gets or sets the Face color.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DRendermode.CreaseValue">
            <summary>
            Gets or sets the crease value. 
            <remarks>The crease value is specified in degrees, from 0 to 360.</remarks>
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DRendermode.Opacity">
            <summary>
            Gets or sets the rendering opacity. 
            </summary>
            <remarks>The opacity is given in percents, 100 is full opacity, 0 is no opacity.</remarks>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DRendermode.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfSubmitAction">
            <summary>
            Represents Pdf form's submit action.
            </summary>
            <remarks>This type of action allows a user to go to a resource on the Internet, tipically a hypertext link. </remarks>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfFormAction">
            <summary>
            Represents the form action base class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfFormAction.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfFormAction.Include">
            <summary>
            Gets or sets a value indicating whether fields contained in  
            collection will be included for resetting or submitting.
            </summary>
            <remarks>
            If Include property is true, only the fields in this collection will be reset or submitted.
            If Include property is false, the fields in this collection are not reset or submitted 
            and only the remaining form fields are reset or submitted.
            If the collection is null or empty, then all the form fields are reset 
            and the Include property is ignored.
            </remarks>
            <value><c>true</c> if include; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfFormAction.Fields">
            <summary>
            Gets the fields.
            </summary>
            <value>The fields.</value>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfSubmitAction.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="url">The URL.</param>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfSubmitAction.Url">
            <value>An string value specifying the full URI for the internet resource. </value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfSubmitAction.HttpMethod">
            <summary>
            Gets or sets the HTTP method.
            </summary>
            <value>The HTTP method.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfSubmitAction.CanonicalDateTimeFormat">
            <summary>
            If set, any submitted field values representing dates are converted to the 
            standard format. The interpretation of a form field as a date is not specified 
            explicitly in the field itself but only in the JavaScript code that processes it.
            </summary>
            <value>
            <c>true</c> if use canonical date time format when submit data; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfSubmitAction.SubmitCoordinates">
            <summary>
            Gets or sets a value indicating whether to submit mouse pointer coordinates. If set, 
            the coordinates of the mouse click that caused the submit-form action are transmitted 
            as part of the form data. 
            </summary>
            <value><c>true</c> if submit coordinates; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfSubmitAction.IncludeNoValueFields">
            <summary>
            Gets or sets a value indicating whether to submit fields without value.
            If set, all fields designated by the Fields collection and the 
            flag are submitted, regardless of whether they have a value. For fields without a 
            value, only the field name is transmitted.
            </summary>
            <value>
            <c>true</c> if submit fields without value or the empty ones; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfSubmitAction.IncludeIncrementalUpdates">
            <summary>
            Gets or sets a value indicating whether to submit form's incremental updates.
            Meaningful only when the form is being submitted in Forms Data Format.
            If set, the submitted FDF file includes the contents of all incremental 
            updates to the underlying PDF document. If clear, the incremental updates are 
            not included.
            </summary>
            <value>
            <c>true</c> if incremental updates should be submitted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfSubmitAction.IncludeAnnotations">
            <summary>
            Gets or sets a value indicating whether to submit annotations.
            Meaningful only when the form is being submitted in Forms Data Format.
            If set, the submitted FDF file includes all markup annotations in the 
            underlying PDF document. If clear, markup annotations are not included.
            </summary>
            <value><c>true</c> if annotations should be submitted; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfSubmitAction.ExcludeNonUserAnnotations">
            <summary>
            Gets or sets a value indicating whether to exclude non user annotations form submit 
            data stream. Meaningful only when the form is being submitted in Forms Data Format 
            and the  property is set to true.
            </summary>
            <value>
            <c>true</c> if non user annotations should be excluded; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfSubmitAction.EmbedForm">
            <summary>
            Gets or sets a value indicating whether to include form to submit data stream.
            Meaningful only when the form is being submitted in Forms Data Format.
            If set, the  property is a file name containing an embedded file 
            stream representing the PDF file from which the FDF is being submitted.
            </summary>
            <value><c>true</c> if form should be embedded to submit stream; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfSubmitAction.DataFormat">
            <summary>
            Gets or sets the submit data format.
            </summary>
            <value>The submit data format.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfSubmitAction.Include">
            <summary>
            Gets or sets a value indicating whether fields contained in Fields
            collection will be included for submitting.
            </summary>
            <value><c>true</c> if include; otherwise, <c>false</c>.</value>
            <remarks>
            If Include property is true, only the fields in this collection will be submitted.
            If Include property is false, the fields in this collection are not submitted
            and only the remaining form fields are submitted.
            If the collection is null or empty, then all the form fields are reset
            and the Include property is ignored.
            If the field has Export property set to false it will be not included for 
            submitting in any case.
            </remarks>
        </member>
        <member name="P:Spire.Pdf.PdfBorders.Left">
            <summary>
            Gets or sets the left.
            </summary>
            <value>The left.</value>
        </member>
        <member name="P:Spire.Pdf.PdfBorders.Right">
            <summary>
            Gets or sets the right.
            </summary>
            <value>The right.</value>
        </member>
        <member name="P:Spire.Pdf.PdfBorders.Top">
            <summary>
            Gets or sets the top.
            </summary>
            <value>The top.</value>
        </member>
        <member name="P:Spire.Pdf.PdfBorders.Bottom">
            <summary>
            Gets or sets the bottom.
            </summary>
            <value>The bottom.</value>
        </member>
        <member name="P:Spire.Pdf.PdfBorders.All">
            <summary>
            Sets all.
            </summary>
            <value>All.</value>
        </member>
        <member name="P:Spire.Pdf.PdfBorders.Default">
            <summary>
            Gets the default.
            </summary>
            <value>The default.</value>
        </member>
        <member name="M:Spire.Pdf.PdfEdges.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfEdges.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <param name="top">The top.</param>
            <param name="bottom">The bottom.</param>
        </member>
        <member name="P:Spire.Pdf.PdfEdges.Left">
            <summary>
            Gets or sets the left.
            </summary>
            <value>The left.</value>
        </member>
        <member name="P:Spire.Pdf.PdfEdges.Right">
            <summary>
            Gets or sets the right.
            </summary>
            <value>The right.</value>
        </member>
        <member name="P:Spire.Pdf.PdfEdges.Top">
            <summary>
            Gets or sets the top.
            </summary>
            <value>The top.</value>
        </member>
        <member name="P:Spire.Pdf.PdfEdges.Bottom">
            <summary>
            Gets or sets the bottom.
            </summary>
            <value>The bottom.</value>
        </member>
        <member name="P:Spire.Pdf.PdfEdges.All">
            <summary>
            Sets all.
            </summary>
            <value>All.</value>
        </member>
        <member name="M:Spire.Pdf.PdfPaddings.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfPaddings.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <param name="top">The top.</param>
            <param name="bottom">The bottom.</param>
        </member>
        <member name="P:Spire.Pdf.PdfPaddings.Left">
            <summary>
            Gets or sets the left.
            </summary>
            <value>The left.</value>
        </member>
        <member name="P:Spire.Pdf.PdfPaddings.Right">
            <summary>
            Gets or sets the right.
            </summary>
            <value>The right.</value>
        </member>
        <member name="P:Spire.Pdf.PdfPaddings.Top">
            <summary>
            Gets or sets the top.
            </summary>
            <value>The top.</value>
        </member>
        <member name="P:Spire.Pdf.PdfPaddings.Bottom">
            <summary>
            Gets or sets the bottom.
            </summary>
            <value>The bottom.</value>
        </member>
        <member name="P:Spire.Pdf.PdfPaddings.All">
            <summary>
            Sets all.
            </summary>
            <value>All.</value>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfPolygon">
            <summary>
            Represents a set of points connected with lines, could be drawn and filled.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPolygon.#ctor(System.Drawing.PointF[])">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="points">The points.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPolygon.#ctor(Spire.Pdf.Graphics.PdfPen,System.Drawing.PointF[])">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="points">The points.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPolygon.#ctor(Spire.Pdf.Graphics.PdfBrush,System.Drawing.PointF[])">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="points">The points.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPolygon.#ctor(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Drawing.PointF[])">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="points">The points.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPolygon.AddPoint(System.Drawing.PointF)">
            <summary>
            Adds a point to the polygon.
            </summary>
            <param name="point">The last point of the polygon.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPolygon.Points">
            <summary>
            Gets or sets the points of the polygon.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPolygon.Count">
            <summary>
            Gets a number of the points in the polygon.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfMargins">
            <summary>
            A class representing page margins.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfMargins.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfMargins.#ctor(System.Single)">
            <summary>
            Create and initialize margin.
            </summary>
            <param name="margin">The margin size.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfMargins.#ctor(System.Single,System.Single)">
            <summary>
            Create and initialize margin.
            </summary>
            <param name="leftRight">The left right.</param>
            <param name="topBottom">The top bottom.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfMargins.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Create and initialize margin.
            </summary>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="right">The right.</param>
            <param name="bottom">The bottom.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfMargins.Clone">
            <summary>
            Clones the object.
            </summary>
            <returns>The cloned object.</returns>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfMargins.Left">
            <summary>
            Gets or sets the left margin size.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfMargins.Top">
            <summary>
            Gets or sets the top margin size.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfMargins.Right">
            <summary>
            Gets or sets the right margin size.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfMargins.Bottom">
            <summary>
            Gets or sets the bottom margin size.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfMargins.All">
            <summary>
            Sets margin of each side.
            </summary>
            <value>Margin of each side.</value>
        </member>
        <member name="T:Spire.Pdf.PdfNewDocument">
            <summary>
            Represents a logic to create Pdf document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfNewDocument.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>        
        </member>
        <member name="M:Spire.Pdf.PdfNewDocument.#ctor(Spire.Pdf.PdfConformanceLevel)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="conformance">The conformance level.</param>
            <remarks>Not Supported under Medium Trust environment.</remarks>        
        </member>
        <member name="M:Spire.Pdf.PdfNewDocument.SetConformanceValue(Spire.Pdf.PdfConformanceLevel)">
            <summary>
            set conformance value.
            </summary>
            <param name="conformance">The Conformance level.</param>
        </member>
        <member name="M:Spire.Pdf.PdfNewDocument.Save(System.IO.Stream)">
            <summary>
            Saves the document to the specified stream.
            </summary>
            <param name="stream">The stream object where PDF document will be saved.</param>    
        </member>
        <member name="M:Spire.Pdf.PdfNewDocument.Close(System.Boolean)">
            <summary>
            Closes the document.
            </summary>
            <param name="completely">if set to <c>true</c> the document should be disposed completely.</param>
            <remarks>The document is disposed after calling the Close method. So, the document can not be saved if Close method was invoked.</remarks>
        </member>
        <member name="M:Spire.Pdf.PdfNewDocument.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <value>A new object that is a copy of this instance.</value>        
            <remarks>The resulting clone must be of the same type as or a compatible type to the original instance.</remarks>
        </member>
        <member name="E:Spire.Pdf.PdfNewDocument.SaveProgress">
            <summary>
            Occurs when the document is being saved.
            </summary>
            <remarks>
            This event raised on saving the document. It will keep track of the save progress of the document.
            </remarks> 
        </member>
        <member name="P:Spire.Pdf.PdfNewDocument.Bookmarks">
            <summary>
            Gets the root of the bookmark tree in the document.
            </summary>
            <value>A  object specifying the document's bookmarks. </value>
            <remarks>Creates an bookmark root instance
            if it's called for first time.</remarks>
        </member>
        <member name="P:Spire.Pdf.PdfNewDocument.Attachments">
            <summary>
            Gets the attachments of the document.
            </summary>
            <value>The  object contains list of files which are attached in the PDF document.</value>
        </member>
        <member name="P:Spire.Pdf.PdfNewDocument.Form">
            <summary>
            Gets the interactive form of the document.
            </summary>
            <value>The  object contains the list of form elements of the document.</value>
        </member>
        <member name="P:Spire.Pdf.PdfNewDocument.ColorSpace">
            <summary>
            Gets or sets the color space of the document.
            </summary>
            <remarks>This property has impact on the new created pages only.
            If a page was created it remains its colour space obliviously
            to this property changes.</remarks>
            <value>The  of the document.</value>
        </member>
        <member name="P:Spire.Pdf.PdfNewDocument.Conformance">
            <summary>
            Gets or Sets the Pdf Conformance level.
            Supported : PDF/A-1b - Level B compliance in Part 1
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfNewDocument.ProgressEventHandler">
            <summary>
            Delegate for the  event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="arguments">The arguments.</param>
        </member>
        <member name="T:Spire.Pdf.ProgressEventArgs">
            <summary>
            Shows the saving progress.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ProgressEventArgs.Total">
            <summary>
            Gets the total number of the elements (pages) that need to be saved.
            </summary>     
        </member>
        <member name="P:Spire.Pdf.ProgressEventArgs.Current">
            <summary>
            Gets the current element (page) index that just was saved.
            </summary>
            <remarks>The index value increases constantly from 0 to Total.</remarks>
        </member>
        <member name="P:Spire.Pdf.ProgressEventArgs.Progress">
            <summary>
            Gets the progress.
            </summary>
            <remarks>Progress constantly increases from 0.0 to 1.0.
            1.0 value means that entire document has been saved.</remarks>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfListWidgetItemCollection">
            <summary>
            Represents a collection of list box field items.
            </summary>   
        </member>
        <member name="M:Spire.Pdf.Widget.PdfListWidgetItemCollection.Add(Spire.Pdf.Widget.PdfListWidgetItem)">
            <summary>
            Inserts an item at the end of the collection. 
            </summary>
            <param name="widgetItem">a object to be added to collection.</param>
            <returns>The index of item.</returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfListWidgetItemCollection.Insert(System.Int32,Spire.Pdf.Widget.PdfListWidgetItem)">
            <summary>
            Inserts the list item at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="widgetItem">The item.</param>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfListWidgetItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index.
            </summary>
            <param name="index">The index.</param>
            <remarks>Throws IndexOutOfRange exception if the index is out of bounds.</remarks>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfListWidgetItemCollection.Clear">
            <summary>
            Clears the item collection.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfListWidgetItemCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.TtfReader.CheckFontTable(System.String)">
            <summary>
            Check table name does not exist
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfTextWidget">
            <summary>
            Represents the text area with the ability to span several pages.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTextWidget.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTextWidget.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTextWidget.#ctor(System.String,Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTextWidget.#ctor(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTextWidget.#ctor(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTextWidget.#ctor(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,Spire.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="format">The format.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTextWidget.Draw(Spire.Pdf.PdfNewPage,System.Drawing.PointF,Spire.Pdf.Graphics.PdfTextLayout)">
            <summary>
            Draws the text on the page.
            </summary>
            <param name="page">Current page where the text should be drawn.</param>
            <param name="location">Start location on the page.</param>
            <param name="format">Lay outing format.</param>
            <returns>Lay outing result.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTextWidget.Draw(Spire.Pdf.PdfNewPage,System.Drawing.PointF,System.Single,Spire.Pdf.Graphics.PdfTextLayout)">
            <summary>
            Draws the text on the page.
            </summary>
            <param name="page">Current page where the text should be drawn.</param>
            <param name="location">Start location on the page.</param>
            <param name="width">Width of the text bounds.</param>
            <param name="format">Lay outing format.</param>
            <returns>Lay outing result.</returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTextWidget.Draw(Spire.Pdf.PdfNewPage,System.Drawing.RectangleF,Spire.Pdf.Graphics.PdfTextLayout)">
            <summary>
            Draws the text on the page.
            </summary>
            <param name="page">Current page where the text should be drawn.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the text.</param>
            <param name="format">Lay outing format.</param>
            <returns>Lay outing result.</returns>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfTextWidget.Text">
            <summary>
            Gets or sets a value indicating the text that should be printed.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfTextWidget.Pen">
            <summary>
            Gets or sets a pen that will be used to draw the text.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfTextWidget.Brush">
            <summary>
            Gets or sets the brush that will be used to draw the text.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfTextWidget.Font">
            <summary>
            Gets or sets a font that will be used to draw the text.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfTextWidget.StringFormat">
            <summary>
            Gets or sets text settings that will be used to draw the text.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfBrushes">
            <summary>
            Represents the collection of immutable default brushes.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.AliceBlue">
            <summary>
            Gets the AliceBlue brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.AntiqueWhite">
            <summary>
            Gets the antique white brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Aqua">
            <summary>
            Gets the Aqua default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Aquamarine">
            <summary>
            Gets the Aquamarine default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Azure">
            <summary>
            Gets the Azure default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Beige">
            <summary>
            Gets the Beige default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Bisque">
            <summary>
            Gets the Bisque default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Black">
            <summary>
            Gets the Black default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.BlanchedAlmond">
            <summary>
            Gets the BlanchedAlmond default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Blue">
            <summary>
            Gets the Blue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.BlueViolet">
            <summary>
            Gets the BlueViolet default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Brown">
            <summary>
            Gets the Brown default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.BurlyWood">
            <summary>
            Gets the BurlyWood default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.CadetBlue">
            <summary>
            Gets the CadetBlue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Chartreuse">
            <summary>
            Gets the Chartreuse default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Chocolate">
            <summary>
            Gets the Chocolate default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Coral">
            <summary>
            Gets the Coral default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.CornflowerBlue">
            <summary>
            Gets the CornflowerBlue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Cornsilk">
            <summary>
            Gets the Corn silk default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Crimson">
            <summary>
            Gets the Crimson default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Cyan">
            <summary>
            Gets the Cyan default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DarkBlue">
            <summary>
            Gets the DarkBlue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DarkCyan">
            <summary>
            Gets the DarkCyan default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DarkGoldenrod">
            <summary>
            Gets the DarkGoldenrod default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DarkGray">
            <summary>
            Gets the DarkGray default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DarkGreen">
            <summary>
            Gets the DarkGreen default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DarkKhaki">
            <summary>
            Gets the DarkKhaki default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DarkMagenta">
            <summary>
            Gets the DarkMagenta default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DarkOliveGreen">
            <summary>
            Gets the DarkOliveGreen default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DarkOrange">
            <summary>
            Gets the DarkOrange default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DarkOrchid">
            <summary>
            Gets the DarkOrchid default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DarkRed">
            <summary>
            Gets the DarkRed default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DarkSalmon">
            <summary>
            Gets the DarkSalmon default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DarkSeaGreen">
            <summary>
            Gets the DarkSeaGreen default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DarkSlateBlue">
            <summary>
            Gets the DarkSlateBlue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DarkSlateGray">
            <summary>
            Gets the DarkSlateGray default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DarkTurquoise">
            <summary>
            Gets the DarkTurquoise default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DarkViolet">
            <summary>
            Gets the DarkViolet default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DeepPink">
            <summary>
            Gets the DeepPink default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DeepSkyBlue">
            <summary>
            Gets the DeepSkyBlue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DimGray">
            <summary>
            Gets the DimGray default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.DodgerBlue">
            <summary>
            Gets the DodgerBlue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Firebrick">
            <summary>
            Gets the Firebrick default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.FloralWhite">
            <summary>
            Gets the FloralWhite default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.ForestGreen">
            <summary>
            Gets the ForestGreen default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Fuchsia">
            <summary>
            Gets the Fuchsia default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Gainsboro">
            <summary>
            Gets the Gainsborough default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.GhostWhite">
            <summary>
            Gets the GhostWhite default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Gold">
            <summary>
            Gets the Gold default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Goldenrod">
            <summary>
            Gets the Goldenrod default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Gray">
            <summary>
            Gets the Gray default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Green">
            <summary>
            Gets the Green default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.GreenYellow">
            <summary>
            Gets the GreenYellow default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Honeydew">
            <summary>
            Gets the Honeydew default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.HotPink">
            <summary>
            Gets the HotPink default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.IndianRed">
            <summary>
            Gets the IndianRed default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Indigo">
            <summary>
            Gets the Indigo default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Ivory">
            <summary>
            Gets the Ivory default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Khaki">
            <summary>
            Gets the Khaki default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Lavender">
            <summary>
            Gets the Lavender default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.LavenderBlush">
            <summary>
            Gets the LavenderBlush default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.LawnGreen">
            <summary>
            Gets the LawnGreen default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.LemonChiffon">
            <summary>
            Gets the LemonChiffon default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.LightBlue">
            <summary>
            Gets the LightBlue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.LightCoral">
            <summary>
            Gets the LightCoral default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.LightCyan">
            <summary>
            Gets the LightCyan default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.LightGoldenrodYellow">
            <summary>
            Gets the LightGoldenrodYellow default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.LightGray">
            <summary>
            Gets the LightGray default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.LightGreen">
            <summary>
            Gets the LightGreen default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.LightPink">
            <summary>
            Gets the LightPink default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.LightSalmon">
            <summary>
            Gets the LightSalmon default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.LightSeaGreen">
            <summary>
            Gets the LightSeaGreen default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.LightSkyBlue">
            <summary>
            Gets the LightSkyBlue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.LightSlateGray">
            <summary>
            Gets the LightSlateGray default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.LightSteelBlue">
            <summary>
            Gets the LightSteelBlue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.LightYellow">
            <summary>
            Gets the LightYellow default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Lime">
            <summary>
            Gets the Lime default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.LimeGreen">
            <summary>
            Gets the LimeGreen default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Linen">
            <summary>
            Gets the Linen default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Magenta">
            <summary>
            Gets the Magenta default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Maroon">
            <summary>
            Gets the Maroon default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.MediumAquamarine">
            <summary>
            Gets the MediumAquamarine default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.MediumBlue">
            <summary>
            Gets the MediumBlue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.MediumOrchid">
            <summary>
            Gets the MediumOrchid default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.MediumPurple">
            <summary>
            Gets the MediumPurple default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.MediumSeaGreen">
            <summary>
            Gets the MediumSeaGreen default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.MediumSlateBlue">
            <summary>
            Gets the MediumSlateBlue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.MediumSpringGreen">
            <summary>
            Gets the MediumSpringGreen default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.MediumTurquoise">
            <summary>
            Gets the MediumTurquoise default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.MediumVioletRed">
            <summary>
            Gets the MediumVioletRed default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.MidnightBlue">
            <summary>
            Gets the MidnightBlue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.MintCream">
            <summary>
            Gets the MintCream default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.MistyRose">
            <summary>
            Gets the MistyRose default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Moccasin">
            <summary>
            Gets the Moccasin default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.NavajoWhite">
            <summary>
            Gets the NavajoWhite default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Navy">
            <summary>
            Gets the Navy default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.OldLace">
            <summary>
            Gets the OldLace default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Olive">
            <summary>
            Gets the Olive default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.OliveDrab">
            <summary>
            Gets the OliveDrab default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Orange">
            <summary>
            Gets the Orange default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.OrangeRed">
            <summary>
            Gets the OrangeRed default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Orchid">
            <summary>
            Gets the Orchid default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.PaleGoldenrod">
            <summary>
            Gets the PaleGoldenrod default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.PaleGreen">
            <summary>
            Gets the PaleGreen default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.PaleTurquoise">
            <summary>
            Gets the PaleTurquoise default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.PaleVioletRed">
            <summary>
            Gets the PaleVioletRed default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.PapayaWhip">
            <summary>
            Gets the PapayaWhip default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.PeachPuff">
            <summary>
            Gets the PeachPuff default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Peru">
            <summary>
            Gets the Peru default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Pink">
            <summary>
            Gets the Pink default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Plum">
            <summary>
            Gets the Plum default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.PowderBlue">
            <summary>
            Gets the PowderBlue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Purple">
            <summary>
            Gets the Purple default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Red">
            <summary>
            Gets the Red default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.RosyBrown">
            <summary>
            Gets the RosyBrown default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.RoyalBlue">
            <summary>
            Gets the RoyalBlue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.SaddleBrown">
            <summary>
            Gets the SaddleBrown default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Salmon">
            <summary>
            Gets the Salmon default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.SandyBrown">
            <summary>
            Gets the SandyBrown default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.SeaGreen">
            <summary>
            Gets the SeaGreen default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.SeaShell">
            <summary>
            Gets the SeaShell default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Sienna">
            <summary>
            Gets the Sienna default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Silver">
            <summary>
            Gets the Silver default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.SkyBlue">
            <summary>
            Gets the SkyBlue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.SlateBlue">
            <summary>
            Gets the SlateBlue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.SlateGray">
            <summary>
            Gets the SlateGray default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Snow">
            <summary>
            Gets the Snow default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.SpringGreen">
            <summary>
            Gets the SpringGreen default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.SteelBlue">
            <summary>
            Gets the SteelBlue default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Tan">
            <summary>
            Gets the Tan default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Teal">
            <summary>
            Gets the Teal default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Thistle">
            <summary>
            Gets the Thistle default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Tomato">
            <summary>
            Gets the Tomato default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Transparent">
            <summary>
            Gets the Transparent default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Turquoise">
            <summary>
            Gets the Turquoise default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Violet">
            <summary>
            Gets the Violet default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Wheat">
            <summary>
            Gets the Wheat default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.White">
            <summary>
            Gets the White default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.WhiteSmoke">
            <summary>
            Gets the WhiteSmoke default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.Yellow">
            <summary>
            Gets the Yellow default brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBrushes.YellowGreen">
            <summary>
            Gets the YellowGreen default brush.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Font.TTF.TTFFontParser.ParseImpl">
            <summary>
            Parse for font
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Font.TTF.TTFFontParser.ParseImpl(Spire.Pdf.General.Paper.Font.TTF.Internals.Parsing.TTFFileReader)">
            <summary>
            Parse for fontReader
            </summary>
            <param name="fontReader"></param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Font.TTF.TTFFontParser.ParseringImpl(Spire.Pdf.General.Paper.Font.TTF.Internals.Parsing.TTFFileReader)">
            <summary>
             Parse for font
            </summary>
            <param name="ttfReader"></param>
        </member>
        <member name="T:Spire.Pdf.Widget.XFAForm">
            <summary>
            Represents XML Forms Architecture (XFA).
            </summary>
        </member>
        <member name="M:Spire.Pdf.Widget.XFAForm.GetTemplate(System.String)">
            <summary>
            Returns XML node of field tempalte. 
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.XFAForm.XmlTemplate">
            <summary>
            XFA Template.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.XFAForm.XmlDatasets">
            <summary>
            XFA Datasets.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.XFAForm.XmlConfig">
            <summary>
            XFA Config.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.XFAForm.XmlDataPackage">
            <summary>
            XML Data Package
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.XFAForm.Item(System.String)">
            <summary>
            Gets of sets data node value.deprecated to use,instead use xfaField to set field value.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Implementation.Exporting.PdfToHtml.Html.HtmlUtils.GetSaveFileRelativePath(System.String)">
            <summary>
            Save file  Relative Path
            </summary>
            <param name="filepath"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Implementation.Exporting.PdfToHtml.Html.HtmlUtils.GetHtmlSaveFilesFolder(System.String)">
            <summary>
            Save file folder
            </summary>
            <param name="filepath"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.AutomaticFields.PdfSectionNumberField">
            <summary>
            Represents automatic field to display
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfSectionNumberField.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfSectionNumberField.#ctor(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfSectionNumberField.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfSectionNumberField.#ctor(Spire.Pdf.Graphics.PdfFontBase,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="T:Spire.Pdf.AutomaticFields.PdfCompositeField">
            <summary>
            Represents class which can concatenate multiple automatic fields into single string.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfCompositeField.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>  
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfCompositeField.#ctor(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">A object that specifies the font attributes (the family name, the size, and the style of the font) to use. </param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfCompositeField.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfCompositeField.#ctor(Spire.Pdf.Graphics.PdfFontBase,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">A  object that specifies the font attributes (the family name, the size, and the style of the font) to use. </param>
            <param name="text">The wide-character string to be drawn.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfCompositeField.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">A  object that specifies the font attributes (the family name, the size, and the style of the font) to use. </param>
            <param name="text">The wide-character string to be drawn.</param>
            <param name="brush">A  object that is used to fill the string. </param> 
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfCompositeField.#ctor(System.String,Spire.Pdf.AutomaticFields.PdfAutomaticField[])">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The wide-character string to be drawn.</param>
            <param name="list">The list of  objects.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfCompositeField.#ctor(Spire.Pdf.Graphics.PdfFontBase,System.String,Spire.Pdf.AutomaticFields.PdfAutomaticField[])">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">A  object that specifies the font attributes (the family name, the size, and the style of the font) to use.</param>
            <param name="text">The wide-character string to be drawn.</param>
            <param name="list">The list of  objects.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfCompositeField.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush,System.String,Spire.Pdf.AutomaticFields.PdfAutomaticField[])">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">A  object that specifies the font attributes (the family name, the size, and the style of the font) to use.</param>
            <param name="brush">A  object that is used to fill the string. </param>
            <param name="text">The wide-character string to be drawn.</param>
            <param name="list">The list of  objects.</param>
        </member>
        <member name="P:Spire.Pdf.AutomaticFields.PdfCompositeField.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The wide-character string to be drawn.</value>
        </member>
        <member name="P:Spire.Pdf.AutomaticFields.PdfCompositeField.AutomaticFields">
            <summary>
            Gets or sets the automatic fields.
            </summary>
            <value>The automatic fields.</value>
        </member>
        <member name="T:Spire.Pdf.ColorSpace.PdfICCColor">
            <summary>
            Represents an ICC color, based on an ICC colorspace.
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfICCColor.#ctor(Spire.Pdf.ColorSpace.PdfColorSpaces)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="colorspace">The colorspace.</param>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfICCColor.ColorComponents">
            <summary>
            Gets or sets the color components. 
            </summary>
            <value>An array of values that describe the color in the ICC colorspace. </value>
            <remarks>The length of this array must match the value of ColorComponents property on the underlying ICC colorspace. </remarks>
        </member>
        <member name="T:Spire.Pdf.Barcode.PdfCode93ExtendedBarcode">
            <summary>
            Represents a code93 extended barcode.
            </summary>
            <remarks> All 128 ASCII characters can be encoded in an extended Code 93 barcode. </remarks>
        </member>
        <member name="T:Spire.Pdf.Barcode.PdfCode93Barcode">
            <summary>
            Represents a Code93 barcode.
            </summary>
            <remarks> Only the following symbols are allowed in a Code 93 barcode: 1 2 3 4 5 6 7 8 9 0 A B C D E F G H I J K L M N O P Q R S T U V W X Y Z - . $ / + % SPACE
            All alphabetic characters are uppercase. If lowercase characters are required, then a Code 93 Extended barcode must be used.
            </remarks>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode93Barcode.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode93Barcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The Barcode text.</param>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode93ExtendedBarcode.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode93ExtendedBarcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The Barcode text.</param>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.DiscardControl">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.DiscardControl.Discard">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.Discard">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Discard.SentinelPage">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Discard.Target">
            <remarks/>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridCell.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridCell.#ctor(Spire.Pdf.Grid.PdfGridRow)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="row">The row.</param>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridCell.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridCell.Height">
            <summary>
            Gets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridCell.RowSpan">
            <summary>
            Gets or sets the row span.
            </summary>
            <value>The row span.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridCell.ColumnSpan">
            <summary>
            Gets or sets the column span.
            </summary>
            <value>The column span.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridCell.Style">
            <summary>
            Gets or sets the cell style.
            </summary>
            <value>The cell style.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridCell.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridCell.StringFormat">
            <summary>
            Gets or sets the string format.
            </summary>
            <value>The string format.</value>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridCellCollection.IndexOf(Spire.Pdf.Grid.PdfGridCell)">
            <summary>
            Returns the index of a particular cell in the collection.
            </summary>
            <param name="cell">The cell.</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Spire.Pdf.Grid.PdfGridCellCollection.GetEnumerator" -->
        <member name="P:Spire.Pdf.Grid.PdfGridCellCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridCellCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridCellCollection.PdfGridCellEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridCellCollection.PdfGridCellEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridCellCollection.PdfGridCellEnumerator.Current">
            <summary>
            Gets the current.
            </summary>
            <value>The current.</value>
        </member>
        <member name="T:Spire.Pdf.General.PdfEmbeddedFileSpecification">
            <summary>
            Represents specification of embedded file.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.PdfEmbeddedFileSpecification.#ctor(System.String)">
            <param name="fileName">file name</param>
        </member>
        <member name="M:Spire.Pdf.General.PdfEmbeddedFileSpecification.#ctor(System.String,System.Byte[])">
            <param name="fileName">Name of the file.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:Spire.Pdf.General.PdfEmbeddedFileSpecification.#ctor(System.String,System.IO.Stream)">
            <param name="fileName">Name of the file.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="P:Spire.Pdf.General.PdfEmbeddedFileSpecification.FileName">
            <value></value>
        </member>
        <member name="P:Spire.Pdf.General.PdfEmbeddedFileSpecification.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="P:Spire.Pdf.General.PdfEmbeddedFileSpecification.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Spire.Pdf.General.PdfEmbeddedFileSpecification.MimeType">
            <summary>
            Gets or sets the MIME type of the embedded file.
            </summary>
            <value>The MIME type of the embedded file.</value>
        </member>
        <member name="P:Spire.Pdf.General.PdfEmbeddedFileSpecification.CreationDate">
            <summary>
            Gets or sets creation date.
            </summary>
            <value>Creation date.</value>
        </member>
        <member name="P:Spire.Pdf.General.PdfEmbeddedFileSpecification.ModificationDate">
            <summary>
            Gets or sets modification date.
            </summary>
            <value>Modification date.</value>
        </member>
        <member name="T:Spire.Pdf.PdfViewerPreferences">
            <summary>
            Defines the way the document is to be presented on the screen or in print.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfViewerPreferences.SetBookMarkExpandOrCollapse(Spire.Pdf.Primitives.PdfDictionary,System.Boolean)">
            <summary>
            Set Expand or Collapse
            </summary>
            <param name="dictionary"></param>
            <param name="open"></param>
        </member>
        <member name="M:Spire.Pdf.PdfViewerPreferences.FineNodeTree(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.Primitives.PdfName)">
            <summary>
            Find Node Tree
            </summary>
            <param name="dicNodeTree"></param>
            <param name="keyName"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.PdfViewerPreferences.ForeachTree(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.Primitives.PdfName,Spire.Pdf.Primitives.PdfName,System.Boolean)">
            <summary>
            iterates Bookmark,Set Expand or Collapse
            </summary>
            <param name="dictionary"></param>
            <param name="firstName"></param>
            <param name="lastName"></param>
            <param name="open"></param>
        </member>
        <member name="M:Spire.Pdf.PdfViewerPreferences.FindFloorNode(Spire.Pdf.Primitives.PdfDictionary,Spire.Pdf.Primitives.PdfName,Spire.Pdf.Primitives.PdfName)">
            <summary>
            Find the buttom Node
            </summary>
            <param name="dictionary"></param>
            <param name="firstName"></param>
            <param name="lastName"></param>
            <returns></returns>
        </member>
        <member name="P:Spire.Pdf.PdfViewerPreferences.CenterWindow">
            <summary>
            A flag specifying whether to position the documents window in the center of the screen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfViewerPreferences.BookMarkExpandOrCollapse">
            <summary>
            Set Expand or Collapse
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfViewerPreferences.DisplayTitle">
            <summary>
            A flag specifying whether the windows title bar should display the document title taken 
            from the Title entry of the document information dictionary. If false, the title bar 
            should instead display the name of the Pdf file containing the document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfViewerPreferences.FitWindow">
            <summary>
            A flag specifying whether to resize the documents window to fit the size of the first 
            displayed page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfViewerPreferences.HideMenubar">
            <summary>
            A flag specifying whether to hide the viewer applications menu bar when the 
            document is active.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfViewerPreferences.HideToolbar">
            <summary>
            A flag specifying whether to hide the viewer applications tool bars when the document is active.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfViewerPreferences.HideWindowUI">
            <summary>
            A flag specifying whether to hide user interface elements in the documents window 
            (such as scroll bars and navigation controls), leaving only the documents contents displayed.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfViewerPreferences.PageMode">
            <summary>
            A name object specifying how the document should be displayed when opened.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfViewerPreferences.PageLayout">
            <summary>
            A name object specifying the page layout to be used when the document is opened.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfViewerPreferences.PrintScaling">
            <summary>
            Gets or Set the page scaling option to be selected 
            when a print dialog is displayed for this document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfViewerPreferences.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfListBoxWidgetFieldWidget">
            <summary>
            Represents loaded list box field.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfListBoxWidgetFieldWidget.MultiSelect">
            <summary>
            Gets or sets a value indicating whether the field is multiselectable..
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfListBoxWidgetFieldWidget.Items">
            <summary>
            Gets the items.
            </summary>
            <value>The collection of list box items.</value>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfFormFieldWidgetCollection">
            <summary>
            Represents field collection of loaded form.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFormFieldWidgetCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFormFieldWidgetCollection.Item(System.String)">
            <summary>
            Returns field with specified name.
            </summary>
            <param name="name">The specified field name.</param>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFormFieldWidgetCollection.FormWidget">
            <summary>
            Gets or sets the form.
            </summary>      
        </member>
        <member name="P:Spire.Pdf.Widget.PdfFormFieldWidgetCollection.FieldNames">
            <summary>
            Field Signature Names
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfWebLinkAnnotationWidget">
            <summary>
            Represents the loaded web link annotation class.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfUriAnnotationWidget">
            <summary>
            Represents the loaded unique resource identifier annotation class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfUriAnnotationWidget.Uri">
            <summary>
            Gets or sets the unique resource identifier text of the annotation.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfBlend">
            <summary>
            Implements blend brush setting and functions.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfBlendBase">
            <summary>
            Represents the base class for PdfBlend and PdfColorBlend classes.
            Implements basic routines needed by both classes.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBlendBase.Positions">
            <summary>
            Gets or sets the positions array.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfBlend.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfBlend.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="count">The number of elements in the Factors and Positions arrays.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBlend.Factors">
            <summary>
            Gets or sets the factors array.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Render.ViewLayer.IPresenter.TextureBrush">
            <summary>
            used in pdf2xps when it has pattern
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Render.ColorSpace.ColorCache">
            <summary>
            Provides color caching
            </summary>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfButtonField">
            <summary>
            Represents button field in the PDF form.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfButtonField.#ctor(Spire.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="page">The page where the fields should be placed.</param>
            <param name="name">The name of the button.</param>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfButtonField.AddPrintAction">
            <summary>
            Adds Print action to current button field.
            <remarks>Clicking on the specified button will trigger the Print Dialog Box.</remarks>
            </summary>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfButtonField.Text">
            <summary>
            Gets or sets the caption text.
            </summary>
            <value>The caption text.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.Editable">
            <summary>
            Gets or sets a value indicating whether this  is editable.
            </summary>
            <value><c>true</c> if editable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.SelectedIndex">
            <summary>
            Gets or sets the first selected item in the list. 
            </summary>
            <value>The index of the selected item.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.SelectedValue">
            <summary>
            Gets or sets the value of the first selected item in the list.
            </summary>
            <value>The selected value.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.SelectedItem">
            <summary>
            Gets the first selected item in the list.
            </summary>
            <value>The selected item.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.Bounds">
            <summary>
            Gets or sets the bounds.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.Location">
            <summary>
            Gets or sets the location.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.BorderColor">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.BackColor">
            <summary>
            Gets or sets the color of the background.
            </summary>
            <value>The color of the background.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.ForeColor">
            <summary>
            Gets or sets the color of the text.
            </summary>
            <value>The color of the text.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.BorderWidth">
            <summary>
            Gets or sets the width of the border.
            </summary>
            <value>The width of the border.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.HighlightMode">
            <summary>
            Gets or sets the highlighting mode.
            </summary>
            <value>The highlighting mode.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.Font">
            <summary>
            Gets or sets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.TextAlignment">
            <summary>
            Gets or sets the text alignment.
            </summary>
            <value>The text alignment.</value>
            <remarks>This property is meaningful for fields containing variable text only.
            </remarks>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.Actions">
            <summary>
            Gets the actions of the field.
            </summary>
            <value>The actions.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
            <value>The border style.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.Visible">
            <summary>
            Gets or sets a value indicating whether this  is visible.
            </summary>
            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.Form">
            <summary>
            Gets the form.
            </summary>
            <value>The form.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.MappingName">
            <summary>
            Gets or sets the mapping name to be used when exporting interactive form 
            field data from the document.
            </summary>
            <value>The mapping name.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.Export">
            <summary>
            Gets or sets a value indicating whether this  is export.
            </summary>
            <value><c>true</c> if export; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.ReadOnly">
            <summary>
            Gets or sets a value indicating whether [read only].
            </summary>
            <value> if the field is read only, set to <c>true</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.Required">
            <summary>
            Gets or sets a value indicating whether this  is required.
            </summary>
            <value><c>true</c> if required; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.ToolTip">
            <summary>
            Gets or sets the tool tip.
            </summary>
            <value>The tool tip.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.Page">
            <summary>
            Gets the page.
            </summary>
            <value>The page.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.IPdfComboBoxField.Flatten">
            <summary>
            Gets or sets a value indicating whether this  is flatten.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Attachments.PdfAttachment">
            <summary>
            Represents attachments of the Pdf document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Attachments.PdfAttachment.#ctor(System.String)">
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Spire.Pdf.Attachments.PdfAttachment.#ctor(System.String,System.Byte[])">
            <param name="fileName">Name of the file.</param>
            <param name="data">The data to be attached as a file.</param>
        </member>
        <member name="M:Spire.Pdf.Attachments.PdfAttachment.#ctor(System.String,System.IO.Stream)">
            <param name="fileName">Name of the file.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="T:Spire.Pdf.Barcode.PdfBarcodeQuietZones">
            <summary>
            Represents the Class for specifying Quiet zones around the barcode.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfBarcodeQuietZones.Right">
            <summary>
            Gets or sets the quiet zones at the right side of the barcode.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfBarcodeQuietZones.Top">
            <summary>
             Gets or sets the quiet zones at Top of the barcode.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfBarcodeQuietZones.Left">
            <summary>
             Gets or sets the quiet zones at the left side of the barcode.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfBarcodeQuietZones.Bottom">
            <summary>
             Gets or sets the quiet zones at bottom of the barcode.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfBarcodeQuietZones.All">
            <summary>
             Gets or sets the quiet zones around the bar code.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Barcode.PdfBarcodeQuietZones.IsAll">
            <summary>
            Check whether all the margin values are equal.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DBackground">
            <summary>
            Represents the background appearance for 3D artwork. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DBackground.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DBackground.#ctor(Spire.Pdf.Graphics.PdfRGBColor)">
            <summary>
            Initializes a new instance of the  class.        
            </summary>
            <param name="color">The  object specifying the background color for the 3D artwork.</param>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DBackground.Color">
            <summary>
            Gets or sets the background color.
            </summary>
            <value>The  object specifying the background color for the 3D artwork. </value>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DBackground.ApplyToEntireAnnotation">
            <summary>
            Gets or sets a value indicating how the background is applied. 
            </summary>
            <value>True if the background is applied to entire annotation, false if the background is applied to annotation's 3D view box only.</value>      
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DBackground.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfDocumentActions">
            <summary>
            Represents an action for the document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfDocumentActions.AfterOpenAction">
            <summary>
            Gets or sets the action to execute when the document is opened. 
            </summary>
            <value>A  specifying the action to be executed when documents opens in the viewer. </value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfDocumentActions.BeforeCloseAction">
            <summary>
            Gets or sets the action to be performed before the document is closed.
            </summary>
            <value>A  object specifying the action to be executed before the document is closed. </value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfDocumentActions.BeforeSaveAction">
            <summary>
            Gets or sets the java script action to be performed before the document is saved.
            </summary>
            <value>A  object specifying the action to be executed before the document is saved. </value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfDocumentActions.AfterSaveAction">
            <summary>
            Gets or sets the jave script action to be performed after the document is saved.
            </summary>
            <value>A  object specifying the action to be executed after the document is saved.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfDocumentActions.BeforePrintAction">
            <summary>
            Gets or sets the action to be performed before the document is printed.
            </summary>
            <value>A  object specifying the action to be executed before the document is printed. </value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfDocumentActions.AfterPrintAction">
            <summary>
            Gets or sets the action to be performed after the document is printed.
            </summary>
            <value>A  object specifying the action to be executed after the document is printed. .</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfDocumentActions.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.Xmp.CustomMetadata">
            <summary>
            Represents custom Metadata.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Xmp.CustomMetadata.#ctor(Spire.Pdf.Xmp.XmpMetadata,System.String,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="xmp">Parent XmpMetadata.</param>
            <param name="xmlNamespace">The XML namespace.</param>
            <param name="namespaceUri">The namespace URI.</param>
        </member>
        <member name="P:Spire.Pdf.Xmp.CustomMetadata.Item(System.String)">
            <summary>
            Sets the xmp property.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Xmp.CustomMetadata.SchemaType">
            <summary>
            Gets type of the schema.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfPageSize">
            <summary>
            Represents information about page size.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.Letter">
            <summary>
            Letter format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.Note">
            <summary>
            Note format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.Legal">
            <summary>
            Legal format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.A0">
            <summary>
            A0 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.A1">
            <summary>
            A1 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.A2">
            <summary>
            A2 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.A3">
            <summary>
            A3 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.A4">
            <summary>
            A4 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.A5">
            <summary>
            A5 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.A6">
            <summary>
            A6 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.A7">
            <summary>
            A7 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.A8">
            <summary>
            A8 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.A9">
            <summary>
            A9 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.A10">
            <summary>
            A10 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.B0">
            <summary>
            B0 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.B1">
            <summary>
            B1 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.B2">
            <summary>
            B2 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.B3">
            <summary>
            B3 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.B4">
            <summary>
            B4 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.B5">
            <summary>
            B5 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.ArchE">
            <summary>
            ArchE format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.ArchD">
            <summary>
            ArchD format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.ArchC">
            <summary>
            ArchC format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.ArchB">
            <summary>
            ArchB format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.ArchA">
            <summary>
            ArchA format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.Flsa">
            <summary>
            The American Foolscap format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.HalfLetter">
            <summary>
            HalfLetter format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.Letter11x17">
            <summary>
            11x17 format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfPageSize.Ledger">
            <summary>
            Ledger format.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfPen">
            <summary>
            A class defining settings for drawing operations.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPen.#ctor(Spire.Pdf.Graphics.PdfRGBColor)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPen.#ctor(Spire.Pdf.Graphics.PdfRGBColor,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="color">Color of the pen.</param>
            <param name="width">Width of the pen's line.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPen.#ctor(Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPen.#ctor(Spire.Pdf.Graphics.PdfBrush,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="width">Width of the pen's line.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPen.#ctor(Spire.Pdf.ColorSpace.PdfComplexColor)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPen.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPen.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A new pen with the same properties.</returns>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPen.Brush">
            <summary>
            Gets or sets the brush, which specifies the pen behaviour.
            </summary>
            <remarks>If the brush is set, the color values are ignored,
            except for PdfSolidBrush.</remarks>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPen.Color">
            <summary>
            Gets or sets the color of the pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPen.DashOffset">
            <summary>
            Gets or sets the dash offset of the pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPen.DashPattern">
            <summary>
            Gets or sets the dash pattern of the pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPen.DashStyle">
            <summary>
            Gets or sets the dash style of the pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPen.LineCap">
            <summary>
            Gets or sets the line cap of the pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPen.LineJoin">
            <summary>
            Gets or sets the line join style of the pen.
            </summary>
            <value>The line join.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPen.Width">
            <summary>
            Gets or sets the width of the pen.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfPen.MiterLimit">
            <summary>
            Gets or sets the miter limit.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfHorizontalAlignment">
            <summary>
            Specifies the type of Horizontal alignment.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfHorizontalAlignment.Left">
            <summary>
            Specifies the element is aligned to Left.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfHorizontalAlignment.Center">
            <summary>
            Specifies the element is aligned to Center.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfHorizontalAlignment.Right">
            <summary>
            Specifies the element is aligned to Right.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfVerticalAlignment">
            <summary>
            Specifies the type of Vertical alignment.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfVerticalAlignment.Top">
            <summary>
            Specifies the element is aligned to Top.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfVerticalAlignment.Middle">
            <summary>
            Specifies the element is aligned to Middle.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfVerticalAlignment.Bottom">
            <summary>
            Specifies the element is aligned to Bottom.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfTextAlignment">
            <summary>
            Specifies the type of horizontal text alignment.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfTextAlignment.Left">
            <summary>
            Specifies the text is aligned to Left.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfTextAlignment.Center">
            <summary>
            Specifies the text is aligned to Center.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfTextAlignment.Right">
            <summary>
            Specifies the text is aligned to Right.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfTextAlignment.Justify">
            <summary>
            Specifies the text as Justified text.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.TextRenderingMode">
            <summary>
            Specifies the text rendering mode.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TextRenderingMode.Fill">
            <summary>
            Fill text.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TextRenderingMode.Stroke">
            <summary>
            Stroke text.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TextRenderingMode.FillStroke">
            <summary>
            Fill, then stroke text.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TextRenderingMode.None">
            <summary>
            Neither fill nor stroke text (invisible).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TextRenderingMode.ClipFill">
            <summary>
            Fill text and add to path for clipping (see above)..
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TextRenderingMode.ClipStroke">
            <summary>
            Stroke text and add to path for clipping (see above).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TextRenderingMode.ClipFillStroke">
            <summary>
            Stroke fill text  and add to path for clipping.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.TextRenderingMode.Clip">
            <summary>
            Add text to path for clipping.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfLineJoin">
            <summary>
            Specifies the corner style of the shapes.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfLineJoin.Miter">
            <summary>
            The outer edges for the two segments are extended
            until they meet at an angle.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfLineJoin.Round">
            <summary>
            An arc of a circle with a diameter equal to the line width is drawn
            around the point where the two segments meet, connecting the outer edges for the two segments.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfLineJoin.Bevel">
            <summary>
            The two segments are finished with caps
            and the resulting notch beyond the ends of the segments is filled
            with a triangle.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfLineCap">
             <summary>
            Specifies the line cap style to be used at the ends of the lines.
             </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfLineCap.Flat">
            <summary>
            The stroke is squared off at the endpoint of the path. There is no
            projection beyond the end of the path.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfLineCap.Round">
            <summary>
            A semicircular arc with a diameter equal to the line width is
            drawn around the endpoint and filled in.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfLineCap.Square">
            <summary>
             The stroke continues beyond the endpoint of the path
            for a distance equal to half the line width and is squared off.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfDashStyle">
            <summary>
            Possible dash styles of the pen.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfDashStyle.Solid">
            <summary>
            Solid line.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfDashStyle.Dash">
            <summary>
            Dashed line.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfDashStyle.Dot">
            <summary>
            Dotted line.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfDashStyle.DashDot">
            <summary>
            Dash-dot line.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfDashStyle.DashDotDot">
            <summary>
            Dash-dot-dot line.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfDashStyle.Custom">
            <summary>
            User defined dash style.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfFillMode">
            <summary>
            Specifies how the shapes are filled. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFillMode.Winding">
            <summary>
            Nonzero winding number rule of determining &quot;insideness&quot;
            of point.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfFillMode.Alternate">
            <summary>
            Even odd rule of determining &quot;insideness&quot; of point.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfColorSpace">
            <summary>
            Defines set of color spaces.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfColorSpace.RGB">
            <summary>
            RGB color space.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfColorSpace.CMYK">
            <summary>
            CMYK color space.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfColorSpace.GrayScale">
            <summary>
            GrayScale color space.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfColorSpace.Indexed">
            <summary>
            Indexed color space used internally.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.ColorIntent.AbsoluteColorimetric">
            <summary>
            Colors are represented solely with respect to the light source;
            no correction is made for the output mediums white point
            (such as the color of unprinted paper).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.ColorIntent.RelativeColorimetric">
            <summary>
            Colors are represented with respect to the combination of
            the light source and the output mediums white point
            (such as the color of unprinted paper).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.ColorIntent.Saturation">
            <summary>
            Colors are represented in a manner that preserves
            or emphasizes saturation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.ColorIntent.Perceptual">
            <summary>
            Colors are represented in a manner that provides a pleasing
            perceptual appearance.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfBlendMode">
            <summary>
            Specifies the blend mode for transparency.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfBlendMode.Normal">
            <summary>
            Selects the source color, ignoring the backdrop.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfBlendMode.Multiply">
            <summary>
            Multiplies the backdrop and source color values.
            The result color is always at least as dark as either
            of the two constituent colors. Multiplying
            any color with black produces black; multiplying
            with white leaves the original color unchanged.
            Painting successive overlapping objects with a color
            other than black or white produces progressively darker colors.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfBlendMode.Screen">
            <summary>
            Multiplies the complements of the backdrop and source
            color values, then complements the result. The result
            color is always at least as light as either of the two
            constituent colors. Screening any color with white
            produces white; screening with black leaves the original
            color unchanged. The effect is similar to projecting
            multiple photographic slides simultaneously onto a single screen.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfBlendMode.Overlay">
            <summary>
            Multiplies or screens the colors, depending on
            the backdrop color value. Source colors overlay
            the backdrop while preserving its highlights and
            shadows. The backdrop color is not replaced but
            is mixed with the source color to reflect the
            lightness or darkness of the backdrop.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfBlendMode.Darken">
            <summary>
            Selects the darker of the backdrop and source colors.
            The backdrop is replaced with the source where the source
            is darker; otherwise, it is left unchanged.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfBlendMode.Lighten">
            <summary>
            Selects the lighter of the backdrop and source colors.
            The backdrop is replaced with the source where the source
            is lighter; otherwise, it is left unchanged.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfBlendMode.ColorDodge">
            <summary>
            Brightens the backdrop color to reflect the source color.
            Painting with black produces no changes.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfBlendMode.ColorBurn">
            <summary>
            Darkens the backdrop color to reflect the source color.
            Painting with white produces no change.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfBlendMode.HardLight">
            <summary>
            Multiplies or screens the colors, depending on the source color value.
            The effect is similar to shining a harsh spotlight on the backdrop.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfBlendMode.SoftLight">
            <summary>
            Darkens or lightens the colors, depending on the source color value.
            The effect is similar to shining a diffused spotlight on the backdrop.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfBlendMode.Difference">
            <summary>
            Subtracts the darker of the two constituent colors from the lighter color.
            Painting with white inverts the backdrop color; painting with black produces no change.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfBlendMode.Exclusion">
            <summary>
            Produces an effect similar to that of the Difference mode
            but lower in contrast. Painting with white inverts 
            the backdrop color; painting with black produces no change.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfBlendMode.Hue">
            <summary>
            Creates a color with the hue of the source color and 
            the saturation and luminosity of the backdrop color.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfBlendMode.Saturation">
            <summary>
            Creates a color with the saturation of the source color
            and the hue and luminosity of the backdrop color. Painting
            with this mode in an area of the backdrop that is a pure
            gray (no saturation) produces no change.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfBlendMode.Color">
            <summary>
            Creates a color with the hue and saturation of
            the source color and the luminosity of the backdrop
            color. This preserves the gray levels of the backdrop
            and is useful for coloring monochrome images or tinting color images.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfBlendMode.Luminosity">
            <summary>
            Creates a color with the luminosity of the source color
            and the hue and saturation of the backdrop color. This
            produces an inverse effect to that of the Color mode.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfImageType">
            <summary>
            Specifies the type of the PdfImage.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfImageType.Bitmap">
            <summary>
            Specifies the image is bitmap.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfImageType.Metafile">
            <summary>
            Specifies the image is metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfGraphicsUnit">
            <summary>
            Specifies the types of the page's logical units.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfGraphicsUnit.Centimeter">
            <summary>
            Specifies the Measurement is in centimeters.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfGraphicsUnit.Pica">
            <summary>
            Specifies the Measurement is in picas. A pica represents 12 points.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfGraphicsUnit.Pixel">
            <summary>
            Specifies the unit of measurement is 1 pixel.
            </summary>
            <remarks>Pixel unit is device dependent unit. The result depends on the default Dpi on the machine.</remarks>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfGraphicsUnit.Point">
            <summary>
            Specifies a printer's point (1/72 inch) as the unit of measure. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfGraphicsUnit.Inch">
            <summary>
            Specifies the inch as the unit of measure. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfGraphicsUnit.Document">
            <summary>
            Specifies the document unit (1/300 inch) as the unit of measure.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfGraphicsUnit.Millimeter">
            <summary>
            Specifies the Measurement is in millimeters.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfSoundAnnotation">
            <summary>
            Represents the sound annotation.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfSoundAnnotation.#ctor(System.Drawing.RectangleF,System.String)">
            <param name="rectangle">RectangleF structure that specifies the bounds of the annotation.</param>
            <param name="fileName">The string specifies the file name of the sound annotation.</param>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfSoundAnnotation.Icon">
            <summary>
            Gets or sets the icon to be used in displaying the annotation.
            </summary>
            <value>The  enumeration member specifying the icon for the annotation.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfSoundAnnotation.Sound">
            <summary>
            Gets or sets the sound.
            </summary>
            <value>The  object specified a sound for the annotation.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfSoundAnnotation.FileName">
            <value>The string specifies the file name of the sound annotation.</value>
        </member>
        <member name="T:Spire.Pdf.General.PdfDestination">
            <summary>
            Represents an anchor in the document where bookmarks or annotations can direct when clicked.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.PdfDestination.#ctor(Spire.Pdf.PdfPageBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:Spire.Pdf.General.PdfDestination.#ctor(Spire.Pdf.PdfPageBase,System.Drawing.PointF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="page">The page.</param>
            <param name="location">The location.</param>
        </member>
        <member name="P:Spire.Pdf.General.PdfDestination.Zoom">
            <summary>
            Gets or sets zoom factor.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.PdfDestination.Page">
            <summary>
            Gets or sets a page where the destination is situated.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.PdfDestination.Mode">
            <summary>
            Gets or sets mode of the destination.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.PdfDestination.Location">
            <summary>
            Gets or sets a location of the destination.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.PdfDestination.IsValid">
            <summary>
            Gets a value indicating whether this instance is valid.
            </summary>
            <value><c>true</c> if this instance is valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.General.PdfDestination.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets pdf primitive representing this object.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfStateWidgetItemCollection">
            <summary>
            Represents the collection of loaded state item.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfStateWidgetItemCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfRubberStampAnnotationWidget">
            <summary>
            Represents the loaded rubber stamp annotation class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfRubberStampAnnotationWidget.Icon">
            <summary>
            Gets or sets the icon of the annotation.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfPageTransition">
            <summary>
            Represents parameters how to display the page in the presentation mode.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfPageTransition.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfPageTransition.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:Spire.Pdf.PdfPageTransition.Style">
            <summary>
            Gets or sets the transition style to use when moving to this page from another 
            during a presentation.
            </summary>
            <value>The style.</value>
        </member>
        <member name="P:Spire.Pdf.PdfPageTransition.Duration">
            <summary>
            Gets or sets the duration of the transition effect, in seconds.
            </summary>
            <value>The transition duration.</value>
        </member>
        <member name="P:Spire.Pdf.PdfPageTransition.Dimension">
            <summary>
            Gets or sets the dimension in which the specified transition effect occurs.
            </summary>
            <value>The dimension.</value>
        </member>
        <member name="P:Spire.Pdf.PdfPageTransition.Motion">
            <summary>
            Gets or sets the the direction of motion for the specified transition effect.
            </summary>
            <value>The motion.</value>
        </member>
        <member name="P:Spire.Pdf.PdfPageTransition.Direction">
            <summary>
            The direction in which the specified transition effect moves, expressed in degrees counter 
            clockwise starting from a left-to-right direction. (This differs from the page objects 
            Rotate property, which is measured clockwise from the top.)
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageTransition.Scale">
            <summary>
            Gets or sets the starting or ending scale at which the changes are drawn. 
            If Motion property specifies an inward transition, the scale of the changes drawn progresses 
            from Scale to 1.0 over the course of the transition. If Motion specifies an outward 
            transition, the scale of the changes drawn progresses from 1.0 to Scale over the course 
            of the transition.
            </summary>
            <remarks>
            This property has effect for Fly transition style only.
            </remarks>
            <value>The scale.</value>
        </member>
        <member name="P:Spire.Pdf.PdfPageTransition.PageDuration">
            <summary>
            Gets or sets The pages display duration (also called its advance timing): the maximum 
            length of time, in seconds, that the page is displayed during presentations before 
            the viewer application automatically advances to the next page. By default, 
            the viewer does not advance automatically.
            </summary>
            <value>The page duration.</value>
        </member>
        <member name="P:Spire.Pdf.PdfPageTransition.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfPageCollection">
            <summary>
            Implements routines for manipulation with loaded pages.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageCollection.Add">
            <summary>
            Creates a new page and adds it to the collection.
            </summary>
            <returns>The created page.</returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageCollection.Add(System.Drawing.SizeF)">
            <summary>
            Creates a new page of the specified size and adds it to the collection.
            </summary>
            <param name="size">The size of the new page.</param>
            <returns>The created page.</returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageCollection.Add(System.Drawing.SizeF,Spire.Pdf.Graphics.PdfMargins)">
            <summary>
            Creates a new page of the specified size and with the specified margins
            and adds it to the collection.
            </summary>
            <param name="size">The size of the new page.</param>
            <param name="margins">The margins of the new page.</param>
            <returns>The created page.</returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageCollection.Add(System.Drawing.SizeF,Spire.Pdf.Graphics.PdfMargins,Spire.Pdf.PdfPageRotateAngle)">
            <summary>
            Creates a new page of the specified size and with the specified margins
            and adds it to the collection.
            </summary>
            <param name="size">The size of the new page.</param>
            <param name="margins">The margins of the new page.</param>
            <param name="rotation">The rotation of the new page.</param>
            <returns>The created page.</returns>		
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageCollection.Add(System.Drawing.SizeF,Spire.Pdf.Graphics.PdfMargins,Spire.Pdf.PdfPageRotateAngle,Spire.Pdf.PdfPageOrientation)">
            <summary>
            Creates a new page of the specified size and with the specified margins
            and adds it to the collection.
            </summary>
            <param name="index">The index.</param>
            <param name="size">The size of the page.</param>
            <param name="margins">The margins of the page.</param>
            <param name="rotation">The rotation of the new page.</param>
            <param name="orientation">The orientation of the new page.</param>
            <returns>The created page.</returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageCollection.Insert(System.Int32)">
            <summary>
            Creates a new page and inserts it at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The created page.</returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageCollection.Insert(System.Int32,System.Drawing.SizeF)">
            <summary>
            Creates a new page and inserts it at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="size">The size of the page.</param>
            <returns>The created page.</returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageCollection.Insert(System.Int32,System.Drawing.SizeF,Spire.Pdf.Graphics.PdfMargins)">
            <summary>
            Creates a new page and inserts it at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="size">The size of the page.</param>
            <param name="margins">The margins of the page.</param>
            <returns>The created page.</returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageCollection.Insert(System.Int32,System.Drawing.SizeF,Spire.Pdf.Graphics.PdfMargins,Spire.Pdf.PdfPageRotateAngle)">
            <summary>
            Creates a new page and inserts it at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="size">The size of the page.</param>
            <param name="margins">The margins of the page.</param>
            <param name="rotation">The rotation of the new page.</param>
            <returns>The created page.</returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the page at the given specified index.
            </summary>
            <param name="index"> Index of the page.</param>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageCollection.Remove(System.Int32,Spire.Pdf.PdfPageBase)">
            <summary>
            Removes the specified page.
            </summary>
            <param name="page">The page to be remove.</param>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageCollection.Remove(Spire.Pdf.PdfPageBase)">
            <summary>
            Removes the specified page.
            </summary>
            <param name="page">The page to be remove.</param>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageCollection.ReArrange(System.Int32[])">
            <summary>
            ReArrange the Pages in the Loaded Document.
            </summary>
            <param name="orderArray">The page sequence to arrange the pages.</param>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageCollection.Insert(System.Int32,System.Drawing.SizeF,Spire.Pdf.Graphics.PdfMargins,Spire.Pdf.PdfPageRotateAngle,Spire.Pdf.PdfPageOrientation,System.Boolean)">
            <summary>
            Creates a new page and inserts it at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="size">The size of the page.</param>
            <param name="margins">The margins of the page.</param>
            <param name="rotation">The rotation of the new page.</param>
            <param name="orientation">The orientation of the new page.</param>
            <returns>The created page.</returns>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfPageCollection.IndexOf(Spire.Pdf.PdfPageBase)">
            <summary>
            Gets the index of the page in the document.
            </summary>
            <param name="page">The current page.</param>
            <returns>Index of the page in the document if exists, -1 otherwise.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Spire.Pdf.Widget.PdfPageCollection.GetEnumerator" -->
        <member name="E:Spire.Pdf.Widget.PdfPageCollection.PageAdded">
            <summary>
            Represents the  method that executes on a PdfNewDocument when a new page is created.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfPageCollection.SectionCount">
            <summary>
            Get the Section Count.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfPageCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfPageCollection.Count">
            <summary>
            Gets the count.
            </summary>
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.HtmlConverter.m_loadHtmlTimeout">
            <summary>
            load URL time out
            </summary>
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.HtmlConverter.m_IsWaiting">
            <summary>
            load URL whether Waiting 
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Spire.Pdf.HtmlConverter.HtmlConverter.m_HtmlType" -->
        <member name="F:Spire.Pdf.HtmlConverter.HtmlConverter.m_LoadComplete">
            <summary>
            WebBrowser load Complete
            </summary>
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.HtmlConverter.start">
            <summary>
            Get html page  start time
            </summary>
        </member>
        <member name="P:Spire.Pdf.HtmlConverter.HtmlConverter.IsWaiting">
            <summary>
            load URL whether Waiting
            </summary>
        </member>
        <member name="P:Spire.Pdf.HtmlConverter.HtmlConverter.WaitingTime">
             <summary>
            webBrowser load html  whether  Waiting time in milliseconds.
             </summary>
        </member>
        <member name="P:Spire.Pdf.HtmlConverter.HtmlConverter.HtmlType">
            <summary>
            load ScouceCode or URL
            </summary>
        </member>
        <member name="P:Spire.Pdf.HtmlConverter.HtmlConverter.LoadComplete">
            <summary>
            WebBrowser load Complete
            </summary>
        </member>
        <member name="T:Spire.Pdf.HtmlConverter.Clip">
            <summary>
            Options of converting html to pdf
            </summary>
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Clip.None">
            <summary>
            Not clip
            </summary>
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Clip.Width">
            <summary>
            Clips width
            </summary>
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Clip.Height">
            <summary>
            Clips height
            </summary>
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Clip.Both">
            <summary>
            Clips width and height
            </summary>
        </member>
        <member name="T:Spire.Pdf.HtmlConverter.LoadHtmlType">
            <summary>
            load from  content type
            </summary>
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.LoadHtmlType.URL">
            <summary>
            load from ulr or file
            </summary>
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.LoadHtmlType.SourceCode">
            <summary>
            load html SourceCode
            </summary>
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat.m_loadHtmlTimeout">
            <summary>
            default 30 s
            </summary>
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat.m_IsWaiting">
            <summary>
            load URL whether Waiting
            </summary>
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat.m_HtmlType">
            <summary>
            load ScouceCode or URL
            </summary>
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat.m_LoadComplete">
            <summary>
            WebBrowser load Complete
            </summary>
        </member>
        <member name="P:Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat.Layout">
            <summary>
            Gets or sets layout type of the element.
            </summary>
        </member>
        <member name="P:Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat.FitToPage">
            <summary>
            If html view is larger than pdf page, zooms out it to fit pdf page.
            But if html view is smaller than, will not zoom in it.
            </summary>
        </member>
        <member name="P:Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat.FitToHtml">
            <summary>
            If html view is larger than page, resize pdf page to fit html view.
            But if html view is smaller than, will not resize pdf page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat.TrimPage">
            <summary>
            If html view is smaller than page, trim pdf page to fit html view.
            </summary>
        </member>
        <member name="P:Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat.LoadHtmlTimeout">
            <summary>
            The maximum time in milliseconds to wait the completion of loading html.
            Default is 30000.
            </summary>
        </member>
        <member name="P:Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat.IsWaiting">
             <summary>
            webBrowser load html  whether  Waiting
             </summary>
        </member>
        <member name="P:Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat.WaitingTime">
             <summary>
            webBrowser load html  whether  Waiting time  in milliseconds.
             </summary>
        </member>
        <member name="P:Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat.HtmlType">
            <summary>
            load ScouceCode or URL
            </summary>
        </member>
        <member name="P:Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat.LoadComplete">
            <summary>
            WebBrowser load Complete
            </summary>
        </member>
        <member name="T:Spire.Pdf.HtmlConverter.UnsafeNativeMethods.IDocHostShowUI">
            <summary>
            IDocHostShowUI 这个接口提供给我们对浏览器控件显示的信息对话框和帮助的控制。
            我们实现它，这样在浏览器控件显示它自己的任何的信息或帮助之前 ,能调用我们定义的IDocHostShowUI的方法。这样我们便有一个机会捕获该信息对话框弹出的消息。
            </summary>
        </member>
        <member name="T:Spire.Pdf.HtmlConverter.UnsafeNativeMethods.IDocHostShowUI">
            <summary>
            IDocHostShowUI 这个接口提供给我们对浏览器控件显示的信息对话框和帮助的控制。
            我们实现它，这样在浏览器控件显示它自己的任何的信息或帮助之前 ,能调用我们定义的IDocHostShowUI的方法。这样我们便有一个机会捕获该信息对话框弹出的消息。
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.ObjectType.Invalid">
            <summary>
            Invalid object type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.ObjectType.Brush">
            <summary>
            Brush object.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.ObjectType.Pen">
            <summary>
            Pen object.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.ObjectType.Path">
            <summary>
            Path object.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.ObjectType.Region">
            <summary>
            Region object.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.ObjectType.Image">
            <summary>
            Image object.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.ObjectType.Font">
            <summary>
            Font object.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.ObjectType.StringFormat">
            <summary>
            String format object.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.ObjectType.ImageAttributes">
            <summary>
            Image attributes object.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.ObjectType.CustomLineCap">
            <summary>
            Custom line cap object.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.BrushType.SolidBrush">
            <summary>
            Default value.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.BrushType.HatchBrush">
            <summary>
            Hatch brush.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.BrushType.TextureBrush">
            <summary>
            Texture brush.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.BrushType.PathGradientBrush">
            <summary>
            Path gradient brush.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.BrushType.LienarGradientBrush">
            <summary>
            Linear gradient brush.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.Images.Metafiles.GradientBrushFlags">
            <summary>
            Flags for a linear gradient brush.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.GradientBrushFlags.Default">
            <summary>
            Minimal data are present.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.GradientBrushFlags.Matrix">
            <summary>
            The brush applies a transformation matrix to the source image.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.GradientBrushFlags.ColorBlend">
            <summary>
            The brush contains a ColorBlend object for use with its InterpolationColors property.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.GradientBrushFlags.Blend">
            <summary>
            The brush contains a Blend object for use with its Blend property.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.GradientBrushFlags.FocusScales">
            <summary>
            The brush has a non-default value for the FocusScales property.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.GradientBrushFlags.GammaCorrection">
            <summary>
            The brush uses gamma correction.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.Images.Metafiles.PenFlags">
            <summary>
            Represents pen flags.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.PenFlags.Default">
            <summary>
            Pen just with color set.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.PenFlags.Transform">
            <summary>
            Transformation set. (20-... - float )
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.PenFlags.StartCap">
            <summary>
            StartCap set. ( 20 - int )
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.PenFlags.EndCap">
            <summary>
            EndCap set. ( 20 - int )
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.PenFlags.LineJoin">
            <summary>
            LineJoin set. ( 20 - int )
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.PenFlags.MiterLimit">
            <summary>
            MiterLimit set. ( 20 - float )
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.PenFlags.DashStyle">
            <summary>
            Pen has DashStyle defined.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.PenFlags.DashCap">
            <summary>
            DashCap set. ( 20 - int )
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.PenFlags.DashOffset">
            <summary>
            DashOffset is defined. (20 - float)
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.PenFlags.DashPattern">
            <summary>
            DashPattern is defined. (20 - int: numArray; 24-... - float: DashPattern )
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.PenFlags.Alignment">
            <summary>
            Alignment set. (20 - int )
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.PenFlags.CompoundArray">
            <summary>
            CompoundArray set. (20 - int: numArray; 24-... - float: compoundArray )
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.PenFlags.CustomStartCap">
            <summary>
            The pen uses a custom start cap.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.PenFlags.CustomEndCap">
            <summary>
            The pen uses a custom end cap.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.ObjectImageFormat.Unknown">
            <summary>
            Unknown format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.ObjectImageFormat.Bitmap">
            <summary>
            Bitmap image.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.ObjectImageFormat.Metafile">
            <summary>
            Metafile image.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.ObjectRegionInitState.Rectangle">
            <summary>
            Region is from rectangle.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.ObjectRegionInitState.GraphpicsPath">
            <summary>
            Region is from graphics path.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.ObjectRegionInitState.Empty">
            <summary>
            Region is empty.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Images.Metafiles.ObjectRegionInitState.Infinity">
            <summary>
            Region is infinity.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTableInfo.Offset">
            <summary>
            Gets or sets ofset from beginning of TrueType font file.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTableInfo.Length">
            <summary>
            Gets or sets length of this table.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTableInfo.Checksum">
            <summary>
            Gets or sets table checksum.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.Fonts.TtfTableInfo.Empty">
            <summary>
            Gets a value indicating whether this  is empty.
            </summary>
            <value><c>true</c> if empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.LineGap">
            <summary>
            Typographic line gap.
            Negative LineGap values are treated as DEF_TABLE_CHECKSUM.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.ContainsCFF">
            <summary>
            Gets or sets contains CFF.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.IsSymbol">
            <summary>
            Gets or sets value indicating if Symbol font is used.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.FontBox">
            <summary>
            Gets or sets description font item.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.IsFixedPitch">
            <summary>
            Gets or sets description font item.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.ItalicAngle">
            <summary>
            Gets or sets description font item.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.PostScriptName">
            <summary>
            Gets or sets post-script font name.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.FontFamily">
            <summary>
            Gets or sets font family name.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.FontName">
            <summary>
            Gets or sets font name.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.CapHeight">
            <summary>
            Gets or sets description font item.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.Leading">
            <summary>
            Gets or sets description font item.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.MacAscent">
            <summary>
            Gets or sets description font item.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.MacDescent">
            <summary>
            Gets or sets description font item.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.WinDescent">
            <summary>
            Gets or sets description font item.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.WinAscent">
            <summary>
            Gets or sets description font item.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.StemV">
            <summary>
            Gets or sets description font item.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.WidthTable">
            <summary>
            Gets or sets widths table for the font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.MacStyle">
            <summary>
            Regular: 0
            Bold: 1
            Italic: 2
            Bold Italic: 3
            Bit 0- bold (if set to 1)
            Bit 1- italic (if set to 1)
            Bits 2-15- reserved (set to 0).
            NOTE:
            Note that macStyle bits must agree with the 'OS/2' table fsSelection bits.
            The fsSelection bits are used over the macStyle bits in Microsoft Windows.
            The PANOSE values and 'post' table values are ignored for determining bold or italic fonts.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.SubScriptSizeFactor">
            <summary>
            Subscript size factor.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMetrics.SuperscriptSizeFactor">
            <summary>
            Superscript size factor.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.Fonts.TtfMetrics.IsItalic">
            <summary>
            Gets a value indicating whether this instance is italic.
            </summary>
            <value><c>true</c> if this instance is italic; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.Fonts.TtfMetrics.IsBold">
            <summary>
            Gets a value indicating whether this instance is bold.
            </summary>
            <value><c>true</c> if this instance is bold; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfNameTable.FormatSelector">
            <summary>
            Local variable to store Format Selector.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfNameTable.RecordsCount">
            <summary>
            Local variable to store Records Count.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfNameTable.Offset">
            <summary>
            Local variable to store Offset.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfNameTable.NameRecords">
            <summary>
            Local variable to store Name Records.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfNameRecord.PlatformID">
            <summary>
            The PlatformID.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfNameRecord.EncodingID">
            <summary>
            The EncodingID.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfNameRecord.LanguageID">
            <summary>
            The PlatformIDLanguageID
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfNameRecord.NameID">
            <summary>
            The NameID.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfNameRecord.Length">
            <summary>
            The Length.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfNameRecord.Offset">
            <summary>
            The Offset.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfNameRecord.Name">
            <summary>
            The Name.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTableNames.cmap">
            <summary>
            The cmap.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTableNames.glyf">
            <summary>
            The glyf.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTableNames.head">
            <summary>
            The head.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTableNames.hhea">
            <summary>
            The hhea.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTableNames.hmtx">
            <summary>
            The cmap.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTableNames.loca">
            <summary>
            The loca.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTableNames.maxp">
            <summary>
            The maxp.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTableNames.name">
            <summary>
            The cmap.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTableNames.post">
            <summary>
            The post.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTableNames.OS2">
            <summary>
            The OS2.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTableNames.CFF">
            <summary>
            The CFF.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTableNames.cvt">
            <summary>
            The cvt.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTableNames.fpgm">
            <summary>
            The fpgm.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTableNames.prep">
            <summary>
            The prep.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHeadTable.Modified">
            <summary>
            Modified: International date (8-byte field).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHeadTable.Created">
            <summary>
            Created: International date (8-byte field).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHeadTable.MagicNumber">
            <summary>
            MagicNumber: Set to 0x5F0F3CF5.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHeadTable.CheckSumAdjustment">
            <summary>
            CheckSumAdjustment: To compute: set it to 0, sum the entire font as ULONG,
            then store 0xB1B0AFBA - sum.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHeadTable.FontRevision">
            <summary>
            FontRevision: Set by font manufacturer.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHeadTable.Version">
            <summary>
            Table version number: 0x00010000 for version 1.0.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHeadTable.XMin">
            <summary>
            Minimum x for all glyph bounding boxes.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHeadTable.YMin">
            <summary>
            Minimum y for all glyph bounding boxes.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHeadTable.UnitsPerEm">
            <summary>
            Valid range is from 16 to 16384.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHeadTable.YMax">
            <summary>
            Maximum y for all glyph bounding boxes.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHeadTable.XMax">
            <summary>
            Maximum x for all glyph bounding boxes.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHeadTable.MacStyle">
            <summary>
            Regular: 0
            Bold: 1
            Italic: 2
            Bold Italic: 3
            Bit 0 - bold (if set to 1)
            Bit 1 - italic (if set to 1)
            Bits 2-15 - reserved (set to 0)
            NOTE:
            Note that macStyle bits must agree with the 'OS/2' table fsSelection bits.
            The fsSelection bits are used over the macStyle bits in Microsoft Windows.
            The PANOSE values and 'post' table values are ignored for determining bold or italic fonts.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHeadTable.Flags">
            <summary>
            Bit 0 - baseline for font at y=0
            Bit 1 - left SideBearing at x=0
            Bit 2 - instructions may depend on point size
            Bit 3 - force ppem to integer values for all private scaler math; may use fractional ppem sizes if this bit is clear
            Bit 4 - instructions may alter advance width (the advance widths might not scale linearly)
            Note: All other bits must be zero.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHeadTable.LowestRecPPEM">
            <summary>
            LowestRecPPEM: Smallest readable size in pixels.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHeadTable.FontDirectionHint">
            <summary>
            FontDirectionHint:
            0   Fully mixed directional glyphs
            1   Only strongly left to right
            2   Like 1 but also contains neutrals
            -1   Only strongly right to left
            -2   Like -1 but also contains neutrals.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHeadTable.IndexToLocFormat">
            <summary>
            0 for short offsets, 1 for long.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHeadTable.GlyphDataFormat">
            <summary>
            0 for current format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHorizontalHeaderTable.Version">
            <summary>
            Version.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHorizontalHeaderTable.Ascender">
            <summary>
            Typographic ascent.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHorizontalHeaderTable.AdvanceWidthMax">
            <summary>
            Maximum advance width value in HTML table.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHorizontalHeaderTable.Descender">
            <summary>
            Typographic descent.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHorizontalHeaderTable.NumberOfHMetrics">
            <summary>
            Number of hMetric entries in HTML table;
            may be smaller than the total number of glyphs in the font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHorizontalHeaderTable.LineGap">
            <summary>
            Typographic line gap. Negative LineGap values are treated as DEF_TABLE_CHECKSUM
            in Windows 3.1, System 6, and System 7.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHorizontalHeaderTable.MinLeftSideBearing">
            <summary>
            Minimum left SideBearing value in HTML table.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHorizontalHeaderTable.MinRightSideBearing">
            <summary>
            Minimum right SideBearing value; calculated as Min(aw - lsb - (xMax - xMin)).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHorizontalHeaderTable.XMaxExtent">
            <summary>
            Max(lsb + (xMax - xMin)).
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHorizontalHeaderTable.CaretSlopeRise">
            <summary>
            Used to calculate the slope of the cursor (rise/run); 1 for vertical.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHorizontalHeaderTable.CaretSlopeRun">
            <summary>
            0 for vertical.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfHorizontalHeaderTable.MetricDataFormat">
            <summary>
            0 for current format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.Version">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.XAvgCharWidth">
            <summary>
            The Average Character Width parameter specifies
            the arithmetic average of the escapement (width)
            of all of the 26 lowercase letters a through z of the Latin alphabet
            and the space character. If any of the 26 lowercase letters are not present,
            this parameter should equal the weighted average of all glyphs in the font.
            For non-UGL (platform 3, encoding 0) fonts, use the unweighted average.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.UsWeightClass">
            <summary>
            Indicates the visual weight (degree of blackness or thickness of strokes)
            of the characters in the font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.UsWidthClass">
            <summary>
            Indicates a relative change from the normal aspect ratio (width to height ratio)
            as specified by a font designer for the glyphs in a font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.FsType">
            <summary>
            Indicates font embedding licensing rights for the font.
            Embeddable fonts may be stored in a document.
            When a document with embedded fonts is opened on a system that does not have the font installed
            (the remote system), the embedded font may be loaded for temporary (and in some cases, permanent)
            use on that system by an embedding-aware application.
            Embedding licensing rights are granted by the vendor of the font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.YSubscriptXSize">
            <summary>
            The recommended horizontal size in font design units for subscripts for this font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.YSubscriptYSize">
            <summary>
            The recommended vertical size in font design units for subscripts for this font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.YSubscriptXOffset">
            <summary>
            The recommended horizontal offset in font design units for subscripts for this font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.YSubscriptYOffset">
            <summary>
            The recommended vertical offset in font design units from the baseline for subscripts for this font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.ySuperscriptXSize">
            <summary>
            The recommended horizontal size in font design units for superscripts for this font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.YSuperscriptYSize">
            <summary>
            The recommended vertical size in font design units for superscripts for this font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.YSuperscriptXOffset">
            <summary>
            The recommended horizontal offset in font design units for superscripts for this font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.YSuperscriptYOffset">
            <summary>
            The recommended vertical offset in font design units from the baseline for superscripts for this font.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.YStrikeoutSize">
            <summary>
            Width of the strikeout stroke in font design units.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.YStrikeoutPosition">
            <summary>
            The position of the strikeout stroke relative to the baseline in font design units.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.SFamilyClass">
            <summary>
            This parameter is a classification of font-family design.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.Panose">
            <summary>
            This 10 byte series of numbers are used to describe the visual characteristics
            of a given typeface.  These characteristics are then used to associate the font with
            other fonts of similar appearance having different names. The variables for each digit are listed below.
            The specifications for each variable can be obtained in the specification
            PANOSE v2.0 Numerical Evaluation from Microsoft or Elseware Corporation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.UlUnicodeRange1">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.UlUnicodeRange2">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.UlUnicodeRange3">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.UlUnicodeRange4">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.AchVendID">
            <summary>
            The four character identifier for the vendor of the given type face.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.FsSelection">
            <summary>
            Information concerning the nature of the font patterns.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.UsFirstCharIndex">
            <summary>
            The minimum Unicode index (character code) in this font,
            according to the cmap subtable for platform ID 3 and encoding ID 0 or 1.
            For most fonts supporting Win-ANSI or other character sets, this value would be 0x0020.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.UsLastCharIndex">
            <summary>
            usLastCharIndex: The maximum Unicode index (character code) in this font,
            according to the cmap subtable for platform ID 3 and encoding ID 0 or 1.
            This value depends on which character sets the font supports.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.STypoAscender">
            <summary>
            The typographic ascender for this font.
            Remember that this is not the same as the Ascender value in the 'hhea' table,
            which Apple defines in a far different manner.
            DEF_TABLE_OFFSET good source for usTypoAscender is the Ascender value from an AFM file.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.STypoDescender">
            <summary>
            The typographic descender for this font.
            Remember that this is not the same as the Descender value in the 'hhea' table,
            which Apple defines in a far different manner.
            DEF_TABLE_OFFSET good source for usTypoDescender is the Descender value from an AFM file.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.STypoLineGap">
            <summary>
            The typographic line gap for this font.
            Remember that this is not the same as the LineGap value in the 'hhea' table,
            which Apple defines in a far different manner.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.UsWinAscent">
            <summary>
            The ascender metric for Windows.
            This too is distinct from Apple's Ascender value and from the usTypoAscender values.
            usWinAscent is computed as the yMax for all characters in the Windows ANSI character set.
            usTypoAscent is used to compute the Windows font height and default line spacing.
            For platform 3 encoding 0 fonts, it is the same as yMax.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.UsWinDescent">
            <summary>
            The descender metric for Windows.
            This too is distinct from Apple's Descender value and from the usTypoDescender values.
            usWinDescent is computed as the -yMin for all characters in the Windows ANSI character set.
            usTypoAscent is used to compute the Windows font height and default line spacing.
            For platform 3 encoding 0 fonts, it is the same as -yMin.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.UlCodePageRange1">
            <summary>
            This field is used to specify the code pages encompassed
            by the font file in the 'cmap' subtable for platform 3, encoding ID 1 (Microsoft platform).
            If the font file is encoding ID 0, then the Symbol Character Set bit should be set.
            If the bit is set (1) then the code page is considered functional.
            If the bit is clear (0) then the code page is not considered functional.
            Each of the bits is treated as an independent flag and the bits can be set in any combination.
            The determination of "functional" is left up to the font designer,
            although character set selection should attempt to be functional by code pages if at all possible.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.UlCodePageRange2">
            <summary>
            This field is used to specify the code pages encompassed
            by the font file in the 'cmap' subtable for platform 3, encoding ID 1 (Microsoft platform).
            If the font file is encoding ID 0, then the Symbol Character Set bit should be set.
            If the bit is set (1) then the code page is considered functional.
            If the bit is clear (0) then the code page is not considered functional.
            Each of the bits is treated as an independent flag and the bits can be set in any combination.
            The determination of "functional" is left up to the font designer,
            although character set selection should attempt to be functional by code pages if at all possible.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.SxHeight">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.SCapHeight">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.UsDefaultChar">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.UsBreakChar">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfOS2Table.UsMaxContext">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfPostTable.FormatType">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfPostTable.ItalicAngle">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfPostTable.UnderlinePosition">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfPostTable.UnderlineThickness">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfPostTable.IsFixedPitch">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfPostTable.MinMemType42">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfPostTable.MaxMemType42">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfPostTable.MinMemType1">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfPostTable.MaxMemType1">
            <summary>
            Struct field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfLongHorMertric.AdvanceWidth">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfLongHorMertric.Lsb">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfCmapTable.Version">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfCmapTable.TablesCount">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfCmapSubTable.PlatformID">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfCmapSubTable.EncodingID">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfCmapSubTable.Offset">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfAppleCmapSubTable.Format">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfAppleCmapSubTable.Length">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfAppleCmapSubTable.Version">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTrimmedCmapSubTable.Format">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTrimmedCmapSubTable.Length">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTrimmedCmapSubTable.Version">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTrimmedCmapSubTable.FirstCode">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfTrimmedCmapSubTable.EntryCount">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMicrosoftCmapSubTable.Format">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMicrosoftCmapSubTable.Length">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMicrosoftCmapSubTable.Version">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMicrosoftCmapSubTable.SegCountX2">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMicrosoftCmapSubTable.SearchRange">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMicrosoftCmapSubTable.EntrySelector">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMicrosoftCmapSubTable.RangeShift">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMicrosoftCmapSubTable.EndCount">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMicrosoftCmapSubTable.ReservedPad">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMicrosoftCmapSubTable.StartCount">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMicrosoftCmapSubTable.IdDelta">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMicrosoftCmapSubTable.IdRangeOffset">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfMicrosoftCmapSubTable.GlyphID">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfGlyphInfo.Index">
            <summary>
            Holds glyph index.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfGlyphInfo.Width">
            <summary>
            Holds character's width.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfGlyphInfo.CharCode">
            <summary>
            Code of the char symbol.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.Fonts.TtfGlyphInfo.CompareTo(System.Object)">
            <summary>
            Compares two WidthDescriptor objects.
            </summary>
            <param name="obj">Another object for comparing.</param>
            <returns>A signed integer that indicates the relative order of this instance and value.</returns>
        </member>
        <member name="P:Spire.Pdf.Graphics.Fonts.TtfGlyphInfo.Empty">
            <summary>
            Gets a value indicating whether this  is empty.
            </summary>
            <value><c>true</c> if empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfLocaTable.Offsets">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfGlyphHeader.numberOfContours">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfGlyphHeader.XMin">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfGlyphHeader.YMin">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfGlyphHeader.XMax">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.Fonts.TtfGlyphHeader.YMax">
            <summary>
            Structure field.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfCjkStandardFont">
            <summary>
            Represents the standard CJK fonts.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCjkStandardFont.#ctor(Spire.Pdf.Graphics.PdfCjkFontFamily,System.Single,Spire.Pdf.Graphics.PdfFontStyle)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="fontFamily">The font family.</param>
            <param name="size">The size.</param>
            <param name="style">The style.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCjkStandardFont.#ctor(Spire.Pdf.Graphics.PdfCjkFontFamily,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="fontFamily">The font family.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCjkStandardFont.#ctor(Spire.Pdf.Graphics.PdfCjkStandardFont,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="prototype">The prototype.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfCjkStandardFont.#ctor(Spire.Pdf.Graphics.PdfCjkStandardFont,System.Single,Spire.Pdf.Graphics.PdfFontStyle)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="prototype">The prototype.</param>
            <param name="size">The size.</param>
            <param name="style">The style.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfCjkStandardFont.FontFamily">
            <summary>
            Gets the font family.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.cbSize">
            <summary>
            internal variable to store Size.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.dwMask">
            <summary>
            internal variable to store Mask.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.wNumbering">
            <summary>
            internal variable to store Numbering.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.wReserved">
            <summary>
            internal variable to store Reserved.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.dxStartIndent">
            <summary>
            internal variable to store Start Indent.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.dxRightIndent">
            <summary>
            internal variable to store Right Indent.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.dxOffset">
            <summary>
            internal variable to store Offset.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.wAlignment">
            <summary>
            internal variable to store Alignment.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.cTabCount">
            <summary>
            internal variable to store Tab Count.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.rgxTabs">
            <summary>
            internal variable to store rgxTabs.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.dySpaceBefore">
            <summary>
            internal variable to store Space Before.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.dySpaceAfter">
            <summary>
            internal variable to store Space After.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.dyLineSpacing">
            <summary>
            internal variable to store Line Spacing.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.sStyle">
            <summary>
            internal variable to store Style.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.bLineSpacingRule">
            <summary>
            internal variable to store Line Spacing Rule.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.bOutlineLevel">
            <summary>
            internal variable to store Out line Level.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.wShadingWeight">
            <summary>
            internal variable to store Shading Weight.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.wShadingStyle">
            <summary>
            internal variable to store Shading Style.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.wNumberingStart">
            <summary>
            internal variable to store Numbering Start.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.wNumberingStyle">
            <summary>
            internal variable to store Numbering Style.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.wNumberingTab">
            <summary>
            internal variable to store Numbering Tab.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.wBorderSpace">
            <summary>
            internal variable to store Border Space.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.wBorderWidth">
            <summary>
            internal variable to store Border Width.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PARAFORMAT.wBorders">
            <summary>
            internal variable to store Borders.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.cbSize">
            <summary>
            internal variable to store size.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.dwMask">
            <summary>
            internal variable to store Mask.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.dwEffects">
            <summary>
            internal variable to store Effects.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.yHeight">
            <summary>
            internal variable to store Height.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.yOffset">
            <summary>
            internal variable to store Offset.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.crTextColor">
            <summary>
            internal variable to store Text Color.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.bCharSet">
            <summary>
            internal variable to store CharSet.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.bPitchAndFamily">
            <summary>
            internal variable to store Pitch And Family.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.wWeight">
            <summary>
            internal variable to store Weight.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.sSpacing">
            <summary>
            internal variable to store Spacing.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.crBackColor">
            <summary>
            internal variable to store BackColor.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.lcid">
            <summary>
            internal variable to store lcid.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.dwReserved">
            <summary>
            internal variable to store Reserved.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.sStyle">
            <summary>
            internal variable to store Style.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.wKerning">
            <summary>
            internal variable to store Kerning.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.bUnderlineType">
            <summary>
            internal variable to store Under line Type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.bAnimation">
            <summary>
            internal variable to store Animation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.bRevAuthor">
            <summary>
            internal variable to store RevAuthor.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.CHARFORMAT.bReserved1">
            <summary>
            internal variable to store Reserved.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfColorBlend">
            <summary>
            Represents the arrays of colors and positions used for
            interpolating color blending in a multicolor gradient.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfColorBlend.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfColorBlend.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="count">The count.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfColorBlend.Colors">
            <summary>
            Gets or sets the colours array.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.OpenTypeFile.CMap.WriteShort(System.Int16)">
            <summary>
            Writes short value into the font stream
            </summary>
            <param name="value">Short value to be written</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.OpenTypeFile.CMap.WriteInt(System.Int32)">
            <summary>
            Writes integer value into the font stream
            </summary>
            <param name="value">Integer value to be written</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.OpenTypeFile.CMap.WriteString(System.String)">
            <summary>
            Writes string value into the font stream
            </summary>
            <param name="value">String value to be written</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.OpenTypeFile.CMap.WriteBytes(System.Byte[])">
            <summary>
            Write the bytes into the font stream
            </summary>
            <param name="buffer">byte array to be written</param>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Font.TTF.TTCFontSource.GetFontDefinitions">
            <summary>
            Parse for fontSource
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Font.TTF.TTCFontSource.GetFontDefinitionsImpl(System.Collections.ArrayList,Spire.Pdf.General.Paper.Font.TTF.Internals.Parsing.TTFFileReader)">
            <summary>
            Parse font form fontDefinitions and ttfReader
            </summary>
            <param name="fontDefinitions"></param>
            <param name="ttfReader"></param>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfComboBoxField">
            <summary>
            Represents combo box field in the PDF Form.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfListField">
            <summary>
            Represents base class form's list fields.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfListField.#ctor(Spire.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="page">Page which the field to be placed on.</param>
            <param name="name">The name of the field.</param>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfListField.Items">
            <summary>
            Gets the items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfListField.SelectedIndex">
            <summary>
            Gets or sets the first selected item in the list. 
            </summary>
            <value>The index of the selected item.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfListField.SelectedValue">
            <summary>
            Gets or sets the value of the first selected item in the list.
            </summary>
            <value>The selected value.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfListField.SelectedItem">
            <summary>
            Gets the first selected item in the list.
            </summary>
            <value>The selected item.</value>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfComboBoxField.#ctor(Spire.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="page">Page the field to be placed on.</param>
            <param name="name">The name of the field.</param>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfComboBoxField.Editable">
            <summary>
            Gets or sets a value indicating whether this  is editable.
            </summary>
            <value><c>true</c> if editable; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Spire.Pdf.Exporting.XObjectElement.RenderResources">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.ColorSpace.PdfLabColorSpace">
            <summary>
            Represents a Lab colorspace
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfLabColorSpace.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfLabColorSpace.BlackPoint">
            <summary>
            Gets or sets BlackPoint
            </summary>
            <value>An array of three numbers [XB YB ZB] specifying the tristimulus value, in the CIE 1931 XYZ space, of the diffuse black point.</value>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfLabColorSpace.Range">
            <summary>
            Gets or sets the Range
            </summary>
            <value>An array of three numbers [XB YB ZB] specifying the tristimulus value, in the CIE 1931 XYZ space, of the diffuse black point.</value>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfLabColorSpace.WhitePoint">
            <summary>
            Gets or sets the white point
            </summary>
            <value>An array of three numbers [XW YW ZW] specifying the tristimulus value, in the CIE 1931 XYZ space, of the diffuse white point. </value>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DActivationState">
            <summary>
            Specifies an activation state of the 3D annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DActivationState.Instantiated">
            <summary>
            Represents that the state in which the artwork has been read and a run-time instance of 
            the artwork has been created. In this state, it can be rendered but script-driven 
            real-time modifications (that is, animations) are disabled.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DActivationState.Live">
            <summary>
            Represents that the artwork is instantiated, and it is being modified in real time to 
            achieve some animation effect. In the case of keyframe animation, the artwork is 
            live while it is playing and then reverts to an instantiated state when playing 
            completes or is stopped.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DActivationMode">
            <summary>
            Specifies the available modes for activating a 3D annotation. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DActivationMode.PageOpen">
            <summary>
            Represents that the annotation should be activated as soon as the page containing 
            the annotation is opened.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DActivationMode.PageVisible">
            <summary>
            Represents that the annotation should be activated as soon as any part of the page 
            containing the annotation becomes visible.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DActivationMode.ExplicitActivation">
            <summary>
            Represents that the annotation should remain inactive until explicitly activated 
            by a script or user action.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DDeactivationMode">
            <summary>
            Specifies the available modes for deactivating a 3D annotation. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DDeactivationMode.PageClose">
            <summary>
            Represents that the annotation should be deactivated as soon as the page is closed.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DDeactivationMode.PageInvisible">
            <summary>
            Represents that the annotation should be deactivated as soon as the page containing 
            the annotation becomes invisible.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DDeactivationMode.ExplicitDeactivation">
            <summary>
            Represents that the annotation should remain active until explicitly deactivated by a 
            script or user action.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DDeactivationState">
            <summary>
            Specifies the available states upon deactivating a 3D annotation. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DDeactivationState.Uninstantiated">
            <summary>
            Represents the initial state of the artwork before it has been used in any way.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DDeactivationState.Instantiated">
            <summary>
            Represents that the state in which the artwork has been read and a run-time instance of 
            the artwork has been created. In this state, it can be rendered but script-driven 
            real-time modifications (that is, animations) are disabled.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DDeactivationState.Live">
            <summary>
            Represents that the artwork is instantiated, and it is being modified in real time to 
            achieve some animation effect. In the case of keyframe animation, the artwork is 
            live while it is playing and then reverts to an instantiated state when playing 
            completes or is stopped.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DLightingStyle">
            <summary>
            Specifies the available styles for applying light to 3D artwork. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DLightingStyle.Artwork">
            <summary>
            The Lights as specified in the 3D artwork.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DLightingStyle.None">
            <summary>
            The lighting specified in the 3D artwork is ignored.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DLightingStyle.White">
            <summary>
            Three blue-grey infinite lights.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DLightingStyle.Day">
            <summary>
            Three light-grey infinite lights.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DLightingStyle.Night">
            <summary>
            One yellow, one aqua, and one blue infinite light.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DLightingStyle.Hard">
            <summary>
            Three grey infinite lights.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DLightingStyle.Primary">
            <summary>
            One red, one green, and one blue infinite light.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DLightingStyle.Blue">
            <summary>
            Three blue infinite lights.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DLightingStyle.Red">
            <summary>
            Three red infinite lights.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DLightingStyle.Cube">
            <summary>
            Six grey infinite lights aligned with the major axes.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DLightingStyle.CAD">
            <summary>
            Three grey infinite lights and one light attached to the camera.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DLightingStyle.Headlamp">
            <summary>
            Single infinite light attached to the camera.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DProjectionClipStyle">
            <summary>
            Specifies the available clipping style of the 3D annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DProjectionClipStyle.ExplicitNearFar">
            <summary>
            Represents the Clipping style.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DProjectionClipStyle.AutomaticNearFar">
            <summary>
            Represents the Clipping style.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DProjectionOrthoScaleMode">
            <summary>
            Specifies the available Ortho projection scaling mode of the 3D annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DProjectionOrthoScaleMode.Width">
            <summary>
            Scale to fit the width of the annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DProjectionOrthoScaleMode.Height">
            <summary>
            Scale to fit the height of the annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DProjectionOrthoScaleMode.Min">
            <summary>
            Scale to fit the lesser of width or height of the annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DProjectionOrthoScaleMode.Max">
            <summary>
            Scale to fit the greater of width or height of the annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DProjectionOrthoScaleMode.Absolute">
            <summary>
            No scaling should occur due to binding.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DProjectionType">
            <summary>
            Specifies the available projection type of the 3D annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DProjectionType.Orthographic">
            <summary>
            Represents Orthographic projection
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DProjectionType.Perspective">
            <summary>
            Represents Perspective projection.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DRenderStyle">
            <summary>
            Specifies the available rendering style of the 3D artwork. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DRenderStyle.Solid">
            <summary>
            Displays textured and lit geometric shapes. In the case of artwork 
            that conforms to the Universal 3D File Format specification, these 
            shapes are triangles.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DRenderStyle.SolidWireframe">
            <summary>
            Displays textured and lit geometric shapes (triangles) with single 
            color edges on top of them.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DRenderStyle.Transparent">
            <summary>
            Displays textured and lit geometric shapes (triangles) with an added 
            level of transparency.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DRenderStyle.TransparentWireframe">
            <summary>
            Displays textured and lit geometric shapes (triangles) with an added 
            level of transparency, with single color opaque edges on top of it.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DRenderStyle.BoundingBox">
            <summary>
            Displays the bounding box edges of each node, aligned with the axes 
            of the local coordinate space for that node.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DRenderStyle.TransparentBoundingBox">
            <summary>
            Displays bounding boxes faces of each node, aligned with the axes of 
            the local coordinate space for that node, with an added level of transparency.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DRenderStyle.TransparentBoundingBoxOutline">
            <summary>
            Displays bounding boxes edges and faces of each node, aligned with the axes of 
            the local coordinate space for that node, with an added level of transparency.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DRenderStyle.Wireframe">
            <summary>
            Displays only edges in a single color.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DRenderStyle.ShadedWireframe">
            <summary>
            Displays only edges, though interpolates their color between their two vertices 
            and applies lighting.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DRenderStyle.HiddenWireframe">
            <summary>
            Displays edges in a single color, though removes back-facing and obscured edges.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DRenderStyle.Vertices">
            <summary>
            Displays only vertices in a single color.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DRenderStyle.ShadedVertices">
            <summary>
            Displays only vertices, though uses their vertex color and applies lighting.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DRenderStyle.Illustration">
            <summary>
            Displays silhouette edges with surfaces, removes obscured lines.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DRenderStyle.SolidOutline">
            <summary>
            Displays silhouette edges with lit and textured surfaces, removes obscured lines.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.Pdf3DRenderStyle.ShadedIllustration">
            <summary>
            Displays silhouette edges with lit and textured surfaces and an additional emissive 
            term to remove poorly lit areas of the artwork.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PDF3DAnimationType">
            <summary>
            Specifies the available animation style for rendering the 3D artwork. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PDF3DAnimationType.None">
            <summary>
            Represents that the Keyframe animations should not be driven directly by 
            the viewer application. This value is used by documents that are intended 
            to drive animations through an alternate means, such as JavaScript.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PDF3DAnimationType.Linear">
            <summary>
            Represents that the Keyframe animations are driven linearly from beginning to end. 
            This animation style results in a repetitive playthrough of the animation, 
            such as in a walking motion.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PDF3DAnimationType.Oscillating">
            <summary>
            Represents that the Keyframe animations should oscillate along their time range. 
            This animation style results in a back-and-forth playing of the animation, 
            such as exploding or collapsing parts.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.SignatureDefinitionsType">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.SignatureDefinitionsType.SignatureDefinition">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.SignatureDefinitionType">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.SignatureDefinitionType.SpotLocation">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.SignatureDefinitionType.Intent">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.SignatureDefinitionType.SignBy">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.SignatureDefinitionType.SignBySpecified">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.SignatureDefinitionType.SigningLocation">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.SignatureDefinitionType.SpotID">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.SignatureDefinitionType.SignerName">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.SignatureDefinitionType.lang">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.SpotLocationType">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.SpotLocationType.PageURI">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.SpotLocationType.StartX">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.SpotLocationType.StartY">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Grid.PdfGridStyleBase">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridStyleBase.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridStyleBase.BackgroundBrush">
            <summary>
            Gets or sets the background brush.
            </summary>
            <value>The background brush.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridStyleBase.TextBrush">
            <summary>
            Gets or sets the text brush.
            </summary>
            <value>The text brush.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridStyleBase.TextPen">
            <summary>
            Gets or sets the text pen.
            </summary>
            <value>The text pen.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridStyleBase.Font">
            <summary>
            Gets or sets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="T:Spire.Pdf.Grid.PdfGridStyle">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridStyle.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridStyle.CellSpacing">
            <summary>
            Gets or sets the cell spacing.
            </summary>
            <value>The cell spacing.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridStyle.CellPadding">
            <summary>
            Gets or sets the cell padding.
            </summary>
            <value>The cell padding.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridStyle.BorderOverlapStyle">
            <summary>
            Gets or sets the border overlap style.
            </summary>
            <value>The border overlap style.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridStyle.AllowHorizontalOverflow">
            <summary>
            Gets or sets a value indicating whether to allow horizontal overflow.
            </summary>
            <value>
            	<c>true</c> if [allow horizontal overflow]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridStyle.HorizontalOverflowType">
            <summary>
            Gets or sets the type of the horizontal overflow.
            </summary>
            <value>The type of the horizontal overflow.</value>
        </member>
        <member name="T:Spire.Pdf.Grid.PdfGridRowStyle">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridRowStyle.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Grid.PdfGridCellStyle">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridCellStyle.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridCellStyle.StringFormat">
            <summary>
            Gets the string format.
            </summary>
            <value>The string format.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridCellStyle.Borders">
            <summary>
            Gets or sets the border.
            </summary>
            <value>The border.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridCellStyle.BackgroundImage">
            <summary>
            Gets or sets the background image.
            </summary>
            <value>The background image.</value>
        </member>
        <member name="T:Spire.Pdf.Grid.PdfGridCellTextAndStyle">
            <summary>
            definition Grid Cell text Style
            </summary>
        </member>
        <member name="T:Spire.Pdf.Grid.PdfGridCellTextAndStyleList">
            <summary>
            definition PdfGridCellTextAndStyle  Collections
            </summary>
        </member>
        <member name="T:Spire.Pdf.Grid.PdfHorizontalOverflowType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.Grid.PdfHorizontalOverflowType.NextPage">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Pdf.Grid.PdfHorizontalOverflowType.LastPage">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfSection">
            <summary>
            Represents a section entity. A section it's a set of the pages with similar page settings.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Spire.Pdf.PdfSection.GetEnumerator" -->
        <member name="M:Spire.Pdf.PdfSection.ResizePageCanvas(Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat,System.Drawing.SizeF)">
            <summary>
            Resize the canvas of page according to html view size.
            </summary>
            <param name="layoutFormat"></param>
            <param name="htmlViewSize"></param>
            <returns>Return the new size of canvas.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfSection.SetLayoutFormat(Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat,System.Boolean)">
            <summary>
            set PdfHtmlLayoutFormat
            </summary>
            <param name="layoutFormat">PdfHtmlLayoutFormat layoutFormat</param>
            <param name="autoDetectPageBreak">bool autoDetectPageBreak</param>
        </member>
        <member name="M:Spire.Pdf.PdfSection.LoadFromHTML(System.String,System.Boolean,System.Boolean,Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat)">
            <summary>
            Draws HTML to PDF
            </summary>
            <param name="url">Url address</param>
            <param name="enableJavaScript">Enable javascrpit</param>
            <param name="enableHyperlinks">Enable hyperlink</param>
            <param name="layoutFormat">Layouts html view format</param>
        </member>
        <member name="M:Spire.Pdf.PdfSection.LoadFromHTML(System.String,System.Boolean,System.Boolean,System.Boolean,Spire.Pdf.HtmlConverter.PdfHtmlLayoutFormat)">
            <summary>
             Draws HTML to PDF
            </summary>
            <param name="URLOrSourceCode">url address or socuce code</param>
            <param name="enableJavaScript">Enable javascrpit</param>
            <param name="enableHyperlinks">Enable hyperlink</param>
            <param name="autoDetectPageBreak">Enable autoDetectPageBreak</param>
            <param name="layoutFormat">Layouts html view format</param>
        </member>
        <member name="M:Spire.Pdf.PdfSection.SplitImage(System.Drawing.Bitmap,System.Int32)">
            <summary>
            Split by page height image
            </summary>
            <param name="bitmap"></param>
            <param name="signleImageHeight"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.PdfSection.Scan0Bitmap(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Scan image data 
            </summary>
            <param name="buffer"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="offset"></param>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="P:Spire.Pdf.PdfSection.Pages">
            <summary>
            Gets the pages.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfSection.PageNumber">
            <summary>
            Gets or sets the page label.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfSection.PageSettings">
            <summary>
            Gets or sets page settings of the section.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfSection.Template">
            <summary>
            Gets or sets a template for the pages in the section.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfSection.Document">
            <summary>
            Gets the owner document.
            </summary>
            <value>The document.</value>
        </member>
        <member name="E:Spire.Pdf.PdfSection.PageAdded">
            <summary>
            Event rises when the new page has been added
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfSection.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the wrapped element.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfSection.PdfPageEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="M:Spire.Pdf.PdfSection.PdfPageEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position,
            which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="P:Spire.Pdf.PdfSection.PdfPageEnumerator.Current">
            <summary>
            Gets the current.
            </summary>
        </member>
        <member name="T:Spire.Pdf.IO.PrimitiveStatus">
            <summary>
            Specfies the status of the IPdfPrmitive.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfUriAnnotation">
            <summary>
            Represents the Uri annotation
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfUriAnnotation.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>        
            <param name="rectangle">RectangleF structure that specifies the bounds of the annotation.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfUriAnnotation.#ctor(System.Drawing.RectangleF,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rectangle">RectangleF structure that specifies the bounds of the annotation.</param>
            <param name="uri">unique resource identifier path.</param>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfUriAnnotation.Uri">
            <summary>
            Gets or sets the Uri address.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfUriAnnotation.Action">
            <summary>
            Gets or sets the action.
            </summary>
            <value>The  object specifies the action of the annotation.</value>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfAttachmentAnnotation">
            <summary>
            Represents an attachment annotation.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfAttachmentAnnotation.#ctor(System.Drawing.RectangleF,System.String)">
            <param name="rectangle">Bounds of the annotation.</param>
            <param name="fileName">A string value specifying the full path to the file to be embedded in the PDF file.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfAttachmentAnnotation.#ctor(System.Drawing.RectangleF,System.String,System.Byte[])">
            <param name="rectangle">Bounds of the annotation.</param>
            <param name="fileName">A string value specifying the full path to the file to be embedded in the PDF file.</param>
            <param name="data">A byte array specifying the content of the annotation's embedded file. </param>
            <remarks>If both FileName and FileContent are specified, the FileContent takes precedence. </remarks>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfAttachmentAnnotation.#ctor(System.Drawing.RectangleF,System.String,System.IO.Stream)">
            <param name="rectangle">The rectangle.</param>
            <param name="fileName">A string value specifying the full path to the file to be embedded in the PDF file.</param>
            <param name="stream">The stream specifying the content of the annotation's embedded file. </param>
            <remarks>If both FileName and FileContent are specified, the FileContent takes precedence. </remarks>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfAttachmentAnnotation.Icon">
            <summary>
            Gets or Sets attachment's icon.
            </summary>
            <value>A  enumeration member specifying the icon for the annotation when it is displayed in closed state.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfAttachmentAnnotation.FileName">
            <value>A string value specifying the full path to the file to be embedded in the PDF file.</value>
        </member>
        <member name="T:Spire.Pdf.Widget.XFdfDocument">
            <summary>
            Represents base class of XFDF.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Widget.XFdfDocument.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="filename">The filename.</param>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfListFieldWidgetItem">
            <summary>
            Represents group item for list field.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfDocumentLinkAnnotationWidget">
            <summary>
            Represents the loaded document link annotation class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfDocumentLinkAnnotationWidget.Destination">
            <summary>
            Sets the destination of the annotation.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfStringLayouter">
            <summary>
            Class lay outing the text.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfStringLayouter.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfStringLayouter.Layout(System.String,Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfStringFormat,System.Drawing.SizeF)">
            <summary>
            Layouts the text.
            </summary>
            <param name="text">String text.</param>
            <param name="font">Font for the text.</param>
            <param name="format">String format.</param>
            <param name="size">Bounds of the text.</param>
            <returns>Layout result.</returns>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfStringLayoutResult">
            <summary>
            Layouter result.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfStringLayoutResult.Remainder">
            <summary>
            Gets the text which is not layouted
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfStringLayoutResult.ActualSize">
            <summary>
            Gets the actual layouted text bounds
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfStringLayoutResult.Lines">
            <summary>
            Gets layouted lines information.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfStringLayoutResult.LineHeight">
            <summary>
            Gets the height of the line.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.LineInfo">
            <summary>
            Contains information about the line.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.LineInfo.LineType">
            <summary>
            Gets width of the line text.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.LineInfo.Text">
            <summary>
            Gets line text.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.LineInfo.Width">
            <summary>
            Gets width of the line text.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.LineType">
            <summary>
            Break type of the line.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.LineType.None">
            <summary>
            Unknown type line.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.LineType.NewLineBreak">
            <summary>
            The line has new line symbol.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.LineType.LayoutBreak">
            <summary>
            layout break.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.LineType.FirstParagraphLine">
            <summary>
            The line is the first in the paragraph.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.LineType.LastParagraphLine">
            <summary>
            The line is the last in the paragraph.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.PageResourceLoader.GetPatternGraphicResources(Spire.Pdf.Primitives.PdfDictionary)">
            <summary>
             Collects all the Pattern elements in the pdf document
            </summary>
            <param name="resourceDictionary">containing all the resources of the document</param>
            <returns>dictionary of Pattern elements</returns>
        </member>
        <member name="T:Spire.Pdf.General.Render.Font.TrueTypeFont.GlyphMatrix">
            <summary>
            Description of GlyphMatrix.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Render.Font.TrueTypeFont.GlyphMatrix.HAdvance">
            <summary>
            最大的宽度值
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.PDFFontEncoding.GetCMapObj(System.String)">
            <summary>
            Get Cmap  by MapName
            </summary>
            <param name="cMapName"></param>
            <returns></returns>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.ApplyTranslate">
            This constant is used for the internal state variable to indicate
            that the translation components of the matrix (m03, m13, m23) need
            to be added to complete the transformation equation of this transform.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.ApplyScale">
            This constant is used for the internal state variable to indicate
            that the scaling components of the matrix (m00, m11, m22) need
            to be factored in to complete the transformation equation of
            this transform.  If the ApplyShear bit is also set then it
            indicates that the scaling components are not all 0.0.  If the
            ApplyShear bit is not also set then it indicates that the
            scaling components are not all 1.0.  If neither the ApplyShear
            nor the ApplyScale bits are set then the scaling components
            are both 1.0, which means that the x, y and z components contribute
            to the transformed coordinate, but they are not multiplied by
            any scaling factor.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.ApplyShear">
            This constant is used for the internal state variable to indicate
            that the shearing components of the matrix (m01, m02, m10, m12, m20, m21) 
            need to be factored in to complete the transformation equation of this
            transform. The presence of this bit in the state variable changes the 
            interpretation of the ApplyScale bit as indicated in its documentation.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.ApplyProjection">
            This constant is used for the internal state variable to indicate
            that the projection components of the matrix (m30, m31, m32) need
            to be factored in to complete the transformation equation of this
            transform.  
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.ApplyOverallScale">
            This constant is used for the internal state variable to indicate
            that the overall scaling component of the matrix (m33) need to be 
            factored in to complete the transformation equation of this transform.  
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.m00">
            The X coordinate scaling element of the 4x4
            affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.m01">
            The YX coordinate shearing element of the 4x4
            affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.m02">
            The XZ coordinate shearing element of the 4x4
            affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.m03">
            The X coordinate of the translation element of the
            4x4 affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.m10">
            The YX coordinate shearing element of the 4x4
            affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.m11">
            The Y coordinate scaling element of the 4x4
            affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.m12">
            The YZ coordinate shearing element of the 4x4
            affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.m13">
            The Y coordinate of the translation element of the
            4x4 affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.m20">
            The ZX coordinate shearing element of the 4x4
            affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.m21">
            The ZY coordinate shearing element of the 4x4
            affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.m22">
            The Z coordinate scaling element of the 4x4
            affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.m23">
            The Z coordinate of the translation element of the
            4x4 affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.m30">
            The X projection element of the 4x4
            affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.m31">
            The Y projection element of the 4x4
            affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.m32">
            The Z projection element of the 4x4
            affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.m33">
            The overall scaling element of the 4x4
            affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.mState">
            This field keeps track of which components of the matrix need to
            be applied when performing a transformation.
            @see #ApplyIdentity
            @see #ApplyTranslate
            @see #ApplyScale
            @see #ApplyShear
            @see #ApplyProjection
            @see #ApplyOverallScale
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.PsTDMatrix.UpdateState">
            Manually recalculates the state of the transform when the matrix
            changes too much to predict the effects on the state.
        </member>
        <member name="T:Spire.Pdf.Fields.FieldFlags">
            <summary>
            Represents fields flags enum.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.Default">
            <summary>
            Default field flag.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.ReadOnly">
            <summary>
            If set, the user may not change the value of the field. Any associated widget annotations 
            will not interact with the user; that is, they will not respond to mouse clicks or 
            change their appearance in response to mouse motions. This flag is useful 
            for fields whose values are computed or imported from a database.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.Required">
            <summary>
            If set, the field must have a value at the time it is exported by a submit-form action.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.NoExport">
            <summary>
            If set, the field must not be exported by a submit-form action
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.Multiline">
            <summary>
            If set, the field can contain multiple lines of text; 
            if clear, the fields text is restricted to a single line.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.Password">
            <summary>
            If set, the field is intended for entering a secure password that should not be 
            echoed visibly to the screen. Characters typed from the keyboard should instead 
            be echoed in some unreadable form, such as asterisks or bullet characters.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.FileSelect">
            <summary>
            If set, the text entered in the field represents the pathname of a file whose 
            contents are to be submitted as the value of the field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.DoNotSpellCheck">
            <summary>
            If set, text entered in the field is not spell-checked.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.DoNotScroll">
            <summary>
            If set, the field does not scroll (horizontally for single-line fields, vertically 
            for multiple-line fields) to accommodate more text than fits within its annotation 
            rectangle. Once the field is full, no further text is accepted.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.Comb">
            <summary>
            Meaningful only if the MaxLen entry is present in the text field dictionary and if 
            the Multiline, Password, and FileSelect flags are clear. If set, the field is 
            automatically divided into as many equally spaced positions, or combs, as the 
            value of MaxLen, and the text is laid out into those combs.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.RichText">
            <summary>
            If set, the value of this field should be represented as a rich text string.
            If the field has a value, the RVentry of the field dictionary specifies 
            the rich text string.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.NoToggleToOff">
            <summary>
            If set, exactly one radio button must be selected at all times; clicking 
            the currently selected button has no effect. If clear, clicking the selected 
            button reselects it, leaving no button selected.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.Radio">
            <summary>
            If set, the field is a set of radio buttons; if clear, the field is a check box. 
            This flag is meaningful only if the Pushbutton flag is clear.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.PushButton">
            <summary>
            If set, the field is a pushbutton that does not retain a permanent value.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.RadiosInUnison">
            <summary>
            If set, a group of radio buttons within a radio button field that use the same value 
            for the on state will turn on and off in unison; that is if one is checked, they 
            are all checked. If clear, the buttons are mutually exclusive.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.Combo">
            <summary>
            If set, the field is a combo box; if clear, the field is a list box.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.Edit">
            <summary>
            If set, the combo box includes an editable text box as well as a drop-down 
            list; if clear, it includes only a drop-down list. This flag is meaningful only 
            if the Combo flag is set.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.Sort">
            <summary>
            If set, the fields option items should be sorted alphabetically. This flag 
            is intended for use by form authoring tools, not by PDF viewer applications.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.MultiSelect">
            <summary>
            If set, more than one of the fields option items may be selected simultaneously; 
            if clear, no more than one item at a time may be selected.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.FieldFlags.CommitOnSelChange">
            <summary>
            If set, the new value is committed as soon as a selection is made with the pointing 
            device. This option enables applications to perform an action once a selection is 
            made, without requiring the user to exit the field. If clear, the new value is not 
            committed until the user exits the field.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfBorderStyle">
            <summary>
            Specifies the available styles for a field border.
            </summary>
            <remarks>Defaule value is Solid.</remarks>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfBorderStyle.Solid">
            <summary>
            A solid rectangle surrounding the annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfBorderStyle.Dashed">
            <summary>
            A dashed rectangle surrounding the annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfBorderStyle.Beveled">
            <summary>
            A simulated embossed rectangle that appears to be raised above the surface 
            of the page.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfBorderStyle.Inset">
            <summary>
            A simulated engraved rectangle that appears to be recessed below the surface 
            of the page.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfBorderStyle.Underline">
            <summary>
            A single line along the bottom of the annotation rectangle.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfHighlightMode">
            <summary>
            Specifies the highlight mode for a field.
            </summary>
            <remarks>Defaule value is Invert.</remarks>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfHighlightMode.NoHighlighting">
            <summary>
            No highlighting.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfHighlightMode.Invert">
            <summary>
            Invert the contents of the field rectangle.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfHighlightMode.Outline">
            <summary>
            Invert the field's border.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfHighlightMode.Push">
            <summary>
            Pushed highlighting.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfCheckBoxStyle">
            <summary>
            Specifies the style for a check box field.
            </summary>
            <remarks>The default value is Check.</remarks>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfCheckBoxStyle.Check">
            <summary>
            A check mark is used for the checked state.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfCheckBoxStyle.Circle">
            <summary>
            A circle is used for the checked state. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfCheckBoxStyle.Cross">
            <summary>
            A cross is used for the checked state.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfCheckBoxStyle.Diamond">
            <summary>
            A diamond symbol is used for the checked state. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfCheckBoxStyle.Square">
            <summary>
            A square is used for the checked state.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfCheckBoxStyle.Star">
            <summary>
            A star is used for the checked state.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Fields.HttpMethod">
            <summary>
            Specifies Http request method.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.HttpMethod.Get">
            <summary>
            Data submitted using Http Get method.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.HttpMethod.Post">
            <summary>
            Data submitted using Http Post method.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Fields.SubmitDataFormat">
            <summary>
            Specifies the enumeration of submit data formats.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.SubmitDataFormat.Html">
            <summary>
            Data should be transmitted as Html.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.SubmitDataFormat.Pdf">
            <summary>
            Data should be transmitted as Pdf.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.SubmitDataFormat.Fdf">
            <summary>
            Data should be transmitted as Forms Data Format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.SubmitDataFormat.Xfdf">
            <summary>
            Data should be transmitted as XML Forms Data Format .
            </summary>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfCheckFieldState">
            <summary>
            Represents states of the check field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfCheckFieldState.Unchecked">
            <summary>
            Indicated unchecked/unpressed state.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfCheckFieldState.Checked">
            <summary>
            Indicated checked unpressed state.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfCheckFieldState.PressedUnchecked">
            <summary>
            Indicated pressed unchecked state.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Fields.PdfCheckFieldState.PressedChecked">
            <summary>
            Indicated pressed checked state.
            </summary>
        </member>
        <member name="T:Spire.Pdf.FileFormat">
            <summary>
            Specifies the type of file format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfFileFormat.Plain">
            <summary>
            Specifies plain PDF file format.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfFileFormat.Linearized">
            <summary>
            Specifies Linearized PDF file format.
            </summary>
        </member>
        <member name="T:Spire.Pdf.HttpReadType">
            <summary>
            Specifies the different way of presenting the document at the client browser.
            </summary>
        </member>
        <member name="F:Spire.Pdf.HttpReadType.Open">
            <summary>
            Send the generated document to the client browser and will open document inside browser or using application associated with .pdf extension externally.
            </summary>
        </member>
        <member name="F:Spire.Pdf.HttpReadType.Save">
            <summary>
            Send the generated document to the client browser and presents an option to save the document to disk or open inside the browser.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfVersion">
            <summary>
            Specifies the available PDF versions to save a PDF document.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfVersion.Version1_0">
            <summary>
            PDF version 1.0.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfVersion.Version1_1">
            <summary>
            PDF version 1.1.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfVersion.Version1_2">
            <summary>
            PDF version 1.2.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfVersion.Version1_3">
            <summary>
            PDF version 1.3. Adobe Acrobat 4.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfVersion.Version1_4">
            <summary>
            PDF version 1.4. Adobe Acrobat 5.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfVersion.Version1_5">
            <summary>
            PDF version 1.5. Adobe Acrobat 6.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfVersion.Version1_6">
            <summary>
            PDF version 1.6. Adobe Acrobat 7.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfVersion.Version1_7">
            <summary>
            PDF version 1.7. Adobe Acrobat 8.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfCrossReferenceType">
            <summary>
            Specifies the type of the PDF cross-reference.
            </summary>
            <remarks>Default value is CrossReferenceStream</remarks>
        </member>
        <member name="F:Spire.Pdf.PdfCrossReferenceType.CrossReferenceTable">
            <summary>
            The cross-reference table contains information that permits random access to indirect objects within the file so that the entire file need not be read to locate any particular object. The structure is useful for incremental updates, since it allows a new cross-reference section to be added to the PDF file, containing entries only for objects that have been added or deleted. Cross-reference is represented by cross-reference table. The cross-reference table is the traditional way of representing reference type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfCrossReferenceType.CrossReferenceStream">
            <summary>
            Cross-reference is represented by cross-reference stream. Cross-reference streams are stream objects, and contain a dictionary and a data stream.
            This leads to more compact representation of the file data especially along with the compression enabled.
            This format is supported by PDF 1.5 version and higher only.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfConformanceLevel">
            <summary>
            Specifies the Pdf document's Conformance-level.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfConformanceLevel.None">
            <summary>
            Specifies Default / No Conformance.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfConformanceLevel.Pdf_A1B">
            <summary>
            This PDF/A ISO standard [ISO 19005-1:2005] is based on Adobe PDF version 1.4
            and This Level B conformance indicates minimal compliance to ensure that the 
            rendered visual appearance of a conforming file is preservable over the long term.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfConformanceLevel.Pdf_X1A2001">
            <summary>
            This PDF/X-1a:2001 ISO standard [ISO 15930-1] is based on Adobe PDF version 1.3
            which uses only CMYK + Spot Color and this compliance to ensure that the 
            contents will be reliably reproduced in the repress environment.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PrintScalingMode">
            <summary>
            Specifies the different page scaling option that shall be selected when a print dialog is displayed for this document.
            </summary>
            <remarks>Default value is AppDefault.</remarks>
        </member>
        <member name="F:Spire.Pdf.PrintScalingMode.AppDefault">
            <summary>
            Indicates the conforming readers default print scaling.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PrintScalingMode.None">
            <summary>
            Indicates no page scaling.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Bookmarks.PdfTextStyle">
            <summary>
            Allows to choose outline text style.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Bookmarks.PdfTextStyle.Regular">
            <summary>
            Regular text style.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Bookmarks.PdfTextStyle.Italic">
            <summary>
            Italic text style.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Bookmarks.PdfTextStyle.Bold">
            <summary>
            Bold text style.
            </summary>
        </member>
        <member name="T:Spire.Pdf.AutomaticFields.PdfPageCountField">
            <summary>
            Represents total page count automatic field.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfPageCountField.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfPageCountField.#ctor(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfPageCountField.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfPageCountField.#ctor(Spire.Pdf.Graphics.PdfFontBase,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="P:Spire.Pdf.AutomaticFields.PdfPageCountField.NumberStyle">
            <summary>
            Gets or sets the number style.
            </summary>
            <value>The number style.</value>
        </member>
        <member name="T:Spire.Pdf.Barcode.TextLocation">
            <summary>
            Specifies the barcode text display location.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Barcode.TextLocation.None">
            <summary>
            Displays, no text.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Barcode.TextLocation.Top">
            <summary>
            Displays text, above the barcode.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Barcode.TextLocation.Bottom">
            <summary>
             Displays text, at the bottom of the barcode.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Barcode.PdfBarcodeTextAlignment">
            <summary>
            Specifies the barcode text alignment.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Barcode.PdfBarcodeTextAlignment.Left">
            <summary>
            Displays the readable text on the left side of the barcode. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Barcode.PdfBarcodeTextAlignment.Center">
            <summary>
            Displays the readable text at the center of the barcode. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Barcode.PdfBarcodeTextAlignment.Right">
            <summary>
             Displays the readable text on the right side of the barcode. 
            </summary>
        </member>
        <member name="T:Spire.Pdf.Barcode.PdfCode128BBarcode">
            <summary>
            Represents a Code128B Barcode.
            </summary>
            <remarks> Only the following symbols are allowed in a Code 128 B barcode:SPACE ! " # $ % ' ( ) * + , - . / 0 12 3 4 5 6 7 8 9 : ; ? @ A B C D E F G H I J K L M N O P Q R S T U V W X Y Z [ \ ]^ _ ` a b c d e f g h i j k l m n o p q r s t u v w x y z { | } ~ DEL (\x7F) FNC1 (\xF0) FNC2 (\xF1) FNC3 (\xF2) FNC4 (\xF3) SHIFT (\xF4). </remarks>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode128BBarcode.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfCode128BBarcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The Barcode text.</param>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfLineAnnotation">
            <summary>
            Represents a line annotation. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineAnnotation.m_captionType">
            <summary>
            To specifying Caption Type
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfLineAnnotation.#ctor(System.Int32[])">
            <summary>
            Initializes new instance of  class.
            </summary>
            <param name="linePoints">The line points.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfLineAnnotation.#ctor(System.Int32[],System.String)">
            <summary>
            Initializes new instance of  class.
            </summary>
            <param name="linePoints">The line points.</param>
            <param name="text">The line caption text.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfLineAnnotation.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes new instance of  class.
            </summary>
            <param name="rectangle">Bounds of the annotation.</param>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotation.LineCaption">
            <summary>
            Gets or sets whether the line annotation caption should be displayed.
            </summary>
            <value><c>true</c> if the line caption should be displayed, otherwise <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotation.LeaderLine">
            <summary>
            Gets or sets Leader Line 
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotation.LeaderLineExt">
            <summary>
            Gets or sets Leader Line Extension
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotation.lineBorder">
            <summary>
            Gets or sets Border style of the Line Annotation.
            </summary>
            <value>A  enumeration member specifying the border style for the line.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotation.BeginLineStyle">
            <summary>
            Gets or sets the style used for the beginning of the line. 
            </summary>
            <value>A  enumeration member specifying the begin style for the line.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotation.EndLineStyle">
            <summary>
            Gets or sets the style used for the end of the line. 
            </summary>
            <value>A  enumeration member specifying the end style for the line.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotation.CaptionType">
            <summary>
            Gets or sets the line caption text type.
            </summary>
            <value>A  enumeration member specifying the line caption type.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotation.LineIntent">
            <summary>
            Gets or sets LineIntent
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotation.InnerLineColor">
            <summary>
            Gets or sets Inner Color of the PdfLine
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotation.BackColor">
            <summary>
            Gets or sets Background Color of the PdfLine
            </summary>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Reader.XPSElementType">
            <summary>
            Enumerator representing the available XPS elements.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfPageLayer">
            <summary>
            Describes layer of the page.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfPageLayer.#ctor(Spire.Pdf.PdfPageBase)">
            <summary>
            Creates new layer.
            </summary>
            <param name="page">Parent page of the layer.</param>
        </member>
        <member name="P:Spire.Pdf.PdfPageLayer.Page">
            <summary>
            Gets parent page of the layer.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageLayer.Graphics">
            <summary>
            Gets Graphics context of the layer.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageLayer.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the wrapped element.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfTilingBrush">
            <summary>
            Implements a colored tiling brush.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTilingBrush.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rectangle">The boundaries of the smallest brush cell.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTilingBrush.#ctor(System.Drawing.RectangleF,Spire.Pdf.PdfNewPage)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rectangle">The boundaries of the smallest brush cell.</param>
            <param name="page">The Current Page Object.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTilingBrush.#ctor(System.Drawing.SizeF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="size">The size of the smallest brush cell.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTilingBrush.#ctor(System.Drawing.SizeF,Spire.Pdf.PdfNewPage)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="size">The size of the smallest brush cell.</param>
            <param name="page">The Current Page Object.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfTilingBrush.Clone">
            <summary>
            Creates a new copy of a brush.
            </summary>
            <returns>A new instance of the Brush class.</returns>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfTilingBrush.Rectangle">
            <summary>
            Gets the boundary box of the smallest brush cell.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfTilingBrush.Size">
            <summary>
            Gets the size of the smallest brush cell.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfTilingBrush.Graphics">
            <summary>
            Gets Graphics context of the brush.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfTilingBrush.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfCompressionLevel">
            <summary>
            Defines data compression level.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfCompressionLevel.None">
            <summary>
            Pack without compression.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfCompressionLevel.BestSpeed">
            <summary>
            Use high speed compression, reduce of data size is low.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfCompressionLevel.BelowNormal">
            <summary>
            Something middle between normal and BestSpeed compressions.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfCompressionLevel.Normal">
            <summary>
            Use normal compression, middle between speed and size.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfCompressionLevel.AboveNormal">
            <summary>
            Pack better but require a little more time.
            </summary>
        </member>
        <member name="F:Spire.Pdf.PdfCompressionLevel.Best">
            <summary>
            Use best compression, slow enough.
            </summary>
        </member>
        <member name="F:Spire.Pdf.CompressionType.None">
            <summary>
            No compression.
            </summary>
        </member>
        <member name="F:Spire.Pdf.CompressionType.Zlib">
            <summary>
            Compresses data using the zlib or deflate compression method,
            reproducing the original text or binary data.
            </summary>
        </member>
        <member name="F:Spire.Pdf.CompressionType.LZW">
            <summary>
            Compresses data using the LZW compression method, reproducing
            the original text or binary data.
            </summary>
        </member>
        <member name="F:Spire.Pdf.CompressionType.ASCII85">
            <summary>
            Compresses data using the ASCII85 compression method, reproducing
            the original text or binary data.
            </summary>
        </member>
        <member name="F:Spire.Pdf.StreamFilters.DCTDecode">
            <summary>
            Decompresses data encoded using a DCT (discrete cosine transform)
            technique based on the JPEG standard, reproducing image sample
            data that approximates the original data.
            </summary>
        </member>
        <member name="F:Spire.Pdf.StreamFilters.FlateDecode">
            <summary>
            Decompresses data encoded using the zlib / deflate
            compression method, reproducing the original text or binary
            data.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfTextBoxFieldWidget">
            <summary>
            Represents the text box field of an existing PDF document`s form.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Widget.PdfTextBoxFieldWidget.m_passwordValue">
            <summary>
            The password chrackter.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfTextBoxFieldWidget.BackColor">
            <summary>
            Get or Set the back color of the field
            </summary>
            <value>A  object specifying the background color of field. </value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfTextBoxFieldWidget.ForeColor">
            <summary>
            Gets or Set the fore color of the field.
            </summary>
            <value>A  object specifying the background color of field.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfTextBoxFieldWidget.TextAlignment">
            <summary>
            Get or Set the text alignment in a text box.
            </summary>
            <value>A  enumeration member specifying the text alignment in a text box.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfTextBoxFieldWidget.HighlightMode">
            <summary>
            Get or Set the HighLightMode of the Field.
            </summary>
            <value>A  enumeration member specifying the highlight mode in a text box.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfTextBoxFieldWidget.Text">
            <summary>
            Gets or Set value of the text box field.
            </summary>
            <value>A string value representing the value of the item. </value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfTextBoxFieldWidget.DefaultValue">
            <summary>
            Gets or set the default value of the field.
            </summary>
            <value>A string value representing the default value of the item. </value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfTextBoxFieldWidget.SpellCheck">
            <summary>
            Gets or sets a value indicating whether to check spelling.
            </summary>
            <value>True if the field content should be checked for spelling erorrs, false otherwise. Default is true.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfTextBoxFieldWidget.InsertSpaces">
            <summary>
            Meaningful only if the MaxLength property is set and the Multiline, Password properties are false.
            If set, the field is automatically divided into as many equally spaced positions, or combs, 
            as the value of MaxLength, and the text is laid out into those combs.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfTextBoxFieldWidget.Multiline">
            <summary>
            Gets or sets a value indicating whether this  is multiline.
            </summary>       
            <value>True if the field is multiline, false otherwise. Default is false.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfTextBoxFieldWidget.Password">
            <summary>
            Gets or sets a value indicating whether this  is password field.
            </summary>
            <value>True if the field is a password field, false otherwise. Default is false.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfTextBoxFieldWidget.Scrollable">
            <summary>
            Gets or sets a value indicating whether this  is scrollable.
            </summary>
            <value>True if the field content can be scrolled, false otherwise. Default is true.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfTextBoxFieldWidget.MaxLength">
            <summary>
            Gets or sets the maximum length of the field, in characters.
            </summary>
            <value>A positive integer value specifying the maximum number of characters that can be entered in the text edit field.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfTextBoxFieldWidget.WidgetItems">
            <summary>
            Gets the collection of text box field items. 
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfFileLinkAnnotationWidget">
            <summary>
            Represents the loaded file link annotation class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfFileLinkAnnotationWidget.FileName">
            <summary>
             Gets or sets the filename of the annotation.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Bookmarks.PdfBookmarkWidget">
            <summary>
            Represents loaded bookmark class.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Bookmarks.PdfBookmark">
            <summary>
            Each instance of this class represents
            an bookmark node in the bookmark tree.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Bookmarks.PdfBookmark.Destination">
            <summary>
            Gets or sets the outline destination.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Bookmarks.PdfBookmark.Title">
            <summary>
            Gets or sets the outline title.
            </summary>
            <remarks>The outline title is the text,
            which appears in the outline tree as a tree node.</remarks>
        </member>
        <member name="P:Spire.Pdf.Bookmarks.PdfBookmark.Color">
            <summary>
            Gets or sets the color.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Bookmarks.PdfBookmark.DisplayStyle">
            <summary>
            Gets or sets the text style.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Bookmarks.PdfBookmark.Action">
            <summary>
            Gets or sets the Action for the Outline.
            </summary>        
        </member>
        <member name="P:Spire.Pdf.Bookmarks.PdfBookmarkWidget.Destination">
            <summary>
            Gets or sets the outline destination.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Bookmarks.PdfBookmarkWidget.Title">
            <summary>
            Gets or sets the outline title.
            </summary>
            <remarks>The outline title is the text,
            which appears in the outline tree as a tree node.</remarks>
        </member>
        <member name="P:Spire.Pdf.Bookmarks.PdfBookmarkWidget.Color">
            <summary>
            Gets or sets the color.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Bookmarks.PdfBookmarkWidget.DisplayStyle">
            <summary>
            Gets or sets the text style.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfStampCollection">
            <summary>
            A collection of stamps that are applied to the page templates.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfStampCollection.#ctor">
            <summary>
            Creates a new stamp collection.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfStampCollection.Add(Spire.Pdf.PdfPageTemplateElement)">
            <summary>
            Adds a stamp element to the collection.
            </summary>
            <param name="template">The stamp element.</param>
            <returns>The index of the stamp element.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfStampCollection.Add(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a stamp element and adds it to the collection.
            </summary>
            <param name="x">X co-ordinate of the stamp.</param>
            <param name="y">Y co-ordinate of the stamp.</param>
            <param name="width">Width of the stamp.</param>
            <param name="height">Height of the stamp.</param>
            <returns>The created stamp element.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfStampCollection.Contains(Spire.Pdf.PdfPageTemplateElement)">
            <summary>
            Checks whether the stamp element exists in the collection.
            </summary>
            <param name="template">Stamp element.</param>
            <returns>True - if stamp element exists in the collection, False otherwise.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfStampCollection.Insert(System.Int32,Spire.Pdf.PdfPageTemplateElement)">
            <summary>
            Inserts a stamp element to the collection at the specified position.
            </summary>
            <param name="index">The index of the stamp in the collection.</param>
            <param name="template">The stamp element.</param>
        </member>
        <member name="M:Spire.Pdf.PdfStampCollection.Remove(Spire.Pdf.PdfPageTemplateElement)">
            <summary>
            Removes the stamp element from the collection.
            </summary>
            <param name="template">The stamp element.</param>
        </member>
        <member name="M:Spire.Pdf.PdfStampCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a stamp element from the specified position in the collection.
            </summary>
            <param name="index">The index of the stamp in the collection.</param>
        </member>
        <member name="M:Spire.Pdf.PdfStampCollection.Clear">
            <summary>
            Cleares the collection.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Spire.Pdf.PdfStampCollection.GetEnumerator" -->
        <member name="P:Spire.Pdf.PdfStampCollection.Item(System.Int32)">
            <summary>
            Gets a stamp element by its index.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfStampCollection.PdfPageTemplateEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element;
            false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="M:Spire.Pdf.PdfStampCollection.PdfPageTemplateEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="P:Spire.Pdf.PdfStampCollection.PdfPageTemplateEnumerator.Current">
            <summary>
            Gets the current section.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PrivateFontStructOfPdf.FontPath">
            <summary>
            Gets or sets the path of the font.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PrivateFontStructOfPdf.FontStream">
            <summary>
            Gets or set the font stream.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PrivateFontStructOfPdf.PrivateFontCollection">
            <summary>
            Gets or sets the private font collection.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.TypeIdentity">
            An identity transform is one in which the output coordinates are
            always the same as the input coordinates.
            If this transform is anything other than the identity transform,
            the type will either be the constant GENERAL_TRANSFORM or a
            combination of the appropriate flag bits for the various coordinate
            conversions that this transform performs.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.TypeTranslation">
            A translation moves the coordinates by a constant amount in x
            and y without changing the length or angle of vectors.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.TypeUniformScale">
            A uniform scale multiplies the length of vectors by the same amount
            in both the x and y directions without changing the angle between
            vectors.
            This flag bit is mutually exclusive with the TypeGeneralScale flag.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.TypeGeneralScale">
            A general scale multiplies the length of vectors by different
            amounts in the x and y directions without changing the angle
            between perpendicular vectors.
            This flag bit is mutually exclusive with the TypeUniformScale flag.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.TypeMaskScale">
            This constant is a bit mask for any of the scale flag bits.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.TypeFlip">
            This flag bit indicates that the transform defined by this object
            performs a mirror image flip about some axis which changes the
            normally right handed coordinate system into a left handed
            system in addition to the conversions indicated by other flag bits.
            A right handed coordinate system is one where the positive X
            axis rotates counterclockwise to overlay the positive Y axis
            similar to the direction that the fingers on your right hand
            curl when you stare end on at your thumb.
            A left handed coordinate system is one where the positive X
            axis rotates clockwise to overlay the positive Y axis similar
            to the direction that the fingers on your left hand curl.
            There is no mathematical way to determine the angle of the
            original flipping or mirroring transformation since all angles
            of flip are identical given an appropriate adjusting rotation.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.TypeQuadrantRotation">
            This flag bit indicates that the transform defined by this object
            performs a quadrant rotation by some multiple of 90 degrees in
            addition to the conversions indicated by other flag bits.
            A rotation changes the angles of vectors by the same amount
            regardless of the original direction of the vector and without
            changing the length of the vector.
            This flag bit is mutually exclusive with the TypeGeneralRotation flag.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.TypeGeneralRotation">
            This flag bit indicates that the transform defined by this object
            performs a rotation by an arbitrary angle in addition to the
            conversions indicated by other flag bits.
            A rotation changes the angles of vectors by the same amount
            regardless of the original direction of the vector and without
            changing the length of the vector.
            This flag bit is mutually exclusive with the
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.TypeMaskRotation">
            This constant is a bit mask for any of the rotation flag bits.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.TypeGeneralTransform">
            This constant indicates that the transform defined by this object
            performs an arbitrary conversion of the input coordinates.
            If this transform can be classified by any of the above constants,
            the type will either be the constant TypeIdentity or a
            combination of the appropriate flag bits for the various coordinate
            conversions that this transform performs.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.ApplyIdentity">
            This constant is used for the internal state variable to indicate
            that no calculations need to be performed and that the source
            coordinates only need to be copied to their destinations to
            complete the transformation equation of this transform.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.ApplyTranslate">
            This constant is used for the internal state variable to indicate
            that the translation components of the matrix (m02 and m12) need
            to be added to complete the transformation equation of this transform.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.ApplyScale">
            This constant is used for the internal state variable to indicate
            that the scaling components of the matrix (m00 and m11) need
            to be factored in to complete the transformation equation of
            this transform.  If the ApplyShear bit is also set then it
            indicates that the scaling components are not both 0.0.  If the
            ApplyShear bit is not also set then it indicates that the
            scaling components are not both 1.0.  If neither the ApplyShear
            nor the ApplyScale bits are set then the scaling components
            are both 1.0, which means that the x and y components contribute
            to the transformed coordinate, but they are not multiplied by
            any scaling factor.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.ApplyShear">
            This constant is used for the internal state variable to indicate
            that the shearing components of the matrix (m01 and m10) need
            to be factored in to complete the transformation equation of this
            transform.  The presence of this bit in the state variable changes
            the interpretation of the ApplyScale bit as indicated in its
            documentation.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.m00">
            The X coordinate scaling element of the 3x3
            affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.m01">
            The X coordinate shearing element of the 3x3
            affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.m02">
            The X coordinate of the translation element of the
            3x3 affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.m10">
            The Y coordinate shearing element of the 3x3
            affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.m11">
            The Y coordinate scaling element of the 3x3
            affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.m12">
            The Y coordinate of the translation element of the
            3x3 affine transformation matrix.
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.mState">
            This field keeps track of which components of the matrix need to
            be applied when performing a transformation.
            @see #ApplyIdentity
            @see #ApplyTranslate
            @see #ApplyScale
            @see #ApplyShear
        </member>
        <member name="F:Spire.Pdf.General.Paper.Drawing.PsMatrix.mType">
            This field caches the current transformation type of the matrix.
            @see #TypeIdentity
            @see #TypeTranslation
            @see #TypeUniformScale
            @see #TypeGeneralScale
            @see #TypeFlip
            @see #TypeQuadrantRotation
            @see #TypeGeneralRotation
            @see #TypeGeneralTransform
            @see #TypeUnknown
        </member>
        <member name="M:Spire.Pdf.General.Paper.Drawing.PsMatrix.UpdateState">
             Manually recalculates the state of the transform when the matrix
             changes too much to predict the effects on the state.
             The following table specifies what the various settings of the
             state field say about the values of the corresponding matrix
             element fields.
             Note that the rules governing the SCALE fields are slightly
             different depending on whether the SHEAR flag is also set.
             <pre>
                                 SCALE            SHEAR          TRANSLATE
                                m00/m11          m01/m10          m02/m12
            
             IDENTITY             1.0              0.0              0.0
             TRANSLATE (TR)       1.0              0.0          not both 0.0
             SCALE (SC)       not both 1.0         0.0              0.0
             TR | SC          not both 1.0         0.0          not both 0.0
             SHEAR (SH)           0.0          not both 0.0         0.0
             TR | SH              0.0          not both 0.0     not both 0.0
             SC | SH          not both 0.0     not both 0.0         0.0
             TR | SC | SH     not both 0.0     not both 0.0     not both 0.0
             </pre>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfFormFieldCollection">
            <summary>
            Represents a collection of form fields.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfFormFieldCollection.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="T:Spire.Pdf.ColorSpace.PdfSeparationColorSpace">
            <summary>
            Represents a separation colorspace
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfSeparationColorSpace.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfSeparationColorSpace.GetProfileData">
            <summary>
            Get the profile data.
            </summary>
            <returns>The profile data</returns>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfSeparationColorSpace.AlternateColorSpaces">
            <summary>
            Gets or sets the alternate color spaces.
            </summary>
            <value>The alternate color space to be used when the destination device does not support separation colorspace.</value>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfSeparationColorSpace.Colorant">
            <summary>
            Gets or sets the colorant represented by this separation colorspace. 
            </summary>
            <value>The name of the colorant.</value>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfSeparationColorSpace.TintTransform">
            <summary>
            Gets or sets the tint transform function for the this colorspace. 
            </summary>
            <value>Tint transform function for the colorspace.</value>
        </member>
        <member name="T:Spire.Pdf.ColorSpace.PdfSeparationColor">
            <summary>
            Represents a separation color, based on a separation colorspace. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfSeparationColor.#ctor(Spire.Pdf.ColorSpace.PdfColorSpaces)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="colorspace">The colorspace.</param>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfSeparationColor.Tint">
            <summary>
            Gets or sets the Tint Value.
            </summary>
            <value>A float value specifying the tint of this color.</value>
            <remarks>The acceptable range for this value is [0.0 1.0]. 0.0 means the lightest color that can be achieved, and 1.0 means the darkest color.</remarks>
        </member>
        <member name="T:Spire.Pdf.ColorSpace.PdfKnownColorSpace">
            <summary>
            Represents an indexed colorspace.
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfKnownColorSpace.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfKnownColorSpace.GetProfileData">
            <summary>
            Gets the profile data.
            </summary>
            <returns>The profile data.</returns>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfKnownColorSpace.BaseColorSpace">
            <summary>
            Gets or sets the base colorspace. 
            </summary>
            <value>The color space in which the values in the color table are to be interpreted.</value>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfKnownColorSpace.MaxColorIndex">
            <summary>
            Gets or sets the index of the max color.
            </summary>
            <value>The maximum index that can be used to access the values in the color table.</value>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfKnownColorSpace.IndexedColorTable">
            <summary>
            Gets or sets the color table. 
            </summary>
            <value>The table of color components.</value>
            <remarks>The color table data must be m * (maxIndex + 1) bytes long, where m is the number of color components in the base color space. Each byte is an unsigned integer in the range 0 to 255 that is scaled to the range of the corresponding color component in the base color space; that is, 0 corresponds to the minimum value in the range for that component, and 255 corresponds to the maximum.</remarks>
        </member>
        <member name="T:Spire.Pdf.ColorSpace.PdfDeviceColorSpace">
            <summary>
            Represents a device colorspace.
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfDeviceColorSpace.#ctor(Spire.Pdf.Graphics.PdfColorSpace)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="colorspace">The colorspace.</param>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfDeviceColorSpace.DeviceColorSpaceType">
            <summary>
            Gets or sets the DeviceColorSpaceType
            </summary>
        </member>
        <member name="T:Spire.Pdf.Barcode.PdfBarcodeException">
            <summary>
            Represents the general barcode exception class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfBarcodeException.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfBarcodeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="message">User defined error message.</param>
        </member>
        <member name="M:Spire.Pdf.Barcode.PdfBarcodeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="message">User defined error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfTextWebLink">
            <summary>
            Represents the class for text web link annotation.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfTextWebLink.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfTextWebLink.DrawTextWebLink(Spire.Pdf.PdfNewPage,System.Drawing.PointF)">
            <summary>
            Draws a Text Web Link on the Page
            </summary>
            <param name="page">The page where the annotation should be placed.</param>
            <param name="location">The location of the annotation.</param>
            <returns>Pdf Layout result</returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfTextWebLink.DrawTextWebLink(Spire.Pdf.Graphics.PdfCanvas,System.Drawing.PointF)">
            <summary>
            Draw a Text Web Link on the Graphics
            </summary>
            <param name="g">The  object specifies where annotation should be placed..</param>
            <param name="location">The location of the annotation.</param>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfTextWebLink.Url">
            <summary>
            Gets or sets the Url address.
            </summary>
        </member>
        <member name="P:Spire.Compression.Zip.ZipArchive.DicZipArchiveItem">
            <summary>
            Returns m_dicItems
            </summary>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.MatrixTransform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.MatrixTransform.Matrix">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.MatrixTransform.Key">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.SolidColorBrush">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.SolidColorBrush.Opacity">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.SolidColorBrush.Key">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.SolidColorBrush.Color">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.ImageBrush">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ImageBrush.ImageBrushTransform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ImageBrush.Opacity">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ImageBrush.Key">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ImageBrush.Transform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ImageBrush.Viewbox">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ImageBrush.Viewport">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ImageBrush.TileMode">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ImageBrush.ViewboxUnits">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ImageBrush.ViewportUnits">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ImageBrush.ImageSource">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.Transform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Transform.MatrixTransform">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.TileMode">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.TileMode.None">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.TileMode.Tile">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.TileMode.FlipX">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.TileMode.FlipY">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.TileMode.FlipXY">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.ViewUnits">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.ViewUnits.Absolute">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.VisualBrush">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.VisualBrush.VisualBrushTransform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.VisualBrush.VisualBrushVisual">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.VisualBrush.Opacity">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.VisualBrush.Key">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.VisualBrush.Transform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.VisualBrush.Viewbox">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.VisualBrush.Viewport">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.VisualBrush.TileMode">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.VisualBrush.ViewboxUnits">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.VisualBrush.ViewportUnits">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.VisualBrush.Visual">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.Visual">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Visual.Item">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.Canvas">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Canvas.CanvasResources">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Canvas.CanvasRenderTransform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Canvas.CanvasClip">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Canvas.CanvasOpacityMask">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Canvas.Items">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Canvas.RenderTransform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Canvas.Clip">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Canvas.Opacity">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Canvas.OpacityMask">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Canvas.Name">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Canvas.RenderOptionsEdgeMode">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Canvas.RenderOptionsEdgeModeSpecified">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Canvas.FixedPageNavigateUri">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Canvas.lang">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Canvas.Key">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Canvas.AutomationPropertiesName">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Canvas.AutomationPropertiesHelpText">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.Resources">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Resources.ResourceDictionary">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.ResourceDictionary">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ResourceDictionary.Items">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ResourceDictionary.Source">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.Glyphs">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.GlyphsRenderTransform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.GlyphsClip">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.GlyphsOpacityMask">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.GlyphsFill">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.BidiLevel">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.CaretStops">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.DeviceFontName">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.Fill">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.FontRenderingEmSize">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.FontUri">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.OriginX">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.OriginY">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.IsSideways">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.Indices">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.UnicodeString">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.StyleSimulations">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.RenderTransform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.Clip">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.Opacity">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.OpacityMask">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.Name">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.FixedPageNavigateUri">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.lang">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Glyphs.Key">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.Geometry">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Geometry.PathGeometry">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.PathGeometry">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PathGeometry.PathGeometryTransform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PathGeometry.PathFigure">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PathGeometry.Figures">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PathGeometry.FillRule">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PathGeometry.Transform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PathGeometry.Key">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.PathFigure">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PathFigure.Items">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PathFigure.IsClosed">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PathFigure.StartPoint">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PathFigure.IsFilled">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.ArcSegment">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ArcSegment.Point">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ArcSegment.Size">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ArcSegment.RotationAngle">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ArcSegment.IsLargeArc">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ArcSegment.SweepDirection">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.ArcSegment.IsStroked">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.SweepDirection">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.SweepDirection.Clockwise">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.SweepDirection.Counterclockwise">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.PolyBezierSegment">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PolyBezierSegment.Points">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PolyBezierSegment.IsStroked">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.PolyLineSegment">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PolyLineSegment.Points">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PolyLineSegment.IsStroked">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.PolyQuadraticBezierSegment">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PolyQuadraticBezierSegment.Points">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PolyQuadraticBezierSegment.IsStroked">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.FillRule">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.FillRule.EvenOdd">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.FillRule.NonZero">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.Brush">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Brush.Item">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.LinearGradientBrush">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.LinearGradientBrush.LinearGradientBrushTransform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.LinearGradientBrush.LinearGradientBrushGradientStops">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.LinearGradientBrush.Opacity">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.LinearGradientBrush.Key">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.LinearGradientBrush.ColorInterpolationMode">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.LinearGradientBrush.SpreadMethod">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.LinearGradientBrush.MappingMode">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.LinearGradientBrush.Transform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.LinearGradientBrush.StartPoint">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.LinearGradientBrush.EndPoint">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.GradientStop">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.GradientStop.Color">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.GradientStop.Offset">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.ClrIntMode">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.ClrIntMode.ScRgbLinearInterpolation">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.ClrIntMode.SRgbLinearInterpolation">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.SpreadMethod">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.SpreadMethod.Pad">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.SpreadMethod.Reflect">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.SpreadMethod.Repeat">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.MappingMode">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.MappingMode.Absolute">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.RadialGradientBrush">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.RadialGradientBrush.RadialGradientBrushTransform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.RadialGradientBrush.RadialGradientBrushGradientStops">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.RadialGradientBrush.Opacity">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.RadialGradientBrush.Key">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.RadialGradientBrush.ColorInterpolationMode">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.RadialGradientBrush.SpreadMethod">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.RadialGradientBrush.MappingMode">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.RadialGradientBrush.Transform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.RadialGradientBrush.Center">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.RadialGradientBrush.GradientOrigin">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.RadialGradientBrush.RadiusX">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.RadialGradientBrush.RadiusY">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.StyleSimulations">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.StyleSimulations.None">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.StyleSimulations.ItalicSimulation">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.StyleSimulations.BoldSimulation">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.StyleSimulations.BoldItalicSimulation">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.Path">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.PathRenderTransform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.PathClip">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.PathOpacityMask">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.PathFill">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.PathStroke">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.PathData">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.Data">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.Fill">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.RenderTransform">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.Clip">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.Opacity">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.OpacityMask">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.Stroke">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.StrokeDashArray">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.StrokeDashCap">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.StrokeDashOffset">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.StrokeEndLineCap">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.StrokeStartLineCap">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.StrokeLineJoin">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.StrokeMiterLimit">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.StrokeThickness">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.Name">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.FixedPageNavigateUri">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.lang">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.Key">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.AutomationPropertiesName">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.AutomationPropertiesHelpText">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.SnapsToDevicePixels">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Path.SnapsToDevicePixelsSpecified">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.DashCap">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.DashCap.Flat">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.DashCap.Round">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.DashCap.Square">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.DashCap.Triangle">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.LineCap">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.LineCap.Flat">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.LineCap.Round">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.LineCap.Square">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.LineCap.Triangle">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.LineJoin">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.LineJoin.Miter">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.LineJoin.Bevel">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.LineJoin.Round">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.EdgeMode">
            <remarks/>
        </member>
        <member name="F:Spire.Pdf.Exporting.XPS.Schema.EdgeMode.Aliased">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.FixedPage">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.FixedPage.FixedPageResources">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.FixedPage.Items">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.FixedPage.Width">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.FixedPage.Height">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.FixedPage.ContentBox">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.FixedPage.BleedBox">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.FixedPage.lang">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.FixedPage.Name">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.FixedDocument">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.FixedDocument.PageContent">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.PageContent">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PageContent.PageContentLinkTargets">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PageContent.Source">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PageContent.Width">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PageContent.WidthSpecified">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PageContent.Height">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.PageContent.HeightSpecified">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.LinkTarget">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.LinkTarget.Name">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.FixedDocumentSequence">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.FixedDocumentSequence.DocumentReference">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.DocumentReference">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.DocumentReference.Source">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.LinkTargets">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.LinkTargets.LinkTarget">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Exporting.XPS.Schema.GradientStops">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.GradientStops.GradientStop">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Mc.AlternateContent.Items">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Mc.Choice.Items">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Mc.Fallback.Items">
            <remarks/>
        </member>
        <member name="P:Spire.Pdf.Exporting.XPS.Schema.Mc.Baloo.Items">
            <remarks/>
        </member>
        <member name="T:Spire.Pdf.Xmp.XmpStructureType">
            <summary>
            Enumerates types of the xmp structure.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Xmp.XmpStructureType.Dimensions">
            <summary>
            A structure containing dimensions for a drawn object.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Xmp.XmpStructureType.Font">
            <summary>
            A structure containing the characteristics of a font used in a document.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Xmp.XmpStructureType.Colorant">
            <summary>
            A structure containing the characteristics of a Coloring (swatch) used in a document.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Xmp.XmpStructureType.Thumbnail">
            <summary>
            A thumbnail image for a file.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Xmp.XmpStructureType.Job">
            <summary>
            Job structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Xmp.XmpSchemaType">
            <summary>
            Enumerates types of the xmp schema.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Xmp.XmpSchemaType.DublinCoreSchema">
            <summary>
            Dublin Core Schema.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Xmp.XmpSchemaType.BasicSchema">
            <summary>
            Basic Schema.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Xmp.XmpSchemaType.RightsManagementSchema">
            <summary>
            Rights Management Schema.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Xmp.XmpSchemaType.BasicJobTicketSchema">
            <summary>
            Basic Job Ticket Schema.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Xmp.XmpSchemaType.PagedTextSchema">
            <summary>
            Paged Text Schema.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Xmp.XmpSchemaType.PDFSchema">
            <summary>
            Adobe PDF Schema.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Xmp.XmpSchemaType.Custom">
            <summary>
            Custom schema.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Xmp.XmpArrayType">
            <summary>
            Types of the xmp arrays.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Xmp.XmpArrayType.Unknown">
            <summary>
            Unknown array type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Xmp.XmpArrayType.Bag">
            <summary>
            Unordered array.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Xmp.XmpArrayType.Seq">
            <summary>
            Ordered array.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Xmp.XmpArrayType.Alt">
            <summary>
            Alternative array.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Lists.PdfUnorderedMarkerStyle">
            <summary>
            Specifies the marker style.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Lists.PdfUnorderedMarkerStyle.None">
            <summary>
            Marker have  no style.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Lists.PdfUnorderedMarkerStyle.Disk">
            <summary>
            Marker is like a disk.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Lists.PdfUnorderedMarkerStyle.Square">
            <summary>
            Marker is like a square.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Lists.PdfUnorderedMarkerStyle.Asterisk">
            <summary>
            Marker is like a Asterisk.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Lists.PdfUnorderedMarkerStyle.Circle">
            <summary>
            Marker is like a circle.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Lists.PdfUnorderedMarkerStyle.CustomString">
            <summary>
            Marker is custom string.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Lists.PdfUnorderedMarkerStyle.CustomImage">
            <summary>
            Marker is custom image.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Lists.PdfUnorderedMarkerStyle.CustomTemplate">
            <summary>
            Marker is custom template.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Lists.PdfListMarkerAlignment">
            <summary>
            Represents marker alignment.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Lists.PdfListMarkerAlignment.Left">
            <summary>
            Left alignment for marker.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Lists.PdfListMarkerAlignment.Right">
            <summary>
            Right alignment for marker.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfPageLayerCollection">
            <summary>
            Collection of the pages layers.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfPageLayerCollection.#ctor(Spire.Pdf.PdfPageBase)">
            <summary>
            Creates new collection.
            </summary>
            <param name="page">Parent page for the layers in the collection.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageLayerCollection.Add">
            <summary>
            Creates a new layer and adds it to the end of the collection.
            </summary>
            <returns>Created layer.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageLayerCollection.Add(System.String,System.Boolean)">
            <summary>
            Creates a new layer and adds it to the end of the collection.
            </summary>
            <param name="name">Layer Name.</param>
            <param name="isVisible">Layer Visibility.</param>
            <returns>Created layer.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageLayerCollection.Add(System.String)">
            <summary>
            Creates a new layer and adds it to the collection.
            </summary>
            <param name="LayerName">Layer Name.</param>
            <returns>Created layer.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageLayerCollection.Add(System.String,System.String,System.Boolean)">
            <summary>
            Creates a new layer and adds it to the end of the collection.
            </summary>
            <param name="name">Layer Name.</param>
            <param name="layerId">Layer Id.</param>
            <param name="isVisible">Layer Visibility.</param>
            <returns>Created layer.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageLayerCollection.DeleteOldLayer(System.String,System.Boolean,System.Boolean)">
            <summary>
            Delete exists layer by layer name.
            </summary>
            <param name="layerName">Layer Name.</param>
            <param name="isDelAllContent">Is delete all content include in this layer.</param>
            <param name="delLayerDocProperties">Is remove layerdefine in doc properties..</param>
            <returns>delete layer message.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageLayerCollection.Add(Spire.Pdf.PdfPageLayer)">
            <summary>
            Adds layer to the collection.
            </summary>
            <param name="layer">Layer object.</param>
            <remarks>The layers belonging to the same page can be added to the collection only.</remarks>
        </member>
        <member name="M:Spire.Pdf.PdfPageLayerCollection.Insert(System.Int32,Spire.Pdf.PdfPageLayer)">
            <summary>
            Inserts layer into collection.
            </summary>
            <param name="index">Index of the layer.</param>
            <param name="layer">Layer object.</param>
            <remarks>The layers belonging to the same page can be added to the collection only.</remarks>
        </member>
        <member name="M:Spire.Pdf.PdfPageLayerCollection.Remove(Spire.Pdf.PdfPageLayer)">
            <summary>
            Removes layer from the collection.
            </summary>
            <param name="layer">Layer object.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageLayerCollection.RemoveAt(System.Int32)">
            <summary>
            Removes layer by its index.
            </summary>
            <param name="index">Index of the layer.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageLayerCollection.Contains(Spire.Pdf.PdfPageLayer)">
            <summary>
            Checks whether collection contains layer.
            </summary>
            <param name="layer">Layer object.</param>
            <returns>True - if collection contains layer, False otherwise.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageLayerCollection.IndexOf(Spire.Pdf.PdfPageLayer)">
            <summary>
            Returns index of the layer in the collection if exists, -1 otherwise.
            </summary>
            <param name="layer">Layer object.</param>
            <returns>Returns index of the layer in the collection if exists, -1 otherwise.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfPageLayerCollection.Clear">
            <summary>
            Cleares the collection.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageLayerCollection.Item(System.Int32)">
            <summary>
            Gets or sets element by its index.
            </summary>
            <remarks>The layers belonging to the same page can be added to the collection only.</remarks>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfBezierCurve">
            <summary>
            Implements Bezier curve shape.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfBezierCurve.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="startPoint">The start point.</param>
            <param name="firstControlPoint">The first control point.</param>
            <param name="secondControlPoint">The second control point.</param>
            <param name="endPoint">The end point.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfBezierCurve.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="startPointX">The start point X.</param>
            <param name="startPointY">The start point Y.</param>
            <param name="firstControlPointX">The first control point X.</param>
            <param name="firstControlPointY">The first control point Y.</param>
            <param name="secondControlPointX">The second control point X.</param>
            <param name="secondControlPointY">The second control point Y.</param>
            <param name="endPointX">The end point X.</param>
            <param name="endPointY">The end point Y.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfBezierCurve.#ctor(Spire.Pdf.Graphics.PdfPen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="startPoint">The start point.</param>
            <param name="firstControlPoint">The first control point.</param>
            <param name="secondControlPoint">The second control point.</param>
            <param name="endPoint">The end point.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfBezierCurve.#ctor(Spire.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="startPointX">The start point X.</param>
            <param name="startPointY">The start point Y.</param>
            <param name="firstControlPointX">The first control point X.</param>
            <param name="firstControlPointY">The first control point Y.</param>
            <param name="secondControlPointX">The second control point X.</param>
            <param name="secondControlPointY">The second control point Y.</param>
            <param name="endPointX">The end point X.</param>
            <param name="endPointY">The end point Y.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBezierCurve.StartPoint">
            <summary>
            Gets or sets the start point.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBezierCurve.FirstControlPoint">
            <summary>
            Gets or sets the first control point.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBezierCurve.SecondControlPoint">
            <summary>
            Gets or sets the second control point.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfBezierCurve.EndPoint">
            <summary>
            Gets or sets the end point.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfAnnotationBorder">
            <summary>
            Represents the appearance of an annotation's border.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfAnnotationBorder.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfAnnotationBorder.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="borderWidth">A float value specifying the width of the annotation's border.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfAnnotationBorder.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="borderWidth">A float value specifying the width of the annotation's border.</param>
            <param name="horizontalRadius">A float value specifying the horizontal corner radius value.</param>
            <param name="verticalRadius">A float value specifying the vertical corner radius value.</param>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfAnnotationBorder.HorizontalRadius">
            <summary>
            Gets or sets a horizontal corner radius.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfAnnotationBorder.VerticalRadius">
            <summary>
            Gets or sets a vertical corner radius.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfAnnotationBorder.Width">
            <summary>
            Gets or sets the width of annotation's border. 
            </summary>
            <value>A float value specifying the width of the annotation's border. </value>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfAnnotationBorder.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets Pdf primitive representing this object.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfButtonWidgetFieldWidget">
            <summary>
            Represents a button field of an existing PDF document`s form.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfButtonWidgetFieldWidget.AddPrintAction">
            <summary>
            Adds Print action to current button field.</summary>
            <remarks>Clicking on the specified button will trigger the Print Dialog Box.</remarks>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfButtonWidgetFieldWidget.Text">
            <summary>
            Gets or sets the caption text.
            </summary>
            <value>A string value specifying the caption of the button.</value>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfButtonWidgetFieldWidget.WidgetItems">
            <summary>
            Gets the collection of button items.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfTextMarkupAnnotationWidget">
            <summary>
            Represents the loaded text markup annotation class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfTextMarkupAnnotationWidget.SetTitleText(System.String)">
            <summary>
            Sets the name of the field.
            </summary>
            <param name="name">New name of the field.</param>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfTextMarkupAnnotationWidget.TextMarkupAnnotationType">
            <summary>
            Gets or sets the annotation Type.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfTextMarkupAnnotationWidget.TextMarkupColor">
            <summary>
            Gets or sets the color.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfLineAnnotationWidget">
            <summary>
            Represents the loaded line annotation class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotationWidget.BackColor">
            <summary>
            Gets or sets the back color of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotationWidget.BeginLineStyle">
            <summary>
            Gets or sets the begin line style of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotationWidget.CaptionType">
            <summary>
            Gets or sets the caption type of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotationWidget.EndLineStyle">
            <summary>
            Gets or sets the end line style of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotationWidget.InnerLineColor">
            <summary>
            Gets or sets the inner line color of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotationWidget.LeaderLine">
            <summary>
            Gets or sets the leader line of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotationWidget.LeaderExt">
            <summary>
            Gets or sets the leader ext of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotationWidget.LineBorder">
            <summary>
            Gets the line border of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotationWidget.LineCaption">
            <summary>
            Gets or sets the line caption of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfLineAnnotationWidget.LineIntent">
            <summary>
            Gets or sets the line intent of the annotation.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfAnnotationWidgetCollection">
            <summary>
            Represents the loaded annotation colllection.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfAnnotationWidgetCollection.Add(Spire.Pdf.Annotations.PdfAnnotation)">
            <summary>
            Adds annotation to collection.
            </summary>
            <param name="annotation">Annotation to be added to collection.</param>
            <returns>Position of the annotation in collection.</returns>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfAnnotationWidgetCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfAnnotationWidgetCollection.Item(System.String)">
            <summary>
            Represents the annotation with specified name.
            </summary>
            <param name="name">The specified annotation name.</param>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfAnnotationWidgetCollection.PageWidget">
            <summary>
            Gets or sets the page.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.Fonts.PdfUsedFont">
            <summary>
            Represents the used fonts in a PDF document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.Fonts.PdfUsedFont.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.PdfPageWidget)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.Fonts.PdfUsedFont.Replace(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Replaces the specified new font.
            </summary>
            <param name="newFont">The new font.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.Fonts.PdfUsedFont.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.Fonts.PdfUsedFont.Size">
            <summary>
            Gets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.Fonts.PdfUsedFont.Style">
            <summary>
            Gets the style.
            </summary>
            <value>The style.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.Fonts.PdfUsedFont.Type">
            <summary>
            Gets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="M:Spire.Pdf.General.Render.ViewLayer.PsLayer.BrushLayer.#ctor(System.Byte[],Spire.Pdf.General.Paper.Drawing.PsMatrix)">
            <summary>
            Initializes a new instance of the BrushLayer
            </summary>
            <param name="imageBytes">The byte array of image for PsTextureBrush</param>
            <param name="matrix">Image Transform</param>
        </member>
        <member name="M:Spire.Pdf.General.Render.ViewLayer.PresentationFactory.CreateTextureBrush(System.Byte[],Spire.Pdf.General.Paper.Drawing.PsMatrix,Spire.Pdf.General.Render.ViewLayer.LayerType)">
            <summary>
            Create the brush
            </summary>
            <param name="imageBytes">The byte array of image for PsTextureBrush</param>
            <param name="matrix">Image transform</param>
            <param name="layerType">The presenter type</param>
            <returns></returns>
        </member>
        <member name="P:Spire.Pdf.General.Render.PdfRenderContext.Presenter">
            <summary>
            Gets the presenter.
            </summary>
            <value>The presenter.</value>
        </member>
        <member name="P:Spire.Pdf.General.Render.PdfRenderContext.GraphicsState">
            <summary>
            Graphic stats
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Render.PdfRenderContext.NonstrokingColorSpace">
            <summary>
            Gets or sets current colorsapce.
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Render.PdfRenderContext.StrokingColorSpace">
            <summary>
            Gets or sets Stroking colorsapce.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.Font.Type3Font.charCache">
            <summary>
            a cache of glyphs indexed by character 
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.Font.Type3Font.m_CharacterSpacing">
            <summary>
            Character Spacing width
            </summary>
        </member>
        <member name="P:Spire.Pdf.General.Render.Font.Type3Font.CharacterSpacing">
            <summary>
            Set Character Spacing width
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.Render.Font.TrueTypeFont.TrueTypeFont">
            <summary>
            Description of TrueTypeFont.
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.TrueTypeFont.TrueTypeFont.GetGlyph(System.Int32,System.Single)">
            <summary>
            Get the outline glyph for glyph of a given character code and name.
            </summary>
            <param name="glyphId"></param>        
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.TrueTypeFont.TrueTypeFont.GetArrayPoint(Spire.Pdf.General.Render.Font.OpenTypeFile.Table_glyf.SimpleGlyph.Coordinate[],System.Int32,System.Int32)">
            <summary>
            Gets the path to determine wherther you need to move the point ,return results
            </summary>
            <param name="coordinates">character path</param>
            <param name="startIndex"> int startIndex</param>
            <param name="endIndex"> int endIndex</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.Font.TrueTypeFont.TrueTypeFont.ReCalculateLineValues">
            <summary>
            Recalculate line values
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.Decode.FlateStream.ErrorBehaviorEnum.Fail">
            <summary>
            fail (by default)
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.Decode.FlateStream.ErrorBehaviorEnum.ReturnSuccessBytes">
            <summary>
            return something successfully read
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Paper.Font.Common.FontFactory.CreateFont(Spire.Pdf.General.Paper.Font.Common.Locator.FontDefinition,Spire.Pdf.General.Paper.Font.TTF.Internals.Parsing.TTFFileReader)">
            <summary>
            Creates a font, using font definition ( that contains font type and font files )
            </summary>
            <param name="fontDefinition"></param>
            <param name="fontReader"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.Pdf.Common.PdfToDocConverter">
            <summary>
            This class provides support for converting PDF into an XPS Document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Common.PdfToDocConverter.ConvertToWord(Spire.Pdf.PdfDocumentBase,System.IO.Stream)">
            <summary>
            Converts the specified WordDocument to PDF.
            </summary>
            <param name="wordDocument">The word document.</param>
            <returns>The PdfNewDocument.</returns>
        </member>
        <member name="M:Spire.Pdf.Common.PdfToDocConverter.CreateDocument(Spire.Pdf.General.Paper.Base.DocumentInfo,System.Boolean)">
            <summary>
            Creates the PDF document.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Common.PdfToDocConverter.AddDocumentProperties(Spire.Pdf.PdfDocumentInformation)">
            <summary>
            Adds the document properties.
            </summary>
            <param name="docProperties">The doc properties.</param>
        </member>
        <member name="M:Spire.Pdf.Common.PdfToDocConverter.DrawToWord(Spire.Pdf.PdfDocumentBase,System.IO.Stream)">
            <summary>
            Draws to PDF.
            </summary>
            <param name="images">The images.</param>
            <returns>The PdfNewDocument.</returns>
        </member>
        <member name="T:Spire.Pdf.AutomaticFields.PdfStaticField">
            <summary>
            Represents automatic field which value can be evaluated in the moment of creation.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfStaticField.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfStaticField.#ctor(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfStaticField.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfStaticField.#ctor(Spire.Pdf.Graphics.PdfFontBase,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="T:Spire.Pdf.AutomaticFields.PdfDocumentAuthorField">
            <summary>
            Represent automatic field which contains document's author name.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfDocumentAuthorField.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfDocumentAuthorField.#ctor(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfDocumentAuthorField.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfDocumentAuthorField.#ctor(Spire.Pdf.Graphics.PdfFontBase,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="T:Spire.Pdf.AutomaticFields.PdfDateTimeField">
            <summary>
            Represents date automated field.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfDateTimeField.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfDateTimeField.#ctor(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">A  object that specifies the font attributes (the family name, the size, and the style of the font) to use. </param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfDateTimeField.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">A  object that specifies the font attributes (the family name, the size, and the style of the font) to use. </param>
            <param name="brush">A  object that is used to fill the string. </param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfDateTimeField.#ctor(Spire.Pdf.Graphics.PdfFontBase,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">A  object that specifies the font attributes (the family name, the size, and the style of the font) to use. </param>
            <param name="bounds">Specifies the location and size of the field.</param>
        </member>
        <member name="P:Spire.Pdf.AutomaticFields.PdfDateTimeField.DateFormatString">
            <summary>
            Gets or sets the format string.
            </summary>
            <value>The format string.</value>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DCrossSection">
            <summary>
            Represents the clipping portion of the 3D artwork for the purpose of showing artwork cross sections.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DCrossSection.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DCrossSection.Center">
            <summary>
            Gets or sets the center of the cutting plane. 
            <remarks>A three element array specifying the center of rotation on the cutting plane in world space coordinates.</remarks>
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DCrossSection.Color">
            <summary>
            Gets or sets the cutting plane color. 
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DCrossSection.IntersectionColor">
            <summary>
            Gets or sets the intersection color.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DCrossSection.IntersectionIsVisible">
            <summary>
            Gets or sets a value indicating whether the intersection of cutting plane with 3D artwork is visible.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DCrossSection.Opacity">
            <summary>
            Gets or sets the cutting plane opacity. 
            <remarks>The opacity is given in percents, 100 is full opacity, 0 is no opacity.</remarks>
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DCrossSection.Orientation">
            <summary>
            Gets or sets the orientation of the cutting plane. 
            <value>A three-element array specifying the orientation of the cutting plane in world space, where each value represents the orientation in relation to the X, Y, and Z axes, respectively. </value>
            <remarks>If the array has more than 3 elements, only the first 3 will be considered. Exactly one of the values must be null, indicating an initial state of the cutting plane that is perpendicular to the corresponding axis and clipping all geometry on the positive side of that axis. The other two values must be numbers indicating the rotation of the plane, in degrees, around their corresponding axes. The order in which these rotations are applied should match the order in which the values appear in the array. </remarks>
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DCrossSection.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DCrossSectionCollection">
            <summary>
            Represents the collection of  objects. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DCrossSectionCollection.Add(Spire.Pdf.Annotations.Pdf3DCrossSection)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DCrossSectionCollection.Contains(Spire.Pdf.Annotations.Pdf3DCrossSection)">
            <summary>
            Determines whether [contains] [the specified value].
            </summary>
            <param name="value">The value.</param>
            <returns>
            if it contains the specified value, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DCrossSectionCollection.IndexOf(Spire.Pdf.Annotations.Pdf3DCrossSection)">
            <summary>
            Indexes the of.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DCrossSectionCollection.Insert(System.Int32,Spire.Pdf.Annotations.Pdf3DCrossSection)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DCrossSectionCollection.Remove(Spire.Pdf.Annotations.Pdf3DCrossSection)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DCrossSectionCollection.Item(System.Int32)">
            <summary>
            Gets or sets the  at the specified index.
            </summary>        
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DAnimation">
            <summary>
            Represents the lighting to apply for the 3D artwork.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DAnimation.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DAnimation.#ctor(Spire.Pdf.Annotations.PDF3DAnimationType)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="type">PDF 3D Animation Type.</param>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DAnimation.Type">
            <summary>
            Gets or sets the type of the animation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DAnimation.PlayCount">
            <summary>
            Gets or sets the play count. 
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DAnimation.TimeMultiplier">
            <summary>
            Gets or sets the rendering opacity.
            <remarks>A positive number specifying the time multiplier to be used when running the animation. A value greater than one shortens the time it takes to play the animation, or effectively speeds up the animation.</remarks>
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DAnimation.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfFieldActions">
            <summary>
            Represents actions to be performed as response to field events. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfFieldActions.#ctor(Spire.Pdf.Actions.PdfAnnotationActions)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="annotationActrions">The annotation actions.</param>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfFieldActions.KeyPressed">
            <summary>
            Gets or sets the JavaScript action to be performed when the user types a keystroke 
            into a text field or combo box or modifies the selection in a scrollable list box. 
            This action can check the keystroke for validity and reject or modify it.
            </summary>
            <value>A  object specifying the action to be executed when the user types a keystroke.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfFieldActions.Format">
            <summary>
            Gets or sets the JavaScript action to be performed before the field is formatted 
            to display its current value.
            </summary>
            <value>A  object specifying the action to be executed for formating the field value.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfFieldActions.Validate">
            <summary>
            Gets or sets the JavaScript action to be performed
            This action can check the new value for validity.
            </summary>
            <value>A  object specifying the action to be executed for validating the field value.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfFieldActions.Calculate">
            <summary>
            Gets or sets the JavaScript action to be performed to recalculate the value 
            of this field when that of another field changes.
            </summary>
            <value>A  object specifying the action to be executed for calculating the field value.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfFieldActions.MouseUp">
            <summary>
            Gets or sets the action to be performed when the mouse button is released 
            inside the fields area.
            </summary>
            <value>A  descendant specifying the action to be executed when the mouse button is released inside the field's area.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfFieldActions.MouseDown">
            <summary>
            Gets or sets the action to be performed when the mouse button is pressed inside the 
            fields area.
            </summary>
            <value>A  descendant specifying the action to be executed when the mouse button is pressed inside the field's area.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfFieldActions.GotFocus">
            <summary>
            Gets or sets the action to be performed when the field receives the 
            input focus.
            </summary>
            <value>A  descendant specifying the action to be executed when the field receives the input focus.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfFieldActions.LostFocus">
            <summary>
            Gets or sets the action to be performed when the field loses the 
            input focus.
            </summary>
            <value>A  descendant specifying the action to be executed when the field losts the input focus.</value>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfFieldActions.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfActionCollection">
            <summary>
            Represents collection of actions.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfActionCollection.Add(Spire.Pdf.Actions.PdfAction)">
            <summary>
            Adds the specified action.
            </summary>
            <param name="action">The action.</param>
            <returns>action</returns>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfActionCollection.Insert(System.Int32,Spire.Pdf.Actions.PdfAction)">
            <summary>
            Inserts the action at the specified position.
            </summary>
            <param name="index">The index.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfActionCollection.IndexOf(Spire.Pdf.Actions.PdfAction)">
            <summary>
            Gets the index of the action.
            </summary>
            <param name="action">The action.</param>
            <returns>action</returns>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfActionCollection.Contains(Spire.Pdf.Actions.PdfAction)">
            <summary>
            Determines whether the action is contained within collection.
            </summary>
            <param name="action">The action.</param>
            <returns>
            Value, indicating the presents of the action in collection.
            </returns>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfActionCollection.Clear">
            <summary>
            Clears this collection.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfActionCollection.Remove(Spire.Pdf.Actions.PdfAction)">
            <summary>
            Removes the specified action.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfActionCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the action at the specified position.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfActionCollection.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfActionCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.Xmp.XmpMetadata">
            <summary>
            Represents XMP metadata of the document.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.#ctor(Spire.Pdf.PdfDocumentInformation)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.#ctor(System.Xml.XmlDocument)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="xmp">The XMP.</param>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.Load(System.Xml.XmlDocument)">
            <summary>
            Loads XMP from the XML.
            </summary>
            <param name="xmp">XMP data in XMLDocument.</param>
            <remarks>If there was any data in this XMP, it will be replaced by the data from the XML.</remarks>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.Add(System.Xml.XmlElement)">
            <summary>
            Adds schema to the XMP in XML format.
            </summary>
            <param name="schema">XMP schema in XML format.</param>
            <remarks>If XMP already contains such schema - there will be two equal schemas at the xmp.</remarks>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.GetTitle">
            <summary>
            Return title if exists; otherwise return null
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.GetSubject">
            <summary>
            Return subject if exists; otherwise return null
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.GetAuthor">
            <summary>
            Return author if exists; otherwise return null
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.GetProducer">
            <summary>
            Return producer if exists; otherwise return null
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.GetKeywords">
            <summary>
            return keywords if exists; otherwise return null
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.GetCustomProperty(System.String)">
            <summary>
            Return specified custom field value if exists; otherwise return null
            </summary>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.GetAllCustomProperties">
            <summary>
            Return all custom properties if exsit; otherwise return empty Dictionary
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.GetCreateDate">
            <summary>
            Return create date if exists; otherwise return default DateTime
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.GetCreator">
            <summary>
            Return creator if exists; otherwise return null
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.GetModifyDate">
            <summary>
            Return modify date if exists; otherwise return default DateTime
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.SetTitle(System.String)">
            <summary>
            Set title to xmpmeta; if value is null, remove the node; if the node is null, create the node
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.SetSubject(System.String)">
            <summary>
            Set subject to xmpmeta; if value is null, remove the node; if the node is null, create the node
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.SetAuthor(System.String)">
            <summary>
            Set subject to xmpmeta; if value is null, remove the node; if the node is null, create the node
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.SetProducer(System.String)">
            <summary>
            Set producer to xmpmeta; if value is null, remove the node; if the node is null, create the node
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.SetKeywords(System.String)">
            <summary>
            Set keywords to xmpmeta; if value is null, remove the node; if the node is null, create the node
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.SetCustomProperty(System.String,System.String)">
            <summary>
            Set custom property to xmpmeta; if value is null, remove the node; if the node is null, create the node
            </summary>
            <param name="field"></param>
            <param name="value"></param>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.SetCreateDate(System.DateTime)">
            <summary>
            Set title to xmpmeta; if value is null, remove the node; if the node is null, create the node
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.SetCreator(System.String)">
            <summary>
            Set Creator to xmpmeta; if value is null, remove the node; if the node is null, create the node
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Spire.Pdf.Xmp.XmpMetadata.SetModifyDate(System.DateTime)">
            <summary>
            Set ModifyDates to xmpmeta; if value is null, remove the node; if the node is null, create the node
            </summary>
            <param name="dt"></param>
        </member>
        <member name="P:Spire.Pdf.Xmp.XmpMetadata.XmlData">
            <summary>
            Gets XMP data in XML format.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Xmp.XmpMetadata.NamespaceManager">
            <summary>
            Gets namespace manager of the Xmp metadata.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Xmp.XmpMetadata.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.Lists.PdfSortedList">
            <summary>
            Represents the ordered list.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfSortedList.#ctor">
            <summary>
            Creates ordered list.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfSortedList.#ctor(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfSortedList.#ctor(Spire.Pdf.PdfNumberStyle)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="style">The style.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfSortedList.#ctor(Spire.Pdf.Lists.PdfListItemCollection)">
            <summary>
            Creates ordered list using items.
            </summary>
            <param name="items">Items for a list.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfSortedList.#ctor(Spire.Pdf.Lists.PdfOrderedMarker)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="marker">The marker for the list.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfSortedList.#ctor(Spire.Pdf.Lists.PdfListItemCollection,Spire.Pdf.Lists.PdfOrderedMarker)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="items">The item collection.</param>
            <param name="marker">The marker for the list.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfSortedList.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The formatted text.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfSortedList.#ctor(System.String,Spire.Pdf.Lists.PdfOrderedMarker)">
            <summary>
            Initializes a new instance of the  class
            from formatted text that is splitted by new lines.
            </summary>
            <param name="text">The formatted text.</param>
            <param name="marker">The marker.</param>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfSortedList.Marker">
            <summary>
            Gets or sets marker of the list items.
            </summary>       
        </member>
        <member name="P:Spire.Pdf.Lists.PdfSortedList.MarkerHierarchy">
            <summary>
            True if user want to use numbering hierarchy, otherwise false.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Widget.PdfFieldWidgetTypes.PushButton">
            <summary>
            Identify push button field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Widget.PdfFieldWidgetTypes.CheckBox">
            <summary>
            Identify check box field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Widget.PdfFieldWidgetTypes.RadioButton">
            <summary>
            Identify radio button field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Widget.PdfFieldWidgetTypes.TextField">
            <summary>
            Identify text field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Widget.PdfFieldWidgetTypes.ListBox">
            <summary>
            Identify listbox field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Widget.PdfFieldWidgetTypes.ComboBox">
            <summary>
            Identify combobox field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Widget.PdfFieldWidgetTypes.SignatureField">
            <summary>
            Identify signature field.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Widget.PdfFieldWidgetTypes.Null">
            <summary>
            Identify that field has no type.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.DataFormat">
            <summary>
            Specifies the format of Export or Import data.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Widget.DataFormat.Xml">
            <summary>
            Specifies  XML file format
            </summary>
        </member>
        <member name="F:Spire.Pdf.Widget.DataFormat.Fdf">
            <summary>
            Specifies  Forms Data Format file format
            </summary>
        </member>
        <member name="F:Spire.Pdf.Widget.DataFormat.XFdf">
            <summary>
            Specifies  XFDF file format.
            </summary>    
        </member>
        <member name="T:Spire.Pdf.Widget.PdfSignatureFieldWidget">
            <summary>
            Represents the signature field of an existing PDF document`s form.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Widget.PdfSignatureFieldWidget.ParseDatetime(System.String)">
            <summary>
            Need to convert a date
            </summary>
            <param name="date">convert a date</param>
            <returns>DateTime</returns>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfCheckBoxWidgetWidgetItemCollection">
            <summary>
            Represents collection of text box group items.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfCheckBoxWidgetWidgetItemCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfPageNumberCollection">
            <summary>
            This class allows to manipulate with page
            labels of one of the sections.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfPageNumberCollection.Add(Spire.Pdf.PdfPageNumber)">
            <summary>
            Add the Page Label.
            </summary>
            <param name="pageLabel"></param>
        </member>
        <member name="P:Spire.Pdf.PdfPageNumberCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Spire.Pdf.PdfPageNumberCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Pdf.PdfPageNumberCollection.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.Clip.None">
            None -> 0
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.Clip.Width">
            Width -> 1
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.Clip.Height">
            Height -> 2
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.Clip.Both">
            Both -> 4
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.Margins.Left">
            float
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.Margins.Top">
            float
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.Margins.Right">
            float
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.Margins.Bottom">
            float
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.HTML2PDFOption.InitViewSize">
            Size
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.HTML2PDFOption.PageSize">
            Size
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.HTML2PDFOption.PageMargins">
            Margins
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.HTML2PDFOption.Layout">
            PdfLayoutType
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.HTML2PDFOption.FitToPage">
            Clip
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.HTML2PDFOption.FitToHtml">
            Clip
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.HTML2PDFOption.TrimPage">
            Clip
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.HTML2PDFOption.LoadHtmlTimeout">
            int
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.FRect.Left">
            float
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.FRect.Top">
            float
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.FRect.Width">
            float
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.FRect.Height">
            float
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.PdfLayoutHTMLResult.Bounds">
            FRect
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.PdfLayoutHTMLResult.Page">
            int
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.PdfLayoutHTMLResult.HTMLViewBounds">
            FRect
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.Proxy.pLogInfoMethod">
            <summary>
            Pointer to DebugLog.CLogInfo, C module uses it to write log message.
            </summary>
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.Proxy.hLib">
            <summary>
            Pointer to HTMLConverter.dll
            </summary>
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.Proxy.ConvertToHTMLMethod">
            <summary>
            Pointer to ConvertToHTML method.
            </summary>
        </member>
        <member name="F:Spire.Pdf.HtmlConverter.Qt.Proxy.dllPath">
            <summary>
            Path of dll folder, which contains HTMLConverter.dll
            </summary>
        </member>
        <member name="M:Spire.Pdf.HtmlConverter.Qt.HtmlConverter.Convert(System.String,System.String)">
             <summary>
             Convert an html page to a pdf file. The Qt html engine plugin is required.
             During conversion, JavaScript is enabled, default timeout is 30 seconds.
             The page size of output pdf file is A4 and margin is 90 (left-right) and 72 (top-bottom).
             </summary>
             <param name="url">Url address of the html page.</param>
             <param name="fileName">The output pdf file name.</param>
            [Obsolete("This method may be removed in the future.")]
        </member>
        <member name="M:Spire.Pdf.HtmlConverter.Qt.HtmlConverter.Convert(System.String,System.String,Spire.Pdf.HtmlConverter.LoadHtmlType)">
            <summary>
            Convert an html page to a pdf file. The Qt html engine plugin is required.
            During conversion, JavaScript is enabled, default timeout is 30 seconds.
            The page size of output pdf file is A4 and margin is 90 (left-right) and 72 (top-bottom).
            </summary>
            <param name="url"></param>
            <param name="fileName"></param>
            <param name="urlHtml"></param>
        </member>
        <member name="M:Spire.Pdf.HtmlConverter.Qt.HtmlConverter.Convert(System.String,System.String,System.Boolean,System.Int32,System.Drawing.SizeF,Spire.Pdf.Graphics.PdfMargins)">
             <summary>
             Convert an html page to a pdf file. The Qt html engine plugin is required.
             </summary>
             <param name="url">Url address of the html page.</param>
             <param name="fileName">The output pdf file name.</param>
             <param name="enableJavaScript">Indicates whether enable JavaScript.</param>
             <param name="timeout">The timeout of loading html.</param>
             <param name="pageSize">The page size of output pdf file.</param>
             <param name="margins">The margins of output pdf file.</param>
            [Obsolete("This method may be removed in the future.")]
        </member>
        <member name="M:Spire.Pdf.HtmlConverter.Qt.HtmlConverter.Convert(System.String,System.String,System.Boolean,System.Int32,System.Drawing.SizeF,Spire.Pdf.Graphics.PdfMargins,Spire.Pdf.HtmlConverter.LoadHtmlType)">
            <summary>
             Convert an html page to a pdf file. The Qt html engine plugin is required.
            </summary>
            <param name="url">Url address of the html page.</param>
            <param name="fileName">The output pdf file name.</param>
            <param name="enableJavaScript">Indicates whether enable JavaScript.</param>
            <param name="timeout">The timeout of loading html.</param>
            <param name="pageSize">The page size of output pdf file.</param>
            <param name="margins">The margins of output pdf file.</param>
            <param name="urlHtml">url or htmlcontent</param>
        </member>
        <member name="P:Spire.Pdf.HtmlConverter.Qt.HtmlConverter.PluginPath">
            <summary>
            Sets the path of the folder which cantains the HTMLConverter.dll
            and other dll files required for conversion.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Spire.Pdf.Graphics.ShapeLayouter.splitDiff" -->
        <member name="T:Spire.Pdf.General.Render.Font.TrueTypeFont.OutlineGlyph">
            <summary>
            Description of Glyph.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Exporting.PdfImageInfo">
            <summary>
            Represents the utility class to store information about Images and its location.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Exporting.PdfImageInfo.Bounds">
            <summary>
            Gets the Image Boundary location.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Exporting.PdfImageInfo.Image">
            <summary>
            Gets the Image.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Exporting.PdfImageInfo.Index">
            <summary>
            Gets the Image index.
            </summary>
        </member>
        <member name="T:Spire.Pdf.AutomaticFields.PdfPageNumberField">
            <summary>
            Represents page number field.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfPageNumberField.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfPageNumberField.#ctor(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfPageNumberField.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfPageNumberField.#ctor(Spire.Pdf.Graphics.PdfFontBase,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="T:Spire.Pdf.Annotations.Appearance.PdfAppearance">
            <summary>
            Represents the appearance of an annotation.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.Appearance.PdfAppearance.#ctor(Spire.Pdf.Annotations.PdfAnnotation)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="annotation">The  object specifies the annotation.</param>
        </member>
        <member name="P:Spire.Pdf.Annotations.Appearance.PdfAppearance.Normal">
            <summary>
            Gets or sets  object which applied to annotation in normal state.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Appearance.PdfAppearance.MouseHover">
            <summary>
            Gets or sets  object which applied to the annotation on hovering the mouse.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Appearance.PdfAppearance.Pressed">
            <summary>
            Gets or sets  object which applied to an annotation when mouse button is pressed.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Appearance.PdfAppearance.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridColumn.#ctor(Spire.Pdf.Grid.PdfGrid)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="grid">The grid.</param>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridColumn.Width">
            <summary>
            Gets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridColumn.Format">
            <summary>
            Gets or sets the format.
            </summary>
            <value>The format.</value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridColumn.Grid">
            <summary>
            Gets the grid.
            </summary>
            <value>The grid.</value>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridColumnCollection.Add">
            <summary>
            Adds this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridColumnCollection.Add(System.Int32)">
            <summary>
            Adds the specified count.
            </summary>
            <param name="count">The count.</param>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridColumnCollection.Add(Spire.Pdf.Grid.PdfGridColumn)">
            <summary>
            Adds the specified column.
            </summary>
            <param name="column">The column.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Spire.Pdf.Grid.PdfGridColumnCollection.GetEnumerator" -->
        <member name="P:Spire.Pdf.Grid.PdfGridColumnCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridColumnCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridColumnCollection.PdfGridColumnEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="M:Spire.Pdf.Grid.PdfGridColumnCollection.PdfGridColumnEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="P:Spire.Pdf.Grid.PdfGridColumnCollection.PdfGridColumnEnumerator.Current">
            <summary>
            Gets the current.
            </summary>
            <value>The current.</value>
        </member>
        <member name="T:Spire.Pdf.PdfSectionCollection">
            <summary>
            The collection of the sections.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfSectionCollection.Add(Spire.Pdf.PdfPageSettings)">
            <summary>
            Creates a section and adds it to the collection.
            </summary>
            <returns>Created section object.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfSectionCollection.IndexOf(Spire.Pdf.PdfSection)">
            <summary>
            Determines the index of the section.
            </summary>
            <param name="section">The section.</param>
            <returns>The index of the section.</returns>
        </member>
        <member name="M:Spire.Pdf.PdfSectionCollection.Insert(System.Int32,Spire.Pdf.PdfSection)">
            <summary>
            Inserts the section at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="section">The section.</param>
        </member>
        <member name="M:Spire.Pdf.PdfSectionCollection.Contains(Spire.Pdf.PdfSection)">
            <summary>
            Checks whether the collection contains the section.
            </summary>
            <param name="section">The section object.</param>
            <returns>True - if the sections belongs to the collection, False otherwise.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Spire.Pdf.PdfSectionCollection.GetEnumerator" -->
        <member name="P:Spire.Pdf.PdfSectionCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Spire.Pdf.PdfSectionCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Spire.Pdf.PdfSectionCollection.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the wrapped element.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfSectionCollection.PdfSectionEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element;
            false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="M:Spire.Pdf.PdfSectionCollection.PdfSectionEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="P:Spire.Pdf.PdfSectionCollection.PdfSectionEnumerator.Current">
            <summary>
            Gets the current section.
            </summary>
        </member>
        <member name="T:Spire.Pdf.PdfPageSettings">
            <summary>
            Represent class with setting of page.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfPageSettings.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfPageSettings.#ctor(System.Drawing.SizeF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="size">The size.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageSettings.#ctor(Spire.Pdf.PdfPageOrientation)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pageOrientation">The page orientation.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageSettings.#ctor(System.Drawing.SizeF,Spire.Pdf.PdfPageOrientation)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="size">The size.</param>
            <param name="pageOrientation">The page orientation.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageSettings.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="margins">The margins.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageSettings.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="leftMargin">The left margin.</param>
            <param name="topMargin">The top margin.</param>
            <param name="rightMargin">The right margin.</param>
            <param name="bottomMargin">The bottom margin.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageSettings.#ctor(System.Drawing.SizeF,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="size">The size.</param>
            <param name="margins">The margins.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageSettings.#ctor(System.Drawing.SizeF,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="size">The size.</param>
            <param name="leftMargin">The left margin.</param>
            <param name="topMargin">The top margin.</param>
            <param name="rightMargin">The right margin.</param>
            <param name="bottomMargin">The bottom margin.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageSettings.#ctor(System.Drawing.SizeF,Spire.Pdf.PdfPageOrientation,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="size">The size.</param>
            <param name="pageOrientation">The page orientation.</param>
            <param name="margins">The margins.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageSettings.#ctor(System.Drawing.SizeF,Spire.Pdf.PdfPageOrientation,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="size">The size.</param>
            <param name="pageOrientation">The page orientation.</param>
            <param name="leftMargin">The left margin.</param>
            <param name="topMargin">The top margin.</param>
            <param name="rightMargin">The right margin.</param>
            <param name="bottomMargin">The bottom margin.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageSettings.SetMargins(System.Single)">
            <summary>
            Sets the margins.
            </summary>
            <param name="margins">The margins.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageSettings.SetMargins(System.Single,System.Single)">
            <summary>
            Sets the margins.
            </summary>
            <param name="leftRight">The left right.</param>
            <param name="topBottom">The top bottom.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageSettings.SetMargins(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets the margins.
            </summary>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="right">The right.</param>
            <param name="bottom">The bottom.</param>
        </member>
        <member name="M:Spire.Pdf.PdfPageSettings.Clone">
            <summary>
            Creates a clone of the object.
            </summary>
            <returns>Cloned object.</returns>
        </member>
        <member name="P:Spire.Pdf.PdfPageSettings.Orientation">
            <summary>
            Gets or sets the page orientation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageSettings.Size">
            <summary>
            Gets or sets the size of the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageSettings.Width">
            <summary>
            Gets or sets the width of the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageSettings.Height">
            <summary>
            Gets or sets the height of the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageSettings.Margins">
            <summary>
            Gets or sets the margins of the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageSettings.Rotate">
            <summary>
            Gets or sets the number of degrees by which the page should be rotated clockwise when displayed or printed.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfPageSettings.Transition">
            <summary>
            Gets or sets the transition.
            </summary>
            <value>The transition.</value>
        </member>
        <member name="T:Spire.Pdf.PdfNewPage">
            <summary>
            Represents a single PDF page.
            </summary>
        </member>
        <member name="M:Spire.Pdf.PdfNewPage.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfNewPage.Size">
            <summary>
            Gets the size of the page.
            </summary>
        </member>
        <member name="P:Spire.Pdf.PdfNewPage.Annotations">
            <summary>
            Gets a collection of the annotations of the page.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfPie">
            <summary>
            Represents a pie shape.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPie.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPie.#ctor(Spire.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPie.#ctor(Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPie.#ctor(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPie.#ctor(System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPie.#ctor(Spire.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPie.#ctor(Spire.Pdf.Graphics.PdfPen,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="rectangle">The rectangle.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPie.#ctor(Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPie.#ctor(Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="rectangle">The rectangle.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPie.#ctor(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfPie.#ctor(Spire.Pdf.Graphics.PdfPen,Spire.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="rectangle">The rectangle.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfUnitConvertor">
            <summary>
            Class allowing to convert different unit metrics. Converting is 
            based on Graphics object DPI settings that is why for differ
            graphics settings must be created new instance. For example:
            printers often has 300 and greater dpi resolution, for compare
            default display screen dpi is 96.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfPopupAnnotation">
            <summary>
            Represents a Base class for popup annotation which can be either in open or closed state.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfPopupAnnotation.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfPopupAnnotation.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rectangle">RectangleF structure that specifies the bounds of the annotation.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfPopupAnnotation.#ctor(System.Drawing.RectangleF,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="rectangle">RectangleF structure that specifies the bounds of the annotation.</param>
            <param name="text">The string specifies the annotation text.</param>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfPopupAnnotation.Icon">
            <summary>
            Gets or sets icon style.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfPopupAnnotation.Open">
            <summary>
            Gets or sets value whether annotation is initially open or closed
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfPopupAnnotation.Appearance">
            <summary>
            Gets or sets appearance of the annotation.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfSoundIcon">
            <summary>
            Specifies the name of an icon to be used in displaying the sound annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfSoundIcon.Speaker">
            <summary>
            Speaker icon of sound link.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfSoundIcon.Mic">
            <summary>
            Microphone icon of sound link.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfAttachmentIcon">
            <summary>
            Specifies the type of icon to be used in displaying file attachment annotations.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAttachmentIcon.PushPin">
            <summary>
            Type of icon used in file attachment annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAttachmentIcon.Tag">
            <summary>
            Type of icon used in file attachment annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAttachmentIcon.Graph">
            <summary>
            Type of icon used in file attachment annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAttachmentIcon.Paperclip">
            <summary>
            Type of icon used in file attachment annotation.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfAnnotationFlags">
            <summary>
            Specifies the enumeration of the annotation flags.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationFlags.Default">
            <summary>
            Default value.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationFlags.Invisible">
            <summary>
            Annotation flag's key.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationFlags.Hidden">
            <summary>
            Annotation flag's key.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationFlags.Print">
            <summary>
            Annotation flag's key.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationFlags.NoZoom">
            <summary>
            Annotation flag's key.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationFlags.NoRotate">
            <summary>
            Annotation flag's key.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationFlags.NoView">
            <summary>
            Annotation flag's key.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationFlags.ReadOnly">
            <summary>
            Annotation flag's key.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationFlags.Locked">
            <summary>
            Annotation flag's key.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationFlags.ToggleNoView">
            <summary>
            Annotation flag's key.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfPopupIcon">
            <summary>
            Specifies the enumeration of popup annotation icons.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfPopupIcon.Note">
            <summary>
            Indicates note popup annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfPopupIcon.Comment">
            <summary>
            Indicates comment popup annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfPopupIcon.Help">
            <summary>
            Indicates help popup annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfPopupIcon.Insert">
            <summary>
            Indicates insert popup annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfPopupIcon.Key">
            <summary>
            Indicates key popup annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfPopupIcon.NewParagraph">
            <summary>
            Indicates new paragraph popup annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfPopupIcon.Paragraph">
            <summary>
            Indicates paragraph popup annotation.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfRubberStampAnnotationIcon">
            <summary>
            Specifies the enumeration of rubber stamp annotation icons.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfRubberStampAnnotationIcon.Approved">
            <summary>
            Indicates approved rubber stamp annotation
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfRubberStampAnnotationIcon.AsIs">
            <summary>
            Indicates AaIs rubber stamp annotation
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfRubberStampAnnotationIcon.Confidential">
            <summary>
            Indicates confidential rubber stamp annotation
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfRubberStampAnnotationIcon.Departmental">
            <summary>
            Indicates departmental rubber stamp annotation
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfRubberStampAnnotationIcon.Draft">
            <summary>
            Indicates draft rubber stamp annotation
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfRubberStampAnnotationIcon.Experimental">
            <summary>
            Indicates experimental rubber stamp annotation
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfRubberStampAnnotationIcon.Expired">
            <summary>
            Indicates expired rubber stamp annotation
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfRubberStampAnnotationIcon.Final">
            <summary>
            Indicates final rubber stamp annotation
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfRubberStampAnnotationIcon.ForComment">
            <summary>
            Indicates for comment rubber stamp annotation
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfRubberStampAnnotationIcon.ForPublicRelease">
            <summary>
            Indicates for public release rubber stamp annotation
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfRubberStampAnnotationIcon.NotApproved">
            <summary>
            Indicates not approved rubber stamp annotation
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfRubberStampAnnotationIcon.NotForPublicRelease">
            <summary>
            Indicates not for public release rubber stamp annotation
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfRubberStampAnnotationIcon.Sold">
            <summary>
            Indicates sold rubber stamp annotation
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfRubberStampAnnotationIcon.TopSecret">
            <summary>
            Indicates topsecret rubber stamp annotation
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfLineEndingStyle">
            <summary>
            Specifies the Line Ending Style to be used in the Line annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineEndingStyle.Square">
            <summary>
            Indicates Square
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineEndingStyle.Circle">
            <summary>
            Indicates Circle
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineEndingStyle.Diamond">
            <summary>
            Indicates Diamond
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineEndingStyle.OpenArrow">
            <summary>
            Indicates OpenArrow
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineEndingStyle.ClosedArrow">
            <summary>
            Indicates ClosedArrow
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineEndingStyle.None">
            <summary>
            Indicates None
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineEndingStyle.ROpenArrow">
            <summary>
            Indicates ROpenArrow
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineEndingStyle.Butt">
            <summary>
            Indicates Butt
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineEndingStyle.RClosedArrow">
            <summary>
            IdicaIndicatestes RClosedArrow
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineEndingStyle.Slash">
            <summary>
            Indicates Slash
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfLineBorderStyle">
            <summary>
            Specifies the Line Border Style is to be used in the Line annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineBorderStyle.Solid">
            <summary>
            Indicates Solid
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineBorderStyle.Dashed">
            <summary>
            Indicates Dashed
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineBorderStyle.Beveled">
            <summary>
            Indicates Beveled
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineBorderStyle.Inset">
            <summary>
            Indicates Inset
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineBorderStyle.Underline">
            <summary>
            Indicates Underline
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfLineIntent">
            <summary>
            Specifies the Line Intent Style is to be used in the Line annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineIntent.LineArrow">
            <summary>
            Indicates Line Arrow as intent of the line annotation
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfLineIntent.LineDimension">
            <summary>
            Indicates LineDimension as intent of the line annotation
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfLineCaptionType">
            <summary>
            Specifies the Line Caption Type is to be used in the Line annotation.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfTextMarkupAnnotationType">
            <summary>
            Specifies the Style of the Text Markup Annotation
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfTextMarkupAnnotationType.Highlight">
            <summary>
            The Text Markup Annotation Type is Highlight.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfTextMarkupAnnotationType.Underline">
            <summary>
            The Text Markup Annotation Type is Underline.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfTextMarkupAnnotationType.Squiggly">
            <summary>
            The Text Markup Annotation Type is Squiggly.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfTextMarkupAnnotationType.StrikeOut">
            <summary>
            The Text Markup Annotation Type is StrikeOut.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes">
            <summary>
            Specifies the annotation types.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.Highlight">
            <summary>
            Highlight type annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.Underline">
            <summary>
            Underline type annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.StrikeOut">
            <summary>
            StrikeOut type annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.Squiggly">
            <summary>
            Squiggly type annotation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.AnnotationStates">
            <summary>
            AnnotationStates type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.TextAnnotation">
            <summary>
            TextAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.LinkAnnotation">
            <summary>
            LinkAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.DocumentLinkAnnotation">
            <summary>
            DocumentLinkAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.FileLinkAnnotation">
            <summary>
            FileLinkAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.FreeTextAnnotation">
            <summary>
            FreeTextAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.LineAnnotation">
            <summary>
            LineAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.SquareandCircleAnnotation">
            <summary>
            SquareandCircleAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.PolygonandPolylineAnnotation">
            <summary>
            PolygonandPolylineAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.TextMarkupAnnotation">
            <summary>
            TextMarkupAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.CaretAnnotation">
            <summary>
            CaretAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.RubberStampAnnotation">
            <summary>
            RubberStampAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.LnkAnnotation">
            <summary>
            LnkAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.PopupAnnotation">
            <summary>
            PopupAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.FileAttachmentAnnotation">
            <summary>
            FileAttachmentAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.SoundAnnotation">
            <summary>
            SoundAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.MovieAnnotation">
            <summary>
            MovieAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.ScreenAnnotation">
            <summary>
            ScreenAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.WidgetAnnotation">
            <summary>
            WidgetAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.PrinterMarkAnnotation">
            <summary>
            PrinterMarkAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.TrapNetworkAnnotation">
            <summary>
            TrapNetworkAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.WatermarkAnnotation">
            <summary>
            WatermarkAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.TextWebLinkAnnotation">
            <summary>
            TextWebLinkAnnotation type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Annotations.PdfAnnotationWidgetTypes.Null">
            <summary>
            No annotation.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfButtonWidgetWidgetItem">
            <summary>
            Represents button group item of an existing PDF document`s form.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfAttachmentAnnotationWidget">
            <summary>
            Represents the attachment annotation from the loaded document.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfAttachmentAnnotationWidget.Icon">
            <summary>
            Gets or sets the icon of the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfAttachmentAnnotationWidget.FileName">
            <summary>
             Gets the attachment file name of the annotation.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfSignatureField">
            <summary>
            Represents signature field in the PDF Form.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfSignatureField.#ctor(Spire.Pdf.PdfPageBase,System.String,Spire.Pdf.Security.PdfSignature)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="page">Page which the field to be placed on.</param>
            <param name="name">The name of the field.</param>
            <param name="m_signature">a PdfSignature obj</param>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfSignatureField.DrawSignaturePicture(Spire.Pdf.Graphics.PdfCanvas,System.String,System.Single,System.Single)">
            <summary>
            Draw Picture Signature
            </summary>
            <param name="g"></param>
            <param name="picturePath"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfSignatureField.DrawSignatureText(Spire.Pdf.Graphics.PdfCanvas,Spire.Pdf.Graphics.PdfSolidBrush,Spire.Pdf.Graphics.PdfStringFormat,System.Single,System.Single,System.Single)">
            <summary>
            Draw Text Signature
            </summary>
            <param name="g"></param>
            <param name="solidBrush"></param>
            <param name="PdfStrFormat"></param>
            <param name="HalfWidth"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfSignatureField.DrawSignatureInformation(Spire.Pdf.Graphics.PdfCanvas,Spire.Pdf.Graphics.PdfSolidBrush,Spire.Pdf.Graphics.PdfStringFormat,System.Single,System.Single,System.Single)">
            <summary>
            Draw Signature information
            </summary>
            <param name="g"></param>
            <param name="solidBrush"></param>
            <param name="PdfStrFormat"></param>
            <param name="HalfWidth"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfSignatureField.DrawStringText(Spire.Pdf.Graphics.PdfCanvas,Spire.Pdf.Graphics.PdfFont,Spire.Pdf.Graphics.PdfSolidBrush,Spire.Pdf.Graphics.PdfStringFormat,System.String,System.Single,System.Single@,System.Single)">
            <summary>
            DrawString 
            </summary>
            <param name="g">PdfCanvas g</param>
            <param name="font">PdfFont font</param>
            <param name="solidBrush">PdfSolidBrush solidBrush</param>
            <param name="PdfStrFormat">PdfStringFormat PdfStrFormat</param>
            <param name="DrawText">text</param>
            <param name="x">point x</param>
            <param name="y">point y</param>
            <param name="HalfWidth">half - width</param>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfRadioButtonListField">
            <summary>
            Represents radio button field in the PDF form.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfRadioButtonListField.#ctor(Spire.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="page">Page which the field to be placed on.</param>
            <param name="name">The name of the field.</param>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfRadioButtonListField.SelectedIndex">
            <summary>
            Gets or sets the first selected item in the list. 
            </summary>
            <value>The index of the selected item.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfRadioButtonListField.SelectedValue">
            <summary>
            Gets or sets the value of the first selected item in the list.
            </summary>
            <value>The selected value of the list field.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfRadioButtonListField.SelectedItem">
            <summary>
            Gets the first selected item in the list.
            </summary>
            <value>The selected item of the field.</value>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfRadioButtonListField.Items">
            <summary>
            Gets the items of the radio button field.
            </summary>
            <value>The radio button field item collection.</value>
        </member>
        <member name="T:Spire.Pdf.Fields.PdfListBoxField">
            <summary>
            Represents list box field of the PDF form.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Fields.PdfListBoxField.#ctor(Spire.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="page">Page the field to be placed on.</param>
            <param name="name">The name of the field.</param>
        </member>
        <member name="P:Spire.Pdf.Fields.PdfListBoxField.MultiSelect">
            <summary>
            Gets or sets a value indicating whether the field is multiselectable.
            </summary>
            <value><c>true</c> if multiselectable; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Spire.Pdf.AutomaticFields.PdfDestinationPageNumberField">
            <summary>
            Represents class which displays destination page's number.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfDestinationPageNumberField.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfDestinationPageNumberField.#ctor(Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfDestinationPageNumberField.#ctor(Spire.Pdf.Graphics.PdfFontBase,Spire.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Spire.Pdf.AutomaticFields.PdfDestinationPageNumberField.#ctor(Spire.Pdf.Graphics.PdfFontBase,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="font">A  object that specifies the font attributes (the family name, the size, and the style of the font) to use. </param>
            <param name="bounds">Specifies the location and size of the field.</param>
        </member>
        <member name="P:Spire.Pdf.AutomaticFields.PdfDestinationPageNumberField.PageWidget">
            <summary>
            Get and sets the PdfLoadedPage
            </summary>
        </member>
        <member name="P:Spire.Pdf.AutomaticFields.PdfDestinationPageNumberField.Page">
            <summary>
            Gets or sets the page.
            </summary>
            <value>The page.</value>
        </member>
        <member name="T:Spire.Pdf.ColorSpace.PdfICCColorSpace">
            <summary>
            Represents an ICC based colorspace..
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfICCColorSpace.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.ColorSpace.PdfICCColorSpace.GetProfileData">
            <summary>
            Set the Color Profile.
            </summary>
            <returns>ICC profile data.</returns>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfICCColorSpace.AlternateColorSpace">
            <summary>
            Gets or sets the alternate color space.
            </summary>
            <value>The alternate color space to be used in case the one specified in the stream data is not supported.</value>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfICCColorSpace.ColorComponents">
            <summary>
            Gets or sets the color components.
            </summary>
            <value>The number of color components in the color space described by the ICC profile data.</value>
            <remarks>This number must match the number of components actually in the ICC profile. As of PDF 1.4, this value must be 1, 3 or 4.</remarks>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfICCColorSpace.ProfileData">
            <summary>
            Gets or sets the profile data.
            </summary>
            <value>The ICC profile data.</value>
        </member>
        <member name="P:Spire.Pdf.ColorSpace.PdfICCColorSpace.Range">
            <summary>
            Gets or sets the range for color components. 
            </summary>
            <value>An array of 2  ColorComponents numbers [ min0 max0 min1 max1 ... ] specifying the minimum and maximum valid values of the corresponding color components. These values must match the information in the ICC profile.</value>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfResetAction">
            <summary>
            Represents Pdf form's reset action.
            </summary>
            <remarks>This action allows a user to reset the form fields to their default values. </remarks>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfResetAction.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfResetAction.Include">
            <summary>
            Gets or sets a value indicating whether fields contained in Fields
            collection will be included for resetting.
            </summary>
            <value><c>true</c> if include; otherwise, <c>false</c>.</value>
            <remarks>
            If Include property is true, only the fields in this collection will be reset.
            If Include property is false, the fields in this collection are not reset
            and only the remaining form fields are reset.
            If the collection is null or empty, then all the form fields are reset
            and the Include property is ignored.
            </remarks>
        </member>
        <member name="T:Spire.Pdf.Lists.PdfMarker">
            <summary>
            Represents bullet for the list.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfMarker.#ctor(System.String,Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="text">The text of the marker.</param>
            <param name="font">Marker font.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfMarker.#ctor(Spire.Pdf.Lists.PdfUnorderedMarkerStyle)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="style">The style of the marker.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfMarker.#ctor(Spire.Pdf.Graphics.PdfImage)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="image">The image of the marker.</param>
        </member>
        <member name="M:Spire.Pdf.Lists.PdfMarker.#ctor(Spire.Pdf.Graphics.PdfTemplate)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="template">Template of the marker.</param>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfMarker.Template">
            <summary>
            Gets or sets template of the marker.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfMarker.Image">
            <summary>
            Gets or sets image of the marker.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfMarker.Text">
            <summary>
            Gets or sets marker text.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Lists.PdfMarker.Style">
            <summary>
            Gets or sets the style.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfColorMask">
            <summary>
            Represents the color mask for bitmaps.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfColorMask.#ctor(Spire.Pdf.Graphics.PdfRGBColor,Spire.Pdf.Graphics.PdfRGBColor)">
            <summary>
            Creates new PdfColorMask object.
            </summary>
            <param name="startColor">The start color.</param>
            <param name="endColor">The end color.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfColorMask.StartColor">
            <summary>
            Gets or sets the start color.
            </summary>
            <value>The start color.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfColorMask.EndColor">
            <summary>
            Gets or sets the end color.
            </summary>
            <value>The end color.</value>
        </member>
        <member name="T:Spire.Pdf.Widget.PdfRadioButtonWidgetWidgetItemCollection">
            <summary>
            Represents collection of radio box group items.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Widget.PdfRadioButtonWidgetWidgetItemCollection.Item(System.Int32)">
            <summary>
            Gets the  at the specified index.
            </summary>
            <returns>Returns  object at the specified index.</returns>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_SETMITERLIMIT">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.EMR_SETMITERLIMIT.eMiterLimit">
            <summary>
            New miter limit.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_MODIFYWORLDTRANSFORM">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.XFORM">
            <summary>
            The XFORM structure specifies a world-space to page-space transformation.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.XFORM.eM11">
            <summary>
            Specifies scaling/rotation/reflection
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.XFORM.eM12">
            <summary>
            Specified shear/rotation
            </summary>   
        </member>
        <member name="F:Spire.Pdf.Native.XFORM.eM21">
            <summary>
            Specified shear/rotation
            </summary>   
        </member>
        <member name="F:Spire.Pdf.Native.XFORM.eM22">
            <summary>
            Specifies scaling/rotation/reflection
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.XFORM.eDx">
            <summary>
            Specifies the horizontal translation component, in logical units.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.XFORM.eDy">
            <summary>
            Specifies the vertical translation component, in logical units.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_EXTCREATEPEN">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EXTLOGPEN">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Native.POINT.#ctor(System.Int32)">
            <summary>
            Point creation from lParam's data.
            </summary>
            <param name="lParam">lParam's data for initialing point structure.</param>
        </member>
        <member name="M:Spire.Pdf.Native.POINT.op_Implicit(Spire.Pdf.Native.POINT)~System.Drawing.Point">
            <summary>
            Performs an implicit conversion from  to <see cref="T:System.Drawing.Point"/>.
            </summary>
            <param name="p">The p.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Spire.Pdf.Native.POINT.op_Implicit(Spire.Pdf.Native.POINT)~System.Drawing.PointF">
            <summary>
            Performs an implicit conversion from  to <see cref="T:System.Drawing.PointF"/>.
            </summary>
            <param name="p">The p.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Spire.Pdf.Native.POINT.op_Implicit(System.Drawing.Point)~Spire.Pdf.Native.POINT">
            <summary>
            Performs an implicit conversion from  to <see cref="T:Spire.Pdf.Native.POINT"/>.
            </summary>
            <param name="p">The p.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="T:Spire.Pdf.Native.LOGBRUSH32">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_CREATEBRUSHINDIRECT">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_SELECTCLIPPATH">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.ABC">
            <summary>
            ABC structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.ColorDataEx">
            <summary>
            Structure for 32 bit images saving.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.ColorDataEx.Blue">
            <summary>
            Value of Blue chanel.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.ColorDataEx.Green">
            <summary>
            Value of Green chanel.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.ColorDataEx.Red">
            <summary>
            Value of Red chanel.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.ColorDataEx.Alpha">
            <summary>
            Value of Alpha chanel.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.ColorData">
            <summary>
            Structure for 24 bit images saving.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.ColorData.Blue">
            <summary>
            Value of Blue chanel.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.ColorData.Green">
            <summary>
            Value of Green chanel.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.ColorData.Red">
            <summary>
            Value of Red chanel.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.ColorData16">
            <summary>
            Structure for 24 bit images saving.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.ColorData16.Blue">
            <summary>
            Value of Blue chanel.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.ColorData16.Green">
            <summary>
            Value of Green chanel.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Native.ColorData16.Red">
            <summary>
            Value of Red chanel.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_POLYPOLYLINE16">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_POLYPOLYLINE">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_SETVIEWPORTEXTEX">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_SETVIEWPORTORGEX">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_SCALEVIEWPORTEXTEX">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_LINETO">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_POLYLINE16">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_POLYLINE">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_ALPHABLEND">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_OFFSETCLIPRGN">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_EXCLUDECLIPRECT">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_SETARCDIRECTION">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_FILLRGN">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.RGNDATA">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.RGNDATAHEADER">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_INVERTRGN">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_EXTSELECTCLIPRGN">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_SETTEXTCOLOR">
            <summary>
            Windows structure.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_SETWORLDTRANSFORM">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_CREATEPEN">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.LOGPEN">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_ANGLEARC">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_RECTANGLE">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_ROUNDRECT">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_ARC">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_FILLPATH">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.RGBQUAD">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.BITMAPINFOHEADER">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.BITMAPINFO">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.BITMAP">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_STRETCHDIBITS">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_BITBLT">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_STRETCHBLT">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.EMR_MASKBLT">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Native.LOGFONT">
            <summary>
            Record of Emf metafile.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfStringFormat">
            <summary>
            Represents the text layout information.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfStringFormat.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfStringFormat.#ctor(Spire.Pdf.Graphics.PdfTextAlignment)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="alignment">The alignment.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfStringFormat.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="columnFormat">The column format.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfStringFormat.#ctor(Spire.Pdf.Graphics.PdfTextAlignment,Spire.Pdf.Graphics.PdfVerticalAlignment)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="alignment">The alignment.</param>
            <param name="lineAlignment">The vertical alignment.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfStringFormat.Clone">
            <summary>
            Clones the object.
            </summary>
            <returns>The new created object.</returns>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfStringFormat.Alignment">
            <summary>
            Gets or sets the text alignment.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfStringFormat.LineAlignment">
            <summary>
            Gets or sets the vertical text alignment.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfStringFormat.RightToLeft">
            <summary>
            Gets or sets the value that indicates text direction mode.
            </summary>
            <remarks>Note, that this property doesn't change any alignment of the text. 
             property should be set manually to align the text. This property just enables or disables
            support of right to left approach. 
            If the value is False, the text won't be checked for right to left symbols occurrence.</remarks>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfStringFormat.CharacterSpacing">
            <summary>
            Gets or sets value that indicates a size among the characters in the text.
            When the glyph for each character in the string is rendered, this value is
            added to the the glyphs displacement.
            </summary>
            <remarks>
            Default value is 0.</remarks>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfStringFormat.WordSpacing">
            <summary>
            Gets or sets value that indicates a size among the words in the text.
            Word spacing works the same way as character spacing but applies only to the
            space character, code 32.
            </summary>
            <remarks>Default value is 0.</remarks>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfStringFormat.LineSpacing">
            <summary>
            Gets or sets value that indicates the vertical distance between the baselines of adjacent lines of text.
            </summary>
            <remarks>Default value is 0.</remarks>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfStringFormat.ClipPath">
            <summary>
            Gets or sets a value indicating whether the text
            should be a part of the clipping path.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfStringFormat.SubSuperScript">
            <summary>
            Gets or sets value indicating whether the text is in subscript or superscript mode.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfStringFormat.ParagraphIndent">
            <summary>
            Gets or sets the indent of the first line in the paragraph.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfStringFormat.LineLimit">
            <summary>
            Only entire lines are laid out in the formatting rectangle.
            By default layout continues until the end of the text, 
            or until no more lines are visible as a result of clipping, whichever comes first. 
            Note that the default settings allow the last line to be partially obscured by a formatting rectangle that is not a whole multiple of the line height.
            To ensure that only whole lines are seen, specify this value and be careful to provide a formatting rectangle at least as tall as the height of one line.
            </summary>
            <value><c>true</c> if [line limit]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfStringFormat.MeasureTrailingSpaces">
            <summary>
            Includes the trailing space at the end of each line.
            By default the boundary rectangle returned by the MeasureString method of PdfFont excludes the space at the end of each line.
            Set this flag to include that space in measurement.
            </summary>
            <value>
            	<c>true</c> if [measure trailing spaces]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfStringFormat.NoClip">
            <summary>
            Overhanging parts of glyphs, 
            and unwrapped text reaching outside the formatting rectangle are allowed to show. 
            By default all text and glyph parts reaching outside the formatting rectangle are clipped.
            </summary>
            <value><c>true</c> if [no clip]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfStringFormat.WordWrap">
            <summary>
            Gets or sets value indicating type of the text wrapping.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfFont">
            <summary>
            Represents one of the 14 standard PDF fonts.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFont.#ctor(Spire.Pdf.Graphics.PdfFontFamily,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="fontFamily">The font family.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFont.#ctor(Spire.Pdf.Graphics.PdfFontFamily,System.Single,Spire.Pdf.Graphics.PdfFontStyle)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="fontFamily">The font family.</param>
            <param name="size">The size.</param>
            <param name="style">The style.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFont.#ctor(Spire.Pdf.Graphics.PdfFont,System.Single)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="prototype">The prototype.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Spire.Pdf.Graphics.PdfFont.#ctor(Spire.Pdf.Graphics.PdfFont,System.Single,Spire.Pdf.Graphics.PdfFontStyle)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="prototype">The prototype.</param>
            <param name="size">The size.</param>
            <param name="style">The style.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.PdfFont.FontFamily">
            <summary>
            Gets the FontFamily.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.EndTextPageLayoutEventArgs">
            <summary>
            Contains information about layout`s element .
            </summary>
        </member>
        <member name="M:Spire.Pdf.Graphics.EndTextPageLayoutEventArgs.#ctor(Spire.Pdf.Graphics.PdfTextLayoutResult)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="P:Spire.Pdf.Graphics.EndTextPageLayoutEventArgs.Result">
            <summary>
            Gets a result of the lay outing on the page.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.BeginPageLayoutEventHandler">
            <summary>
            Delegate. Defines a type of the event before lay outing on the page.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.EndPageLayoutEventHandler">
            <summary>
            Delegate. Defines a type of the event after lay outing on the page.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.EndTextPageLayoutEventHandler">
            <summary>
            Delegate. Defines a type of the event after the text lay outing on the page.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfLinearGradientMode">
            <summary>
            Specifies the gradient direction of the linear gradient brush.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfLinearGradientMode.BackwardDiagonal">
            <summary>
            Specifies a gradient from upper right to lower left.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfLinearGradientMode.ForwardDiagonal">
            <summary>
            Specifies a gradient from upper left to lower right.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfLinearGradientMode.Horizontal">
            <summary>
            Specifies a gradient from left to right.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfLinearGradientMode.Vertical">
            <summary>
            Specifies a gradient from top to bottom.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Graphics.PdfExtend">
            <summary>
            Specifies the constant values specifying whether to extend the shading
            beyond the starting and ending points of the axis.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfExtend.None">
            <summary>
            Do not extend any point.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfExtend.Start">
            <summary>
            Extend start point.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfExtend.End">
            <summary>
            Extend end point.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.PdfExtend.Both">
            <summary>
            Extend both start and end points.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.ShadingType.Function">
            <summary>
            Function-based shading.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.ShadingType.Axial">
            <summary>
            Axial shading.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.ShadingType.Radial">
            <summary>
            Radial shading.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.ShadingType.FreeForm">
            <summary>
            Free-form Gouraud-shaded triangle mesh
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.ShadingType.LatticeForm">
            <summary>
            Lattice-form Gouraud-shaded triangle mesh.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.ShadingType.Coons">
            <summary>
            Coons patch mesh.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Graphics.ShadingType.Tensor">
            <summary>
            Tensor-product patch mesh.
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.PdfSoundEncoding">
            <summary>
            The encoding format for the sample data.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.PdfSoundEncoding.Raw">
            <summary>
            Unspecified or unsigned values in the range 0 to 2^B - 1.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.PdfSoundEncoding.Signed">
            <summary>
            Twos-complement values.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.PdfSoundEncoding.MuLaw">
            <summary>
            M-lawencoded samples.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.PdfSoundEncoding.ALaw">
            <summary>
            A-lawencoded samples.
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.PdfSoundChannels">
            <summary>
            The number of sound channels.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.PdfSoundChannels.Mono">
            <summary>
            One channel.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.PdfSoundChannels.Stereo">
            <summary>
            Two channels.
            </summary>
        </member>
        <member name="T:Spire.Pdf.General.PdfDestinationMode">
            <summary>
            Enumeration that represents fit mode.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.PdfDestinationMode.Location">
            <summary>
            Display the page designated by page, with the coordinates (left, top) positioned
            at the top-left corner of the window and the contents of the page magnified
            by the factor zoom. A NULL value for any of the parameters left, top, or
            zoom specifies that the current value of that parameter is to be retained unchanged.
            A zoom value of 0 has the same meaning as a NULL value.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.PdfDestinationMode.FitToPage">
            <summary>
            Display the page designated by page, with its contents magnified just enough
            to fit the entire page within the window both horizontally and vertically. If
            the required horizontal and vertical magnification factors are different, use
            the smaller of the two, centering the page within the window in the other
            dimension.
            </summary>
        </member>
        <member name="F:Spire.Pdf.General.Render.TextElement.m_wordSpacing">
            <summary>
            word spacing 
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.TextElement.RenderText(System.Drawing.Graphics,Spire.Pdf.General.Render.PdfToImageRenderer,System.Boolean)">
            <summary>
            Render text embed font or installed system font
            </summary>
            <param name="g"></param>
            <param name="render"></param>
            <param name="IncreaseWidth"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.TextElement.RenderTextWidthNativeFont(System.Drawing.Graphics,Spire.Pdf.General.Render.PdfToImageRenderer,System.Boolean)">
            <summary>
            Render text using installed system font.
            </summary>
            <param name="g"></param>
            <param name="render"></param>
            <param name="IncreaseWidth"></param>
        </member>
        <member name="M:Spire.Pdf.General.Render.TextElement.GetCharFromStdNameEncoding(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="P:Spire.Pdf.General.Render.TextElement.WordSpacing">
            <summary>
            word spacing 
            </summary>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.GetImageFromStream(System.IO.Stream)">
            <summary>
            Stream stream  ,Bug_337
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.GetJpegImageDeviceGray(Spire.Pdf.General.Render.ColorSpace.PDFColorSpace,System.IO.Stream,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Get Bitmap Stream  from DeviceGray Color Space 
            </summary>
            <param name="colorspace">PDFColorSpace colorspace</param>
            <param name="data">Stream data</param>
            <param name="grayWidth">int grayWidth</param>
            <param name="grayHeight">int grayHeight</param>
            <param name="mask">bool mask</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.GetJpegImageDeviceGray(System.IO.Stream,System.Boolean)">
            <summary>
            Get Bitmap Stream  from DeviceGray Color Space 
            </summary>
            <param name="data">image Stream</param>
            <param name="mask">bool mask</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.GetColorSpace(Spire.Pdf.Primitives.PdfDictionary,System.Boolean)">
            <summary>
            Get color space name
            </summary>
            <param name="imageDict"></param>
            <param name="allowIndexed"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfImageDecoder.GetSubColorSpace(Spire.Pdf.Interfaces.IPdfPrimitive,System.Boolean)">
            <summary>
            
            </summary>
            <param name="imageDict"></param>
            <param name="allowIndexed"></param>
            <returns></returns>
        </member>
        <member name="P:Spire.Pdf.General.Render.PdfImageDecoder.ImageMask">
            <summary>
            Gets Image mask.
            </summary>        
        </member>
        <member name="M:Spire.Pdf.General.Render.PdfElement.ContentParser.ParseInlineImage">
             <summary>
             Parse an inline image.  An inline image starts with BI (already
             read, contains a dictionary until ID, and then image data until
             EI.
             </summary>
            
        </member>
        <member name="T:Spire.Pdf.General.Render.Font.TrueTypeFont.GlyphOutline">
            <summary>
            Description of Glyph.
            </summary>
        </member>
        <member name="M:Spire.Pdf.FontStructure.Decode(System.String)">
            <summary>
            Takes in the encoded text, identifies the type of encoding used, decodes the encoded text, returns the decoded text.
            </summary>
            <param name="textToDecode">
            Encoded string from the PDF document.
            </param>
            <returns>
            Decoded string, human readable.
            </returns>
        </member>
        <member name="M:Spire.Pdf.FontStructure.GetLiteralString(System.String)">
            <summary>
            Decodes the octal text in the encoded text.
            </summary>
            <param name="encodedText">The text encoded from the PDF document</param>
            <returns>Decoded text with replaced octal texts</returns>
        </member>
        <member name="M:Spire.Pdf.FontStructure.GetHexaDecimalString(System.String)">
            <summary>
            Decodes the HEX encoded string.
            </summary>
            <param name="hexEncodedText">
            HEX encoded string.
            </param>
            <returns>
            Decoded string.
            </returns>
        </member>
        <member name="M:Spire.Pdf.FontStructure.GetFontName">
            <summary>
            Extracts the font name associated with the string.
            </summary>
            <returns>
            Font name.
            </returns>
        </member>
        <member name="M:Spire.Pdf.FontStructure.GetFontStyle">
            <summary>
            Extracts the font style associated with the text string
            </summary>
            <returns>
            Font style.
            </returns>
        </member>
        <member name="M:Spire.Pdf.FontStructure.GetCharacterMapTable">
            <summary>
            Builds the mapping table that is used to map the decoded text to get the expected text.
            </summary>
            <returns>
            A dictionary with key as the encoded element and value as the value to be mapped to.
            </returns>
        </member>
        <member name="M:Spire.Pdf.FontStructure.GetDifferencesDictionary">
            <summary>
            Builds the mapping table that is used to map the decoded text to get the expected text.
            </summary>		
        </member>
        <member name="M:Spire.Pdf.FontStructure.MapCharactersFromTable(System.String)">
            <summary>
            Takes in the decoded text and maps it with its corresponding entry in the CharacterMapTable
            </summary>
            <param name="decodedText">decoded text </param>
            <returns>Expected text string</returns>
        </member>
        <member name="M:Spire.Pdf.FontStructure.MapDifferences(System.String)">
            <summary>
            Takes in the decoded text and maps it with its corresponding entry in the CharacterMapTable
            </summary>
            <param name="encodedText">encoded text </param>
            <returns>Expected text string</returns>
        </member>
        <member name="M:Spire.Pdf.FontStructure.EscapeSymbols(System.String)">
            <summary>
            Method to remove the new line character
            </summary>
            <param name="text">Text with new line character</param>
            <returns>Text without new line character</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Spire.Pdf.FontStructure.GetHexCode(System.String)" -->
        <member name="P:Spire.Pdf.FontStructure.FontName">
            <summary>
            Holds the font name associated with the text element
            </summary>
        </member>
        <member name="P:Spire.Pdf.FontStructure.FontStyle">
            <summary>
            Holds the font style of the text to be decoded.
            </summary>
        </member>
        <member name="P:Spire.Pdf.FontStructure.CharacterMapTable">
            <summary>
            Represents the mapping table which contains the mapping value to the encoded text in the PDF document
            </summary>
        </member>
        <member name="T:Spire.Pdf.DrawPageInBookletEventHandler">
            <summary>
            Delegate for handling event when drawing page in a booklet.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="args">The arguments of the event.</param>
            <remarks>This event is raised when starting/finished drawing a page of the source file in a booklet.</remarks>
        </member>
        <member name="T:Spire.Pdf.DrawPageInBookletEventArgs">
            <summary>
            Represents DrawPageInBooklet Event arguments.
            </summary>
        </member>
        <member name="P:Spire.Pdf.DrawPageInBookletEventArgs.PageInSource">
            <summary>
            Gets the page of the source file.
            </summary>
        </member>
        <member name="P:Spire.Pdf.DrawPageInBookletEventArgs.PageNumberInSource">
            <summary>
            Gets the index of the source page, basing on 0.
            </summary>
        </member>
        <member name="P:Spire.Pdf.DrawPageInBookletEventArgs.PageInBooklet">
            <summary>
            Gets the page of the booklet.
            </summary>
        </member>
        <member name="P:Spire.Pdf.DrawPageInBookletEventArgs.PageNumberInBooklet">
            <summary>
            Gets the index of the booklet page, basing on 0.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.PdfTextMarkupAnnotation">
            <summary>
            Represents the text markup annotation.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfTextMarkupAnnotation.#ctor">
            <summary>
            Initializes new instance of  class.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfTextMarkupAnnotation.#ctor(System.String,System.String,System.String,System.Drawing.PointF,Spire.Pdf.Graphics.PdfFontBase)">
            <summary>
            Initializes new instance of  class.
            </summary>
            <param name="markupTitle">The markup annotation title.</param>
            <param name="text">The string specifies the text of the annotation.</param>
            <param name="markupText">The string specifies the markup text of the annotation.</param>
            <param name="point">The location of the markup text annotation.</param>
            <param name="pdfFont">The  specifies the text appearance of the markup text annotation.</param>
        </member>
        <member name="M:Spire.Pdf.Annotations.PdfTextMarkupAnnotation.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes new instance of  class.
            </summary>
            <param name="rectangle">The bounds of the annotation.</param>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfTextMarkupAnnotation.TextMarkupAnnotationType">
            <summary>
            Gets or sets TextMarkupAnnotationType .
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.PdfTextMarkupAnnotation.TextMarkupColor">
            <summary>
            Gets or sets text markup color.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Annotations.Pdf3DActivation">
            <summary>
            Represents the activation states for the 3D annotation. 
            </summary>
        </member>
        <member name="M:Spire.Pdf.Annotations.Pdf3DActivation.#ctor">
            <summary>
            Initializes the new instance of  class.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DActivation.ActivationMode">
            <summary>
            Gets or sets the activation mode for the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DActivation.DeactivationMode">
            <summary>
            Gets or sets the deactivation mode for the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DActivation.ActivationState">
            <summary>
            Gets or sets the activation state for the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DActivation.DeactivationState">
            <summary>
            Gets or sets the deactivation state for the annotation.
            </summary>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DActivation.ShowToolbar">
            <summary>
            Gets or sets a value indicating whether the toolbar should be displayed when the annotation is activated or not. 
            </summary>
            <value>If true, a toolbar should be displayed by default when the annotation is activated and given focus. If false, a toolbar should not be displayed by default. </value>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DActivation.ShowUI">
            <summary>
            Gets or sets a value indicating whether the UI for managing the 3D artwork should be displayed when the annotation is activated. 
            </summary>
            <value>If true, the user interface should be made visible when the annotation is activated. If false, the user interface should not be made visible by default.</value>
        </member>
        <member name="P:Spire.Pdf.Annotations.Pdf3DActivation.Spire#Pdf#Interfaces#IPdfWrapper#Element">
            <summary>
            Gets the element.
            </summary>
            <value></value>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfFilePathType">
            <summary>
            Specifies the file path type.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfFilePathType.Relative">
            <summary>
            Specifies the file location with out including the domain name.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfFilePathType.Absolute">
            <summary>
            Specifies the location, including the domain name.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfActionDestination">
            <summary>
            Specifies the available named actions supported by the viewer. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfActionDestination.FirstPage">
            <summary>
            Navigate to first page.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfActionDestination.LastPage">
            <summary>
            Navigate to last page.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfActionDestination.NextPage">
            <summary>
            Navigate to next page.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfActionDestination.PrevPage">
            <summary>
            Navigate to previous page.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfSubmitFormFlags">
            <summary>
            Specifies the available data formats for submitting the form data.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfSubmitFormFlags.IncludeExclude">
            <summary>
            If clear, the Fields array specifies which fields to
            include in the submission. 
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfSubmitFormFlags.IncludeNoValueFields">
            <summary>
            If set, all fields designated by the Fields array and the Include/
            Exclude flag are submitted, regardless of whether they have a value. 
            For fields without a value, only the
            field name is transmitted.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfSubmitFormFlags.ExportFormat">
            <summary>
            Meaningful only if the SubmitPDF and XFDF flags are clear. If set,
            field names and values are submitted in HTML Form format. If
            clear, they are submitted in Forms Data Format
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfSubmitFormFlags.GetMethod">
            <summary>
            If set, field names and values are submitted using an HTTP GET
            request. If clear, they are submitted using a POST request. This flag
            is meaningful only when the ExportFormat flag is set; if ExportFormat
            is clear, this flag must also be clear.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfSubmitFormFlags.SubmitCoordinates">
            <summary>
            If set, the coordinates of the mouse click that caused the submitform
            action are transmitted as part of the form data.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfSubmitFormFlags.Xfdf">
            <summary>
            Meaningful only if the SubmitPDF flags are clear. If set,
            field names and values are submitted as XML Forms Data Format .
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfSubmitFormFlags.IncludeAppendSaves">
            <summary>
            Meaningful only when the form is being submitted in
            Forms Data Format (that is, when both the XFDF and ExportFormat
            flags are clear). If set, the submitted FDF file includes the contents
            of all incremental updates to the underlying PDF document,
            as contained in the Differences entry in the FDF dictionary.
            If clear, the incremental updates are not included.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfSubmitFormFlags.IncludeAnnotations">
            <summary>
            Meaningful only when the form is being submitted in
            Forms Data Format (that is, when both the XFDF and ExportFormat
            flags are clear). If set, the submitted FDF file includes all markup
            annotations in the underlying PDF document.
            If clear, markup annotations are not included.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfSubmitFormFlags.SubmitPdf">
            <summary>
            If set, the document is submitted as PDF, using the
            MIME content type application/pdf (described in Internet RFC
            2045, Multipurpose Internet Mail Extensions (MIME), Part One:
            Format of Internet Message Bodies; see the Bibliography). If set, all
            other flags are ignored except GetMethod.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfSubmitFormFlags.CanonicalFormat">
            <summary>
            If set, any submitted field values representing dates are
            converted to the standard format described.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfSubmitFormFlags.ExclNonUserAnnots">
            <summary>
            Meaningful only when the form is being submitted in
            Forms Data Format (that is, when both the XFDF and
            ExportFormat flags are clear) and the IncludeAnnotations flag is
            set. If set, it includes only those markup annotations whose T entry
            matches the name of the current user, as determined
            by the remote server to which the form is being submitted.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfSubmitFormFlags.ExclFKey">
            <summary>
            Meaningful only when the form is being submitted in
            Forms Data Format (that is, when both the XFDF and ExportFormat
            flags are clear). If set, the submitted FDF excludes the F entry.
            </summary>
        </member>
        <member name="F:Spire.Pdf.Actions.PdfSubmitFormFlags.EmbedForm">
            <summary>
            Meaningful only when the form is being submitted in
            Forms Data Format (that is, when both the XFDF and ExportFormat
            flags are clear). If set, the F entry of the submitted FDF is a file
            specification containing an embedded file stream representing the
            PDF file from which the FDF is being submitted.
            </summary>
        </member>
        <member name="T:Spire.Pdf.Actions.PdfNamedAction">
            <summary>
            Represents an action which perfoms the named action.
            </summary>
        </member>
        <member name="M:Spire.Pdf.Actions.PdfNamedAction.#ctor(Spire.Pdf.Actions.PdfActionDestination)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <param name="destination">The  object representing destination of an action.</param>
        </member>
        <member name="P:Spire.Pdf.Actions.PdfNamedAction.Destination">
            <summary>
            Gets or sets the destination.
            </summary>
            <value>The  object representing destination of an action.</value>
        </member>
    </members>
</doc>
